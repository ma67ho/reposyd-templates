<?xml version="1.0" encoding="UTF-8" ?>
<project name="reposyd" id="Project_292fb82e" template="Default" database="Sqlite" >
	<schema name="Default" schemaname="Default" >
		<table name="cm_baseline" generator_rows="150" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="name" type="varchar" length="255" jt="12" mandatory="y" />
			<column name="description" type="text" jt="-1" />
			<column name="major" type="integer" jt="4" mandatory="y" />
			<column name="minor" type="integer" jt="4" mandatory="y" />
			<column name="type" type="varchar" length="100" jt="12" />
			<column name="timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<index name="pk_cm_baseline" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="unq_cm_baseline_major_minor" unique="UNIQUE" >
				<column name="uuid" />
				<column name="major" />
				<column name="minor" />
			</index>
		</table>
		<table name="cm_baseline_solution" >
			<column name="solution" type="char" length="38" jt="1" mandatory="y" />
			<column name="baseline" type="char" length="38" jt="1" mandatory="y" />
			<index name="pk_baseline_solution" unique="NORMAL" >
				<column name="solution" />
				<column name="baseline" />
			</index>
			<index name="Idx_cm_baseline_solution_baseline" unique="NORMAL" >
				<column name="baseline" />
			</index>
			<fk name="fk_cm_baseline_solution_baseline" to_schema="Default" to_table="cm_baseline" delete_action="cascade" >
				<fk_column name="baseline" pk="uuid" />
			</fk>
			<fk name="fk_cm_baseline_solution_solution" to_schema="Default" to_table="rp_solution_space" delete_action="cascade" >
				<fk_column name="solution" pk="uuid" />
			</fk>
		</table>
		<table name="cm_ddl" generator_rows="337" >
			<column name="bl_uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="ddl_uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="ddl_revision" type="integer" jt="4" mandatory="y" />
			<index name="idx_cm_ddl" unique="NORMAL" >
				<column name="bl_uuid" />
			</index>
			<index name="idx_cm_ddl_0" unique="NORMAL" >
				<column name="ddl_uuid" />
			</index>
			<fk name="fk_cm_ddl_cm_baseline" to_schema="Default" to_table="cm_baseline" delete_action="cascade" >
				<fk_column name="bl_uuid" pk="uuid" />
			</fk>
			<fk name="fk_cm_ddl_dd_def_link" to_schema="Default" to_table="dd_def_link" delete_action="cascade" >
				<fk_column name="ddl_uuid" pk="uuid" />
			</fk>
		</table>
		<table name="cm_ddo" generator_rows="337" >
			<column name="bl_uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="ddo_uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="ddo_revision" type="integer" jt="4" mandatory="y" />
			<index name="idx_cm_ddo_0" unique="NORMAL" >
				<column name="ddo_uuid" />
			</index>
			<index name="idx_cm_ddo" unique="NORMAL" >
				<column name="bl_uuid" />
			</index>
			<fk name="fk_cm_ddo_cm_baseline" to_schema="Default" to_table="cm_baseline" delete_action="cascade" >
				<fk_column name="bl_uuid" pk="uuid" />
			</fk>
			<fk name="fk_cm_ddo_dd_object" to_schema="Default" to_table="dd_object" delete_action="cascade" >
				<fk_column name="ddo_uuid" pk="uuid" />
			</fk>
		</table>
		<table name="cm_request" generator_rows="150" >
			<comment><![CDATA[Contains change requests raised against a specific version of a DDO or DDL]]></comment>
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="description" type="text" jt="-1" />
			<column name="state" type="varchar" length="100" jt="12" mandatory="y" >
				<defo>&#039;invalid&#039;</defo>
			</column>
			<column name="repository" type="char" length="38" jt="1" />
			<index name="pk_cm_request" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
		</table>
		<table name="cm_request_solution" generator_rows="225" >
			<column name="solution" type="char" length="38" jt="1" mandatory="y" />
			<column name="request" type="char" length="38" jt="1" mandatory="y" />
			<index name="pk_cm_variant_request" unique="PRIMARY_KEY" >
				<column name="solution" />
				<column name="request" />
			</index>
			<index name="idx_cm_variant_request_request" unique="NORMAL" >
				<column name="request" />
			</index>
			<index name="idx_cm_variant_request_solution" unique="NORMAL" >
				<column name="solution" />
			</index>
			<fk name="fk_cm_variant_request" to_schema="Default" to_table="cm_request" delete_action="cascade" >
				<fk_column name="request" pk="uuid" />
			</fk>
			<fk name="fk_cm_variant_solution" to_schema="Default" to_table="rp_solution_space" delete_action="cascade" >
				<fk_column name="solution" pk="uuid" />
			</fk>
		</table>
		<table name="da_analysis_container" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="solution" type="char" length="38" jt="1" mandatory="y" />
			<column name="name" type="varchar" length="255" jt="12" />
			<column name="definition" type="char" length="38" jt="1" mandatory="y" />
			<column name="state" type="varchar" length="100" jt="12" >
				<defo>&#039;closed&#039;</defo>
				<comment><![CDATA[closed / open]]></comment>
			</column>
			<column name="description" type="text" jt="-1" />
			<column name="repository" type="char " length="38" jt="12" mandatory="y" />
			<index name="idx_da_analysis_definition" unique="NORMAL" >
				<column name="definition" />
			</index>
			<index name="pk_da_analysis_uuid" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<fk name="fk_da_analysis_da_definition" to_schema="Default" to_table="da_analysis_definition" delete_action="cascade" update_action="cascade" >
				<fk_column name="definition" pk="uuid" />
			</fk>
		</table>
		<table name="da_analysis_definition" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="project" type="char" length="38" jt="1" mandatory="y" />
			<column name="name" type="varchar" length="255" jt="12" />
			<column name="description" type="text" jt="-1" />
			<column name="type" type="varchar" length="100" jt="12" >
				<comment><![CDATA[Requirements Analysis / Compliance Statement]]></comment>
			</column>
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<column name="properties" type="text" length="2000000000" decimal="10" jt="-1" />
			<index name="Pk_as_definition_uuid" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
		</table>
		<table name="da_analysis_object" >
			<column name="result" type="char" length="38" jt="1" />
			<column name="ddo" type="char" length="38" jt="1" />
			<column name="revision_from" type="integer" jt="4" />
			<column name="revision_to" type="integer" jt="4" >
				<defo>-1</defo>
			</column>
			<column name="matrix" type="char" length="100" jt="1" >
				<defo>&#039;row&#039;</defo>
				<comment><![CDATA[row or column]]></comment>
			</column>
			<index name="idx_da_analysis_object_result" unique="NORMAL" >
				<column name="result" />
			</index>
			<fk name="fk_da_analysis_object" to_schema="Default" to_table="da_analysis_result" delete_action="cascade" >
				<fk_column name="result" pk="uuid" />
			</fk>
		</table>
		<table name="da_analysis_result" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="container" type="char" length="38" jt="1" mandatory="y" />
			<column name="revision" type="integer" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="state" type="varchar" length="100" jt="12" >
				<defo>&#039;pending&#039;</defo>
				<comment><![CDATA[pending
completed]]></comment>
			</column>
			<column name="timestamp" type="datetime" jt="93" mandatory="y" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="modifiedby" type="char" length="38" jt="1" mandatory="y" />
			<index name="Idx_da_result_analysis" unique="NORMAL" >
				<column name="container" />
			</index>
			<index name="sqlite_autoindex_da_analysis_result_1" unique="UNIQUE" >
				<column name="container" />
			</index>
			<index name="Unq_da_analysis_result_uuid" unique="UNIQUE" >
				<column name="uuid" />
			</index>
			<fk name="fk_da_result_da_analysis" to_schema="Default" to_table="da_analysis_container" delete_action="cascade" update_action="cascade" >
				<fk_column name="container" pk="uuid" />
			</fk>
		</table>
		<table name="da_analysis_result_properties" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="result" type="char" length="38" jt="1" mandatory="y" />
			<column name="key" type="varchar" length="100" jt="12" />
			<column name="value" type="blob" jt="2004" />
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<index name="pk_da_analysis_result_properties_uuid" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="idx_da_analysis_result_properties_result" unique="NORMAL" >
				<column name="result" />
			</index>
			<fk name="fk_da_analysis_result_properties" to_schema="Default" to_table="da_analysis_result" delete_action="cascade" update_action="cascade" >
				<fk_column name="result" pk="uuid" />
			</fk>
		</table>
		<table name="dd_attribute_history" generator_rows="100" >
			<column name="dda" type="char" length="38" jt="1" mandatory="y" />
			<column name="ddo" type="char" length="38" jt="1" mandatory="y" regexp="" />
			<column name="ddo_revision" type="integer" jt="4" mandatory="y" />
			<column name="value" type="blob" jt="2004" />
			<column name="timestamp" type="datetime" jt="93" />
			<column name="flag_modified" type="boolean" jt="-7" />
			<index name="Idx_dd_attribute_history_ddo" unique="NORMAL" >
				<column name="ddo" />
				<column name="ddo_revision" />
			</index>
		</table>
		<table name="dd_attribute_value" generator_rows="337" >
			<comment><![CDATA[This table stores actual design data attribute values.]]></comment>
			<column name="dda" type="char" length="38" jt="1" mandatory="y" >
				<comment><![CDATA[Contains the design data attribute definition uuid.]]></comment>
			</column>
			<column name="ddo" type="char" length="38" jt="1" mandatory="y" >
				<comment><![CDATA[Contains the design data objects's uuid]]></comment>
			</column>
			<column name="ddo_revision" type="integer" length="2000000000" decimal="10" jt="4" />
			<column name="value" type="blob" jt="2004" >
				<comment><![CDATA[Contains the attribute's value]]></comment>
			</column>
			<column name="timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
				<comment><![CDATA[Contains the timestamp (creation or modification)]]></comment>
			</column>
			<index name="idx_dda_value_ddo" unique="NORMAL" >
				<column name="ddo" />
			</index>
			<index name="idx_dda_value_dda" unique="NORMAL" >
				<column name="dda" />
			</index>
			<index name="pk_dd_attribute_value" unique="PRIMARY_KEY" >
				<column name="ddo" />
				<column name="dda" />
			</index>
			<fk name="fk_dda_value_ddo_object_uuid" to_schema="Default" to_table="dd_object" update_action="cascade" >
				<fk_column name="ddo" pk="uuid" />
			</fk>
			<fk name="fk_dda_value_dda_definition_uuid" to_schema="Default" to_table="dd_def_attribute" update_action="cascade" >
				<fk_column name="dda" pk="uuid" />
			</fk>
		</table>
		<table name="dd_ddl_solution" generator_rows="505" >
			<comment><![CDATA[Contains the assignment of DDLs to one or more solution spaces.]]></comment>
			<column name="solution" type="char" length="38" jt="1" mandatory="y" />
			<column name="ddl" type="char" length="38" jt="1" mandatory="y" />
			<column name="left_from" type="integer" jt="4" mandatory="y" >
				<defo>-1</defo>
			</column>
			<column name="left_to" type="integer" jt="4" mandatory="y" >
				<defo>-1</defo>
			</column>
			<column name="right_from" type="integer" jt="4" mandatory="y" >
				<defo>-1</defo>
			</column>
			<column name="right_to" type="integer" jt="4" mandatory="y" >
				<defo>-1</defo>
			</column>
			<column name="accepted_by" type="char" length="38" jt="1" />
			<column name="accepted_revision_left" type="integer" jt="4" >
				<defo>-1</defo>
			</column>
			<column name="accepted_revision_right" type="integer" jt="4" >
				<defo>-1</defo>
			</column>
			<column name="accepted_state" type="varchar" length="100" jt="12" >
				<defo>unknown</defo>
			</column>
			<column name="accepted_comment" type="varchar" length="255" jt="12" />
			<column name="cm_modified_by" type="char" length="38" jt="1" mandatory="y" />
			<column name="cm_revision" type="integer" jt="4" >
				<defo>0</defo>
			</column>
			<column name="cm_timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<index name="pk_dd_variant_ddl" unique="PRIMARY_KEY" >
				<column name="solution" />
				<column name="ddl" />
			</index>
			<index name="idx_dd_variant_ddl_solution" unique="NORMAL" >
				<column name="solution" />
			</index>
			<index name="idx_dd_variant_ddl_dd_link" unique="NORMAL" >
				<column name="ddl" />
			</index>
			<fk name="fk_dd_variant_ddl_rp_solution" to_schema="Default" to_table="rp_solution_space" delete_action="cascade" >
				<fk_column name="solution" pk="uuid" />
			</fk>
			<fk name="fk_dd_variant_ddl_dd_link" to_schema="Default" to_table="dd_link" >
				<fk_column name="ddl" pk="uuid" />
			</fk>
		</table>
		<table name="dd_ddl_solution_history" >
			<column name="solution" type="char" length="38" jt="1" mandatory="y" />
			<column name="ddl" type="char" length="38" jt="1" mandatory="y" />
			<column name="leftFrom" type="integer" jt="4" />
			<column name="leftTo" type="integer" jt="4" />
			<column name="rightFrom" type="integer" jt="4" />
			<column name="rightTo" type="integer" jt="4" />
			<column name="revision" type="integer" jt="4" />
			<column name="acceptedBy" type="char" length="38" jt="1" />
			<column name="acceptedRevisionLeft" type="integer" jt="4" >
				<defo>-1</defo>
			</column>
			<column name="acceptedRevisionRight" type="integer" jt="4" >
				<defo>-1</defo>
			</column>
			<column name="acceptedState" type="varchar" length="100" jt="12" />
			<column name="modifiedBy" type="char" length="38" jt="1" />
			<column name="timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<index name="idx_dd_variant_ddl_solution_0" unique="NORMAL" >
				<column name="solution" />
			</index>
			<index name="idx_dd_variant_ddl_dd_link_0" unique="NORMAL" >
				<column name="ddl" />
			</index>
		</table>
		<table name="dd_ddo_solution" generator_rows="337" >
			<comment><![CDATA[Contains the assignment of DDOs to one or more solution spaces.]]></comment>
			<column name="solution" type="char" length="38" jt="1" mandatory="y" >
				<comment><![CDATA[The solution space's uuid.]]></comment>
			</column>
			<column name="ddo" type="char" length="38" jt="1" mandatory="y" >
				<comment><![CDATA[The DDO's uuid.]]></comment>
			</column>
			<column name="revision_from" type="integer" jt="4" mandatory="y" >
				<defo>-1</defo>
				<comment><![CDATA[The DDO's revision id, defining from which revision on the DDO was assigned to the solution space.]]></comment>
			</column>
			<column name="revision_to" type="integer" jt="4" mandatory="y" >
				<defo>-1</defo>
				<comment><![CDATA[The DDO's revision id, defining until when the DDO was assigned to the solution space.]]></comment>
			</column>
			<column name="cm_owner" type="char" length="38" jt="1" />
			<column name="responsible" type="char" length="38" jt="1" >
				<comment><![CDATA[Contains the UUID of IPT being responsible for the object]]></comment>
			</column>
			<column name="cm_modified_by" type="char" length="38" jt="1" />
			<column name="cm_timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<index name="idx_dd_ddo_solution_soluition" unique="NORMAL" >
				<column name="solution" />
			</index>
			<index name="idx_dd_ddo_solution_ddo" unique="UNIQUE" >
				<column name="ddo" />
			</index>
			<index name="pk_dd_visibility_ddo" unique="PRIMARY_KEY" >
				<column name="solution" />
				<column name="ddo" />
				<column name="revision_from" />
				<column name="revision_to" />
			</index>
			<index name="idx_dd_ddo_solution_modifiedBy" unique="NORMAL" >
				<column name="cm_modified_by" />
			</index>
			<index name="idx_dd_ddo_solution_responsible" unique="NORMAL" >
				<column name="responsible" />
			</index>
			<index name="idx_dd_ddo_solution_owner" unique="NORMAL" >
				<column name="cm_owner" />
			</index>
			<fk name="fk_dd_visibility_ddo_solution" to_schema="Default" to_table="rp_solution_space" delete_action="cascade" >
				<fk_column name="solution" pk="uuid" />
			</fk>
			<fk name="fk_dd_visibility_ddo_dd_object" to_schema="Default" to_table="dd_object" >
				<fk_column name="ddo" pk="uuid" />
			</fk>
			<fk name="fk_dd_ddo_solution_responsible" to_schema="Default" to_table="po_ipt" delete_action="setNull" update_action="cascade" >
				<fk_column name="responsible" pk="uuid" />
			</fk>
			<fk name="fk_dd_ddo_solution_owner" to_schema="Default" to_table="po_ipt" delete_action="setNull" update_action="cascade" >
				<fk_column name="cm_owner" pk="uuid" />
			</fk>
		</table>
		<table name="dd_def_attribute" generator_rows="225" >
			<comment><![CDATA[Contains the design data objects attribute definitions.]]></comment>
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="id" type="varchar" length="255" jt="12" mandatory="y" />
			<column name="description" type="text" jt="-1" />
			<column name="ddo" type="char" length="38" jt="1" mandatory="y" />
			<column name="type" type="varchar" length="100" jt="12" />
			<column name="defaultValue" type="blob" jt="2004" />
			<column name="sortOrder" type="integer" jt="4" >
				<defo>100</defo>
			</column>
			<column name="properties" type="text" length="2000000000" decimal="10" jt="-1" />
			<column name="precision" type="integer" jt="4" />
			<column name="decimals" type="integer" jt="4" />
			<column name="unit" type="varchar" length="100" jt="12" />
			<column name="enums" type="blob" jt="2004" />
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<index name="idx_dd_def_attribute_ddo" unique="NORMAL" >
				<column name="ddo" />
			</index>
			<index name="idx_dd_def_attribute_unique" unique="UNIQUE" >
				<column name="id" />
				<column name="ddo" />
			</index>
			<index name="pk_dd_def_attribute" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<fk name="fk_dd_def_attribute" to_schema="Default" to_table="dd_def_object" delete_action="cascade" >
				<fk_column name="ddo" pk="uuid" />
			</fk>
		</table>
		<table name="dd_def_enum" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="dda" type="char" length="38" jt="1" mandatory="y" />
			<column name="ekey" type="varchar" length="100" jt="12" />
			<column name="evalue" type="varchar" length="100" jt="12" />
			<column name="description" type="text" jt="-1" />
			<column name="properties" type="blob" jt="2004" />
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<index name="pk_dd_def_enum_uuid" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="unq_dd_def_enum" unique="UNIQUE" >
				<column name="dda" />
				<column name="ekey" />
			</index>
			<fk name="fk_dd_def_enum" to_schema="Default" to_table="dd_def_attribute" delete_action="cascade" >
				<fk_column name="dda" pk="uuid" />
			</fk>
		</table>
		<table name="dd_def_hierarchy" generator_rows="337" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="project" type="char" length="38" jt="1" mandatory="y" />
			<column name="id" type="char" length="255" jt="1" />
			<column name="name" type="varchar" length="255" jt="12" />
			<column name="description" type="text" jt="-1" />
			<column name="up" type="char" length="38" jt="1" />
			<column name="down" type="char" length="38" jt="1" />
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<index name="idx_dd_def_hierarchy_up" unique="NORMAL" >
				<column name="up" />
			</index>
			<index name="idx_dd_def_hierarchy_down" unique="NORMAL" >
				<column name="down" />
			</index>
			<index name="idx_dd_def_hierarchy" unique="NORMAL" >
				<column name="project" />
			</index>
			<index name="pk_dd_def_hierarchy" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<fk name="fk_dd_def_hierarchy_rp_project" to_schema="Default" to_table="rp_project" delete_action="cascade" >
				<fk_column name="project" pk="uuid" />
			</fk>
			<fk name="fk_dd_def_hierarchy_up" to_schema="Default" to_table="dd_def_link" delete_action="cascade" update_action="cascade" >
				<fk_column name="up" pk="uuid" />
			</fk>
			<fk name="fk_dd_def_hierarchy_down" to_schema="Default" to_table="dd_def_link" delete_action="cascade" update_action="cascade" >
				<fk_column name="down" pk="uuid" />
			</fk>
		</table>
		<table name="dd_def_link" generator_rows="225" >
			<comment><![CDATA[Contains the definition of Design Data Links (DDL)]]></comment>
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="project" type="char" length="38" jt="1" mandatory="y" />
			<column name="id" type="varchar" length="100" jt="12" mandatory="y" />
			<column name="description" type="text" jt="-1" />
			<column name="left" type="char" length="38" jt="1" mandatory="y" />
			<column name="cardinality" type="varchar" length="100" jt="12" />
			<column name="right" type="char" length="38" jt="1" mandatory="y" />
			<column name="reverse" type="char" length="38" jt="1" >
				<comment><![CDATA[Contains the backward's link uuid]]></comment>
			</column>
			<column name="direction" type="char" length="2" jt="1" >
				<defo>LR</defo>
			</column>
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<index name="idx_dd_def_link" unique="NORMAL" >
				<column name="project" />
			</index>
			<index name="idx_dd_def_link_left" unique="NORMAL" >
				<column name="left" />
			</index>
			<index name="idx_dd_def_link_right" unique="NORMAL" >
				<column name="right" />
			</index>
			<index name="pk_dd_def_link" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="Idx_dd_def_link_backward" unique="NORMAL" >
				<column name="reverse" />
			</index>
			<fk name="fk_dd_def_link_rp_project" to_schema="Default" to_table="rp_project" delete_action="cascade" >
				<fk_column name="project" pk="uuid" />
			</fk>
			<fk name="fk_dd_def_link_left" to_schema="Default" to_table="dd_def_object" delete_action="cascade" >
				<fk_column name="left" pk="uuid" />
			</fk>
			<fk name="fk_dd_def_link_right" to_schema="Default" to_table="dd_def_object" delete_action="cascade" >
				<fk_column name="right" pk="uuid" />
			</fk>
		</table>
		<table name="dd_def_link_reverse" generator_rows="337" >
			<comment><![CDATA[Contains information about the reverse design data object link]]></comment>
			<column name="backward" type="char" length="38" jt="1" mandatory="y" />
			<column name="foreward" type="char" length="38" jt="1" mandatory="y" />
			<index name="pk_dd_def_link_reverse" unique="PRIMARY_KEY" >
				<column name="foreward" />
				<column name="backward" />
			</index>
			<index name="idx_dd_def_link_reverse_foreware" unique="NORMAL" >
				<column name="foreward" />
			</index>
			<index name="idx_dd_def_link_reverse_reverse" unique="NORMAL" >
				<column name="backward" />
			</index>
			<fk name="fk_dd_def_link_reverse_forward" to_schema="Default" to_table="dd_def_link" delete_action="cascade" >
				<fk_column name="foreward" pk="uuid" />
			</fk>
			<fk name="fk_dd_def_link_reverse_backward" to_schema="Default" to_table="dd_def_link" delete_action="cascade" >
				<fk_column name="backward" pk="uuid" />
			</fk>
		</table>
		<table name="dd_def_object" generator_rows="150" >
			<comment><![CDATA[Contains the definition of Design Data Objects (DDO).]]></comment>
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="project" type="char" length="38" jt="1" mandatory="y" />
			<column name="id" type="char" length="2" jt="1" mandatory="y" />
			<column name="description" type="text" jt="-1" />
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<column name="icon" type="blob" length="2000000000" decimal="10" jt="2004" />
			<column name="shareable" type="boolean" jt="-7" >
				<defo>1</defo>
			</column>
			<column name="properties" type="blob" jt="2004" />
			<column name="rules" type="blob" jt="2004" />
			<index name="idx_ddo_definition" unique="NORMAL" >
				<column name="project" />
			</index>
			<index name="idx_dd_def_object_uuid" unique="UNIQUE" >
				<column name="uuid" />
			</index>
			<index name="pk_dd_def_object_uuid" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<fk name="fk_dd_def_object_rp_project" to_schema="Default" to_table="rp_project" delete_action="cascade" >
				<fk_column name="project" pk="uuid" />
			</fk>
		</table>
		<table name="dd_link" generator_rows="337" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="definition" type="char" length="38" jt="1" mandatory="y" />
			<column name="do_left" type="char" length="38" jt="1" mandatory="y" />
			<column name="do_right" type="char" length="38" jt="1" mandatory="y" />
			<column name="cm_modified_by" type="char" length="38" jt="1" mandatory="y" />
			<column name="cm_timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="repository" type="char" length="38" jt="1" mandatory="y" >
				<comment><![CDATA[Contains repository's uuid in which the link was created.]]></comment>
			</column>
			<index name="idx_dd_link_definition" unique="NORMAL" >
				<column name="definition" />
			</index>
			<index name="idx_dd_link_source" unique="NORMAL" >
				<column name="do_left" />
			</index>
			<index name="idx_dd_link_target" unique="NORMAL" >
				<column name="do_right" />
			</index>
			<index name="idx_dd_link_0" unique="NORMAL" >
				<column name="cm_modified_by" />
			</index>
			<index name="pk_dd_link" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<fk name="fk_dd_link_definition" to_schema="Default" to_table="dd_def_link" delete_action="cascade" >
				<fk_column name="definition" pk="uuid" />
			</fk>
			<fk name="fk_dd_link_left" to_schema="Default" to_table="dd_object" delete_action="cascade" >
				<fk_column name="do_left" pk="uuid" />
			</fk>
			<fk name="fk_dd_link_right" to_schema="Default" to_table="dd_object" delete_action="cascade" >
				<fk_column name="do_right" pk="uuid" />
			</fk>
			<fk name="fk_dd_link_rp_project_member" to_schema="Default" to_table="rp_member" >
				<fk_column name="cm_modified_by" pk="uuid" />
			</fk>
		</table>
		<table name="dd_link_history" generator_rows="150" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="definition" type="char" length="38" jt="1" mandatory="y" />
			<column name="do_left" type="char" length="38" jt="1" mandatory="y" />
			<column name="do_right" type="char" length="38" jt="1" mandatory="y" />
			<column name="cm_modified_by" type="char" length="38" jt="1" mandatory="y" />
			<column name="cm_timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="repository" type="char" length="38" jt="1" mandatory="y" >
				<comment><![CDATA[contains uuid of repository in which the link was created.]]></comment>
			</column>
			<index name="idx_dd_link_definition_1" unique="NORMAL" >
				<column name="definition" />
			</index>
			<index name="idx_dd_link_source_1" unique="NORMAL" >
				<column name="do_left" />
			</index>
			<index name="idx_dd_link_target_1" unique="NORMAL" >
				<column name="do_right" />
			</index>
			<index name="idx_dd_link_2" unique="NORMAL" >
				<column name="cm_modified_by" />
			</index>
			<index name="id_dd_link_history" unique="NORMAL" >
				<column name="uuid" />
			</index>
		</table>
		<table name="dd_object" generator_rows="225" >
			<comment><![CDATA[Contains all design data objects.]]></comment>
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" >
				<comment><![CDATA[Contains the design data object's uuid.]]></comment>
			</column>
			<column name="definition" type="char" length="38" jt="1" mandatory="y" />
			<column name="localId" type="integer" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="masterId" type="integer" jt="4" >
				<defo>0</defo>
			</column>
			<column name="cm_revision" type="integer" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="cm_modified_by" type="char" length="38" jt="1" mandatory="y" />
			<column name="created" type="datetime" jt="93" mandatory="y" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="cm_timestamp" type="datetime" jt="93" mandatory="y" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<index name="idx_dd_object_definition" unique="NORMAL" >
				<column name="definition" />
			</index>
			<index name="idx_dd_object_modifiedBy" unique="NORMAL" >
				<column name="cm_modified_by" />
			</index>
			<index name="pk_dd_object" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<fk name="fk_dd_object_dd_def_object" to_schema="Default" to_table="dd_def_object" >
				<fk_column name="definition" pk="uuid" />
			</fk>
			<fk name="fk_dd_object_modified_by" to_schema="Default" to_table="rp_member" delete_action="setNull" >
				<fk_column name="cm_modified_by" pk="uuid" />
			</fk>
		</table>
		<table name="dd_object_history" generator_rows="150" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="definition" type="char" length="38" jt="1" />
			<column name="localId" type="integer" jt="4" />
			<column name="masterId" type="integer" jt="4" />
			<column name="cm_revision" type="integer" jt="4" />
			<column name="cm_modified_by" type="char" length="38" jt="1" />
			<column name="created" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="cm_timestamp" type="datetime" jt="93" />
			<column name="repository" type="char" length="38" jt="1" />
			<index name="idx_dd_object_history_uuid" unique="NORMAL" >
				<column name="uuid" />
			</index>
			<index name="pk_dd_history" unique="UNIQUE" >
				<column name="uuid" />
				<column name="cm_revision" />
			</index>
			<index name="Unq_dd_object_history_uuid" unique="UNIQUE" >
				<column name="uuid" />
				<column name="cm_revision" />
			</index>
		</table>
		<table name="dd_objectid" generator_rows="225" >
			<comment><![CDATA[Contains the counter with the next object id.]]></comment>
			<column name="ddo" type="char" length="38" jt="1" mandatory="y" />
			<column name="nextId" type="integer" jt="4" >
				<defo>1</defo>
			</column>
			<index name="pk_dd_objectid" unique="PRIMARY_KEY" >
				<column name="ddo" />
			</index>
			<fk name="fk_dd_objectid_dd_def_object" to_schema="Default" to_table="dd_def_object" delete_action="cascade" >
				<fk_column name="ddo" pk="uuid" />
			</fk>
		</table>
		<table name="dd_template" >
			<comment><![CDATA[Contains templates for design data objects.]]></comment>
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" >
				<comment><![CDATA[The templates uuid]]></comment>
			</column>
			<column name="id" type="varchar" length="100" jt="12" >
				<comment><![CDATA[A human readable ID]]></comment>
			</column>
			<column name="ddo" type="char" length="38" jt="1" >
				<comment><![CDATA[The design data object's uuid the template is defined for.]]></comment>
			</column>
			<column name="template" type="blob" jt="2004" >
				<comment><![CDATA[The template containing DDOs and DDLs]]></comment>
			</column>
			<column name="category" type="varchar" length="100" jt="12" >
				<comment><![CDATA[The category is used to group templates.]]></comment>
			</column>
			<column name="cm_modified_by" type="char" length="38" jt="1" />
			<column name="cm_timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
				<comment><![CDATA[The timestamp of the last modification]]></comment>
			</column>
			<column name="repository" type="char" length="38" jt="1" >
				<comment><![CDATA[The repository's uuid in which the tempate was created]]></comment>
			</column>
			<index name="pk_dd_template_uuid" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="idx_dd_template_ddo" unique="NORMAL" >
				<column name="ddo" />
			</index>
			<fk name="fk_dd_template" to_schema="Default" to_table="dd_def_object" delete_action="cascade" update_action="cascade" >
				<fk_column name="ddo" pk="uuid" />
			</fk>
		</table>
		<table name="ddh_ddo_dda_revision" >
			<comment><![CDATA[This table contains the history data...]]></comment>
			<column name="dda" type="char" length="38" jt="1" mandatory="y" />
			<column name="dda_revision" type="integer" jt="4" mandatory="y" />
			<column name="ddo_revision" type="integer" jt="4" mandatory="y" />
			<index name="idx_ddh_ddo_dda_revision_dda" unique="NORMAL" >
				<column name="dda" />
			</index>
			<index name="_0" unique="PRIMARY_KEY" >
				<column name="dda" />
				<column name="dda_revision" />
				<column name="ddo_revision" />
			</index>
			<fk name="fk_ddh_ddo_dda_revision_dda" to_schema="Default" to_table="dd_attribute_value" delete_action="cascade" >
				<fk_column name="dda" pk="dda" />
			</fk>
		</table>
		<table name="dm_diagram" generator_rows="505" >
			<column name="uuid" type="char " length="38" jt="12" mandatory="y" />
			<column name="solution" type="char " length="38" jt="12" />
			<column name="name" type="varchar" length="255" jt="12" />
			<column name="ddo" type="char " length="38" jt="12" />
			<column name="type" type="char" length="255" jt="1" />
			<column name="properties" type="text" jt="-1" />
			<column name="cm_revision" type="integer" jt="4" >
				<defo>0</defo>
			</column>
			<column name="cm_modified_by" type="char" length="38" jt="1" />
			<column name="cm_timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="cm_deleted" type="boolean" jt="-7" >
				<defo>0</defo>
			</column>
			<column name="repository" type="char " length="38" jt="12" mandatory="y" />
			<index name="Pk_diagram" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="idx_dm_diagram_solution" unique="NORMAL" >
				<column name="solution" />
				<column name="ddo" />
			</index>
		</table>
		<table name="dm_diagram_property" generator_rows="757" >
			<column name="diagram" type="char" length="38" jt="1" mandatory="y" />
			<column name="name" type="varchar" length="100" jt="12" mandatory="y" />
			<column name="value" type="blob" jt="2004" />
			<index name="idx_dm_diagram_properties" unique="NORMAL" >
				<column name="diagram" />
			</index>
			<index name="pk_dm_diagram_properties" unique="PRIMARY_KEY" >
				<column name="diagram" />
				<column name="name" />
			</index>
			<fk name="fk_dm_diagram_properties" to_schema="Default" to_table="dm_diagram" >
				<fk_column name="diagram" pk="uuid" />
			</fk>
		</table>
		<table name="dm_item" generator_rows="757" >
			<comment><![CDATA[Contains the shape's UUID.]]></comment>
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="diagram" type="char" length="38" jt="1" mandatory="y" />
			<column name="type" type="varchar" length="255" jt="12" />
			<column name="ddoddl" type="char" length="38" jt="1" >
				<comment><![CDATA[Contains the UUID of the respective design data object or link.]]></comment>
			</column>
			<column name="revision" type="integer" jt="4" mandatory="y" >
				<defo>0</defo>
			</column>
			<column name="revision_from" type="integer" jt="4" >
				<defo>0</defo>
			</column>
			<column name="revision_to" type="integer" length="2000000000" decimal="10" jt="4" >
				<defo>-1</defo>
			</column>
			<column name="ghost" type="boolean" jt="-7" >
				<defo>0</defo>
				<comment><![CDATA[Indicates if the shape belongs to a deleted design data object or link.]]></comment>
			</column>
			<column name="cm_modified_by" type="char" length="38" jt="1" mandatory="y" />
			<column name="cm_deleted" type="boolean" jt="-7" >
				<defo>0</defo>
			</column>
			<column name="repository" type="char" length="38" jt="1" />
			<index name="Pk_shape" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="idx_dm_shape" unique="NORMAL" >
				<column name="diagram" />
			</index>
			<index name="idx_dm_shape_ddoddl" unique="NORMAL" >
				<column name="ddoddl" />
			</index>
			<index name="Unq_dm_item_uuid" unique="UNIQUE" >
				<column name="uuid" />
				<column name="revision" />
			</index>
			<fk name="fk_dm_shape_dm_diagram" to_schema="Default" to_table="dm_diagram" delete_action="cascade" >
				<fk_column name="diagram" pk="uuid" />
			</fk>
		</table>
		<table name="dm_item_property" generator_rows="1135" >
			<column name="item" type="char" length="38" jt="1" />
			<column name="revision" type="integer" jt="4" />
			<column name="key" type="varchar " jt="-1" mandatory="y" />
			<column name="value" type="blob" jt="2004" />
			<column name="dda" type="char" length="38" jt="1" >
				<comment><![CDATA[Contains the UUID of the respective design data attribute.]]></comment>
			</column>
			<index name="idx_dm_item_property_dda" unique="NORMAL" >
				<column name="dda" />
			</index>
			<index name="idx_dm_item_property_item" unique="NORMAL" >
				<column name="item" />
			</index>
			<index name="pk_dm_item_propertiey" unique="UNIQUE" >
				<column name="item" />
				<column name="key" />
			</index>
			<fk name="fk_dm_item_property_dm_item" to_schema="Default" to_table="dm_item" delete_action="cascade" update_action="cascade" >
				<fk_column name="item" pk="uuid" />
				<fk_column name="revision" pk="revision" />
			</fk>
		</table>
		<table name="po_ipt" generator_rows="150" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="name" type="varchar" length="100" jt="12" mandatory="y" />
			<column name="project" type="char" length="38" jt="1" mandatory="y" />
			<column name="description" type="text" jt="-1" />
			<column name="type" type="varchar" length="100" jt="12" />
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<index name="idx_po_ipt" unique="NORMAL" >
				<column name="project" />
			</index>
			<index name="pk_po_ipt" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<fk name="fk_po_ipt_rp_project" to_schema="Default" to_table="rp_project" >
				<fk_column name="project" pk="uuid" />
			</fk>
		</table>
		<table name="po_ipt_member" generator_rows="225" >
			<column name="member" type="char" length="38" jt="1" mandatory="y" />
			<column name="ipt" type="char" length="38" jt="1" mandatory="y" />
			<column name="project" type="char" length="38" jt="1" mandatory="y" />
			<index name="idx_po_ipt_member_member" unique="NORMAL" >
				<column name="member" />
			</index>
			<index name="idx_po_ipt_member_ipt" unique="NORMAL" >
				<column name="ipt" />
			</index>
			<index name="pk_po_ipt_member" unique="PRIMARY_KEY" >
				<column name="member" />
				<column name="ipt" />
			</index>
			<fk name="fk_po_ipt_member_po_ipt" to_schema="Default" to_table="po_ipt" >
				<fk_column name="ipt" pk="uuid" />
			</fk>
			<fk name="fk_po_ipt_member" to_schema="Default" to_table="rp_project_member" delete_action="cascade" >
				<fk_column name="member" pk="member" />
				<fk_column name="project" pk="project" />
			</fk>
		</table>
		<table name="po_role" generator_rows="150" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" >
				<comment><![CDATA[The role's uuid]]></comment>
			</column>
			<column name="project" type="char" length="38" jt="1" mandatory="y" >
				<comment><![CDATA[The project's uuid the role is assigned to]]></comment>
			</column>
			<column name="name" type="varchar" length="100" jt="12" mandatory="y" >
				<comment><![CDATA[The name]]></comment>
			</column>
			<column name="description" type="text" jt="-1" />
			<column name="state" type="varchar" length="100" jt="12" >
				<defo>&#039;enabled&#039;</defo>
			</column>
			<column name="repository" type="char" length="38" jt="1" mandatory="y" >
				<comment><![CDATA[The repository's uuid originating the role]]></comment>
			</column>
			<index name="idx_po_role" unique="NORMAL" >
				<column name="project" />
			</index>
			<index name="pk_po_role" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="Unq_po_role_uuid" unique="UNIQUE" >
				<column name="uuid" />
				<column name="project" />
			</index>
			<index name="Unq_po_role_project" unique="UNIQUE" >
				<column name="project" />
				<column name="uuid" />
			</index>
			<fk name="fk_po_role_rp_project" to_schema="Default" to_table="rp_project" delete_action="cascade" >
				<fk_column name="project" pk="uuid" />
			</fk>
		</table>
		<table name="po_role_ddl_transaction" generator_rows="337" >
			<column name="role" type="char" length="38" jt="1" mandatory="y" />
			<column name="ddl" type="char" length="38" jt="1" mandatory="y" />
			<column name="transaction_uuid" type="char" length="38" jt="1" mandatory="y" />
			<index name="pk_po_role_ddl_transaction" unique="PRIMARY_KEY" >
				<column name="role" />
				<column name="ddl" />
				<column name="transaction_uuid" />
			</index>
			<index name="idx_po_role_ddl_transaction" unique="NORMAL" >
				<column name="role" />
			</index>
			<index name="idx_po_role_ddl_transaction_0" unique="NORMAL" >
				<column name="ddl" />
			</index>
			<index name="idx_po_role_ddl_transaction_1" unique="NORMAL" >
				<column name="transaction_uuid" />
			</index>
			<fk name="fk_po_role_ddl_transaction_role" to_schema="Default" to_table="po_role" delete_action="cascade" >
				<fk_column name="role" pk="uuid" />
			</fk>
			<fk name="fk_po_role_ddl_transaction_ddl" to_schema="Default" to_table="dd_def_link" delete_action="cascade" >
				<fk_column name="ddl" pk="uuid" />
			</fk>
			<fk name="fk_po_role_ddl_transaction" to_schema="Default" to_table="rp_transaction" >
				<fk_column name="transaction_uuid" pk="uuid" />
			</fk>
		</table>
		<table name="po_role_ddo_transaction" generator_rows="225" >
			<column name="role" type="char" length="38" jt="1" mandatory="y" />
			<column name="ddo" type="char" length="38" jt="1" mandatory="y" />
			<column name="transaction_uuid" type="char" length="38" jt="1" mandatory="y" />
			<index name="idx_po_ddo_transaction_ddo" unique="NORMAL" >
				<column name="ddo" />
			</index>
			<index name="idx_po_ddo_transaction_id" unique="NORMAL" >
				<column name="transaction_uuid" />
			</index>
			<index name="pk_po_ddo_transaction" unique="PRIMARY_KEY" >
				<column name="ddo" />
				<column name="transaction_uuid" />
				<column name="role" />
			</index>
			<index name="idx_po_ddo_transaction_role" unique="NORMAL" >
				<column name="role" />
			</index>
			<fk name="fk_po_role_ddo_transaction" to_schema="Default" to_table="rp_transaction" >
				<fk_column name="transaction_uuid" pk="uuid" />
			</fk>
			<fk name="fk_po_role_ddo_transaction_ddo" to_schema="Default" to_table="dd_def_object" >
				<fk_column name="ddo" pk="uuid" />
			</fk>
			<fk name="fk_po_role_ddo_transaction_role" to_schema="Default" to_table="po_role" delete_action="cascade" >
				<fk_column name="role" pk="uuid" />
			</fk>
		</table>
		<table name="po_role_member" generator_rows="225" >
			<column name="project" type="char" length="38" jt="1" mandatory="y" />
			<column name="role" type="char" length="38" jt="1" mandatory="y" />
			<column name="member" type="char" length="38" jt="1" mandatory="y" />
			<index name="idx_po_role_member" unique="NORMAL" >
				<column name="role" />
			</index>
			<index name="idx_po_role_member_0" unique="NORMAL" >
				<column name="member" />
			</index>
			<index name="pk_po_role_member" unique="PRIMARY_KEY" >
				<column name="role" />
				<column name="member" />
				<column name="project" />
			</index>
			<fk name="fk_po_role_member" to_schema="Default" to_table="rp_project_member" >
				<fk_column name="member" pk="member" />
			</fk>
			<fk name="fk_po_role_member_role" to_schema="Default" to_table="po_role" delete_action="cascade" >
				<fk_column name="project" pk="project" />
				<fk_column name="role" pk="uuid" />
			</fk>
		</table>
		<table name="po_role_transaction" generator_rows="225" >
			<column name="role" type="char" length="38" jt="1" mandatory="y" />
			<column name="transaction_uuid" type="char" length="38" jt="1" mandatory="y" />
			<index name="pk_po_role_transaction" unique="PRIMARY_KEY" >
				<column name="role" />
				<column name="transaction_uuid" />
			</index>
			<index name="idx_po_role_transaction" unique="NORMAL" >
				<column name="transaction_uuid" />
			</index>
			<index name="idx_po_role_transaction_0" unique="NORMAL" >
				<column name="role" />
			</index>
			<fk name="fk_po_role_transaction_po_role" to_schema="Default" to_table="po_role" >
				<fk_column name="role" pk="uuid" />
			</fk>
			<fk name="fk_po_role_transaction" to_schema="Default" to_table="rp_transaction" >
				<fk_column name="transaction_uuid" pk="uuid" />
			</fk>
		</table>
		<table name="re_document" generator_rows="150" >
			<comment><![CDATA[Contains the definition of documents]]></comment>
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="solution" type="char" length="38" jt="1" />
			<column name="documentNumber" type="varchar" length="255" jt="12" >
				<comment><![CDATA[Contains the document's control number (e.g. assigned by a document management system)]]></comment>
			</column>
			<column name="title" type="varchar" length="255" jt="12" />
			<column name="revisionNumber" type="varchar" length="255" jt="12" />
			<column name="publicationDate" type="date" jt="91" />
			<column name="category" type="varchar" length="100" jt="12" >
				<defo>&#039;report&#039;</defo>
				<comment><![CDATA[Determines the document category:
- report (default)
- specification
- design  description
- management plan]]></comment>
			</column>
			<column name="dmsUrl" type="text" jt="-1" >
				<comment><![CDATA[Contains the document's URL to the document management system]]></comment>
			</column>
			<column name="ismsClassification" type="varchar" length="100" jt="12" >
				<comment><![CDATA[Contains the document's classification accoring to the organization's Information Security Management System (ISMS) policies.]]></comment>
			</column>
			<column name="govClassification" type="varchar" length="100" jt="12" >
				<comment><![CDATA[Contains the document's classification accoring to the government's classification policies.]]></comment>
			</column>
			<column name="lang" type="char" length="5" jt="1" >
				<defo>&#039;en-US&#039;</defo>
			</column>
			<column name="layout" type="char" length="38" jt="1" >
				<comment><![CDATA[The UUID of the layout assigned to the document.]]></comment>
			</column>
			<column name="template" type="char" length="38" jt="1" />
			<column name="properties" type="text" jt="-1" />
			<column name="cm_owner" type="char" length="38" jt="1" />
			<column name="cm_revision" type="integer" jt="4" >
				<defo>0</defo>
			</column>
			<column name="cm_deleted" type="boolean" jt="-7" >
				<defo>false</defo>
			</column>
			<column name="cm_timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="cm_modified_by" type="char" length="38" jt="1" />
			<index name="Pk_re_report_uuid" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="Idx_re_report_stylesheet" unique="NORMAL" >
				<column name="layout" />
			</index>
			<index name="Idx_re_document_solution" unique="NORMAL" >
				<column name="solution" />
			</index>
			<index name="idx_re_document_template" unique="NORMAL" >
				<column name="template" />
			</index>
			<fk name="fk_re_document_re_layout" to_schema="Default" to_table="re_layout" delete_action="setNull" update_action="setNull" >
				<fk_column name="layout" pk="uuid" />
			</fk>
			<fk name="fk_re_document" to_schema="Default" to_table="rp_solution_space" delete_action="cascade" >
				<fk_column name="solution" pk="uuid" />
			</fk>
			<fk name="fk_re_document_0" to_schema="Default" to_table="re_template_solution" delete_action="setNull" update_action="cascade" >
				<fk_column name="template" pk="template" />
			</fk>
		</table>
		<table name="re_document_history" >
			<comment><![CDATA[Contains the definition of documents]]></comment>
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="solution" type="char" length="38" jt="1" />
			<column name="documentNumber" type="varchar" length="255" jt="12" >
				<comment><![CDATA[Contains the document's control number (e.g. assigned by a document management system)]]></comment>
			</column>
			<column name="title" type="varchar" length="255" jt="12" />
			<column name="revisionNumber" type="varchar" length="255" jt="12" />
			<column name="publicationDate" type="date" jt="91" />
			<column name="category" type="varchar" length="100" jt="12" >
				<defo>&#039;report&#039;</defo>
				<comment><![CDATA[Determines the document category:
- report (default)
- specification
- design  description
- management plan]]></comment>
			</column>
			<column name="dmsUrl" type="text" jt="-1" >
				<comment><![CDATA[Contains the document's URL to the document management system]]></comment>
			</column>
			<column name="ismsClassification" type="varchar" length="100" jt="12" >
				<comment><![CDATA[Contains the document's classification accoring to the organization's Information Security Management System (ISMS) policies.]]></comment>
			</column>
			<column name="govClassification" type="varchar" length="100" jt="12" >
				<comment><![CDATA[Contains the document's classification accoring to the government's classification policies.]]></comment>
			</column>
			<column name="lang" type="char" length="5" jt="1" />
			<column name="layout" type="char" length="38" jt="1" >
				<comment><![CDATA[The UUID of the layout assigned to the document.]]></comment>
			</column>
			<column name="template" type="char" length="38" jt="1" />
			<column name="properties" type="text" jt="-1" />
			<column name="cm_owner" type="char" length="38" jt="1" />
			<column name="cm_revision" type="integer" jt="4" >
				<defo>0</defo>
			</column>
			<column name="cm_deleted" type="boolean" jt="-7" >
				<defo>false</defo>
			</column>
			<column name="cm_timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="cm_modifiedBy" type="char" length="38" jt="1" />
			<index name="pk_re_document_history" unique="NORMAL" >
				<column name="uuid" />
				<column name="cm_revision" />
			</index>
		</table>
		<table name="re_documenttree" >
			<column name="parent" type="char" length="38" jt="1" mandatory="y" />
			<column name="child" type="char" length="38" jt="1" mandatory="y" />
			<index name="idx_re_documenttree_parent" unique="NORMAL" >
				<column name="parent" />
			</index>
			<index name="idx_re_documenttree_child" unique="NORMAL" >
				<column name="child" />
			</index>
			<index name="pk_re_documenttree" unique="PRIMARY_KEY" >
				<column name="parent" />
				<column name="child" />
			</index>
			<fk name="fk_re_documenttree_re_document_parent" to_schema="Default" to_table="re_document" delete_action="cascade" >
				<fk_column name="parent" pk="uuid" />
			</fk>
			<fk name="fk_re_documenttree_re_document_child" to_schema="Default" to_table="re_document" delete_action="cascade" >
				<fk_column name="child" pk="uuid" />
			</fk>
		</table>
		<table name="re_layout" generator_rows="100" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="solution" type="char" length="38" jt="1" />
			<column name="name" type="varchar" length="255" jt="12" />
			<column name="description" type="text" jt="-1" />
			<column name="timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="repository" type="char" length="38" jt="1" />
			<index name="Pk_re_stylesheet_uuid" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<fk name="fk_re_layout_rp_solution_space" to_schema="Default" to_table="rp_solution_space" delete_action="cascade" >
				<fk_column name="solution" pk="uuid" />
			</fk>
		</table>
		<table name="re_reportson" >
			<comment><![CDATA[Contains the root design data object UUID's a document is reporting on.]]></comment>
			<column name="document" type="char" length="38" jt="1" mandatory="y" />
			<column name="object" type="char" length="38" jt="1" mandatory="y" />
			<fk name="fk_re_reportson_re_document" to_schema="Default" to_table="re_document" >
				<fk_column name="document" pk="uuid" />
			</fk>
			<fk name="fk_re_reportson" to_schema="Default" to_table="dd_ddo_solution" >
				<fk_column name="object" pk="ddo" />
			</fk>
		</table>
		<table name="re_section" generator_rows="225" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="document" type="char" length="38" jt="1" />
			<column name="number" type="varchar" length="255" jt="12" />
			<column name="caption" type="varchar" length="255" jt="12" />
			<column name="description" type="text" jt="-1" />
			<column name="script" type="char" length="38" jt="1" />
			<column name="options" type="blob" jt="2004" />
			<column name="cm_modified_by" type="char" length="38" jt="1" />
			<column name="cm_owner" type="char" length="38" jt="1" />
			<column name="cm_revision" type="integer" jt="4" >
				<defo>0</defo>
			</column>
			<column name="cm_deleted" type="boolean" jt="-7" >
				<defo>false</defo>
			</column>
			<column name="cm_timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<index name="idx_re_section_document" unique="NORMAL" >
				<column name="document" />
			</index>
			<index name="idx_re_section_script" unique="NORMAL" >
				<column name="script" />
			</index>
			<index name="pk_re_section" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<fk name="fk_re_section_re_document" to_schema="Default" to_table="re_document" delete_action="cascade" >
				<fk_column name="document" pk="uuid" />
			</fk>
			<fk name="fk_re_section_se_script" to_schema="Default" to_table="sp_script" update_action="setNull" >
				<fk_column name="script" pk="uuid" />
			</fk>
		</table>
		<table name="re_section_ddl" >
			<column name="section_uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="section_revision" type="integer" jt="4" mandatory="y" />
			<column name="ddl_uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="ddl_revision" type="integer" jt="4" />
			<index name="Idx_re_section_ddo_0" unique="NORMAL" >
				<column name="section_uuid" />
				<column name="section_revision" />
				<column name="ddl_uuid" />
				<column name="ddl_revision" />
			</index>
		</table>
		<table name="re_section_ddo" >
			<column name="section_uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="section_revision" type="integer" jt="4" mandatory="y" />
			<column name="ddo_uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="ddo_revision" type="integer" jt="4" />
			<index name="Idx_re_section_ddo" unique="NORMAL" >
				<column name="section_uuid" />
				<column name="section_revision" />
				<column name="ddo_uuid" />
				<column name="ddo_revision" />
			</index>
		</table>
		<table name="re_section_history" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="document" type="char" length="38" jt="1" />
			<column name="number" type="varchar" length="255" jt="12" />
			<column name="caption" type="varchar" length="255" jt="12" />
			<column name="description" type="text" jt="-1" />
			<column name="script" type="char" length="38" jt="1" />
			<column name="options" type="blob" jt="2004" />
			<column name="cm_modified_by" type="char" length="38" jt="1" />
			<column name="cm_owner" type="char" length="38" jt="1" />
			<column name="cm_revision" type="integer" jt="4" >
				<defo>0</defo>
			</column>
			<column name="cm_deleted" type="boolean" jt="-7" >
				<defo>false</defo>
			</column>
			<column name="cm_timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<index name="idx_re_section_document_0" unique="NORMAL" >
				<column name="document" />
			</index>
			<index name="idx_re_section_script_0" unique="NORMAL" >
				<column name="script" />
			</index>
			<index name="pk_re_section_0" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
		</table>
		<table name="re_stylesheet" generator_rows="150" >
			<column name="layout" type="char" length="38" jt="1" />
			<column name="format" type="varchar" length="100" jt="12" />
			<column name="data" type="blob" jt="2004" />
			<column name="url" type="varchar" length="255" jt="12" />
			<index name="idx_re_stylesheet_format" unique="NORMAL" >
				<column name="format" />
			</index>
			<index name="idx_re_stylesheet_layout" unique="NORMAL" >
				<column name="layout" />
			</index>
			<fk name="fk_re_stylesheet_re_layout" to_schema="Default" to_table="re_layout" delete_action="cascade" >
				<fk_column name="layout" pk="uuid" />
			</fk>
		</table>
		<table name="re_template" >
			<column name="uuid" type="char" length="38" jt="1" />
			<column name="id" type="varchar" length="255" jt="12" />
			<column name="definition" type="blob" jt="2004" />
			<column name="timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="repository" type="char" length="38" jt="1" />
			<index name="Unq_rf_template_uuid" unique="UNIQUE" >
				<column name="uuid" />
			</index>
		</table>
		<table name="re_template_solution" >
			<column name="template" type="char" length="38" jt="1" mandatory="y" />
			<column name="solution" type="char" length="38" jt="1" />
			<index name="unq_template_solution" unique="UNIQUE" >
				<column name="template" />
				<column name="solution" />
			</index>
			<index name="idx_rf_template_solution_template" unique="UNIQUE" >
				<column name="template" />
			</index>
			<index name="idx_rf_template_solution_solution" unique="NORMAL" >
				<column name="solution" />
			</index>
			<fk name="fk_rf_template_solution" to_schema="Default" to_table="re_template" delete_action="cascade" update_action="cascade" >
				<fk_column name="template" pk="uuid" />
			</fk>
			<fk name="fk_rf_template_solution_solution" to_schema="Default" to_table="rp_solution_space" delete_action="cascade" update_action="cascade" >
				<fk_column name="solution" pk="uuid" />
			</fk>
		</table>
		<table name="rp_config" >
			<column name="key" type="varchar" length="255" jt="12" mandatory="y" />
			<column name="value" type="blob" jt="2004" />
			<index name="Pk_rp_config_key" unique="PRIMARY_KEY" >
				<column name="key" />
			</index>
		</table>
		<table name="rp_lock" >
			<comment><![CDATA[Contains  locks.]]></comment>
			<column name="project" type="char" length="38" jt="1" mandatory="y" />
			<column name="member" type="char" length="38" jt="1" mandatory="y" />
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="master" type="char" length="38" jt="1" >
				<comment><![CDATA[Contains the master lock's UUID.]]></comment>
			</column>
			<index name="idx_rp_lock_uuid" unique="NORMAL" >
				<column name="uuid" />
			</index>
			<index name="idx_rp_lock_member" unique="NORMAL" >
				<column name="member" />
			</index>
			<index name="Idx_rp_lock_project" unique="NORMAL" >
				<column name="project" />
			</index>
			<fk name="fk_rp_lock_rp_project" to_schema="Default" to_table="rp_project" delete_action="cascade" >
				<fk_column name="project" pk="uuid" />
			</fk>
			<fk name="fk_rp_lock_rp_member" to_schema="Default" to_table="rp_member" delete_action="cascade" >
				<fk_column name="member" pk="uuid" />
			</fk>
		</table>
		<table name="rp_member" generator_rows="100" >
			<comment><![CDATA[Contains all IPT members]]></comment>
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="account" type="varchar" length="100" jt="12" mandatory="y" />
			<column name="name" type="varchar" length="100" jt="12" mandatory="y" />
			<column name="radmin" type="bit" jt="-7" >
				<defo>0</defo>
			</column>
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<column name="password" type="blob" jt="2004" mandatory="y" />
			<column name="email" type="char" length="255" jt="1" />
			<column name="phone" type="char" length="255" jt="1" />
			<column name="locked" type="boolean" jt="-7" >
				<defo>0</defo>
				<comment><![CDATA[If true (1) the account is locked.]]></comment>
			</column>
			<index name="pk_rp_member" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
		</table>
		<table name="rp_member_settings" >
			<column name="project" type="char" length="38" jt="1" mandatory="y" />
			<column name="member" type="char" length="38" jt="1" mandatory="y" />
			<column name="key" type="varchar(255)" jt="-1" mandatory="y" />
			<column name="value" type="blob" jt="2004" />
			<index name="pk_po_member_settings" unique="PRIMARY_KEY" >
				<column name="project" />
				<column name="member" />
				<column name="key" />
			</index>
			<index name="Idx_po_member_settings_member" unique="NORMAL" >
				<column name="member" />
			</index>
			<index name="Idx_po_member_settings_project" unique="NORMAL" >
				<column name="project" />
			</index>
			<fk name="fk_po_member_settings_member" to_schema="Default" to_table="rp_member" delete_action="cascade" >
				<fk_column name="member" pk="uuid" />
			</fk>
			<fk name="fk_po_member_settings_project" to_schema="Default" to_table="rp_project" delete_action="cascade" >
				<fk_column name="project" pk="uuid" />
			</fk>
		</table>
		<table name="rp_project" generator_rows="100" >
			<comment><![CDATA[Contains all projects defined in this repository.]]></comment>
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" >
				<comment><![CDATA[Contains the project's uuid.]]></comment>
			</column>
			<column name="name" type="varchar" length="100" jt="12" mandatory="y" >
				<comment><![CDATA[Contains the project's name]]></comment>
			</column>
			<column name="state" type="varchar" length="100" jt="12" >
				<defo>&#039;locked&#039;</defo>
				<comment><![CDATA[Contains the project's state:
- open (read write access)
- archived (read only access)
- locked (no access)
Please refer to reposyd::ProjectState]]></comment>
			</column>
			<column name="description" type="text" jt="-1" />
			<column name="properties" type="text" jt="-1" />
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<index name="pk_rp_project" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
		</table>
		<table name="rp_project_config" >
			<column name="project" type="char" length="38" jt="1" />
			<column name="key" type="varchar" length="255" jt="12" />
			<column name="value" type="blob" jt="2004" />
			<index name="pk_rp_project_config" unique="UNIQUE" >
				<column name="project" />
				<column name="key" />
			</index>
			<index name="Idx_rp_project_config_project" unique="NORMAL" >
				<column name="project" />
			</index>
			<fk name="fk_rp_project_config" to_schema="Default" to_table="rp_project" delete_action="cascade" >
				<fk_column name="project" pk="uuid" />
			</fk>
		</table>
		<table name="rp_project_member" generator_rows="150" >
			<comment><![CDATA[This table contains the team member assigned to a project.]]></comment>
			<column name="project" type="char" length="38" jt="1" mandatory="y" />
			<column name="member" type="char" length="38" jt="1" mandatory="y" />
			<column name="mode" type="varchar" length="100" jt="12" >
				<defo>readwrite</defo>
				<comment><![CDATA[Defines the project member's access mode.
- readwrite
- readonly]]></comment>
			</column>
			<index name="idx_po_project_member_project" unique="NORMAL" >
				<column name="project" />
			</index>
			<index name="idx_po_project_member_member" unique="UNIQUE" >
				<column name="member" />
			</index>
			<index name="pk_po_project_member" unique="PRIMARY_KEY" >
				<column name="project" />
				<column name="member" />
			</index>
			<index name="Unq_rp_project_member_member" unique="UNIQUE" >
				<column name="member" />
				<column name="project" />
			</index>
			<fk name="fk_rp_project_member_rp_member" to_schema="Default" to_table="rp_member" delete_action="cascade" >
				<fk_column name="member" pk="uuid" />
			</fk>
			<fk name="fk_rp_project_member" to_schema="Default" to_table="rp_project" delete_action="cascade" >
				<fk_column name="project" pk="uuid" />
			</fk>
		</table>
		<table name="rp_solution_space" generator_rows="150" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="name" type="varchar" length="100" jt="12" />
			<column name="project" type="char" length="38" jt="1" />
			<column name="description" type="text" length="250" jt="-1" />
			<column name="enabled" type="boolean" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="readonly" type="boolean" jt="-7" mandatory="y" >
				<defo>false</defo>
			</column>
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<index name="pk_dd_variant_uuid" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="idx_dd_variant_project" unique="NORMAL" >
				<column name="project" />
			</index>
			<index name="uix_dd_variant_name" unique="UNIQUE" >
				<column name="name" />
				<column name="project" />
			</index>
			<fk name="fk_dd_variant_rp_project" to_schema="Default" to_table="rp_project" delete_action="cascade" update_action="cascade" >
				<fk_column name="project" pk="uuid" />
			</fk>
		</table>
		<table name="rp_transaction" generator_rows="100" >
			<comment><![CDATA[Contains the transaction used to control. Transactions common accross all projects defined in the repository.]]></comment>
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="name" type="varchar" length="100" jt="12" />
			<column name="description" type="text" jt="-1" />
			<index name="pk_rp_transaction" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="idx_rp_transaction_name" unique="NORMAL" >
				<column name="name" />
			</index>
		</table>
		<table name="sp_comment" generator_rows="337" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="member" type="char" length="38" jt="1" mandatory="y" />
			<column name="comment" type="text" jt="-1" />
			<column name="timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="ddo" type="char" length="38" jt="1" />
			<column name="revision" type="integer" jt="4" >
				<defo>0</defo>
			</column>
			<column name="parent" type="char" length="38" jt="1" />
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<index name="pk_pr_comments_uuid" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="idx_sp_comments_ddo" unique="NORMAL" >
				<column name="ddo" />
			</index>
			<index name="idx_sp_comments_member" unique="NORMAL" >
				<column name="member" />
			</index>
			<fk name="fk_pr_comments_dd_object" to_schema="Default" to_table="dd_object" delete_action="cascade" >
				<fk_column name="ddo" pk="uuid" />
			</fk>
			<fk name="fk_pr_comments_rp_member" to_schema="Default" to_table="rp_member" >
				<fk_column name="member" pk="uuid" />
			</fk>
		</table>
		<table name="sp_issue" generator_rows="337" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="title" type="varchar" length="255" jt="12" >
				<comment><![CDATA[The issue's title.]]></comment>
			</column>
			<column name="description" type="text" jt="-1" />
			<column name="degree_of_completion" type="integer" jt="4" >
				<defo>0</defo>
				<comment><![CDATA[Degree of completion (from 0% to 100%)]]></comment>
			</column>
			<column name="start_date" type="date" jt="91" />
			<column name="due_date" type="date" jt="91" />
			<column name="date_of_completion" type="date" jt="91" />
			<column name="state" type="varchar" length="100" jt="12" />
			<column name="priority" type="varchar" length="100" jt="12" />
			<column name="responsible" type="char" length="38" jt="1" />
			<column name="tracker" type="varchar" length="100" jt="12" >
				<defo>&#039;reposyd&#039;</defo>
			</column>
			<column name="solution" type="char" length="38" jt="1" />
			<column name="repository" type="char" length="38" jt="1" mandatory="y" />
			<column name="workflow" type="varchar" length="100" jt="12" >
				<defo>&#039;none&#039;</defo>
			</column>
			<column name="dd_uuid" type="char" length="38" jt="1" >
				<comment><![CDATA[The uuid of the associated design data (object, link,...)]]></comment>
			</column>
			<column name="dd_type" type="varchar" length="100" jt="12" />
			<column name="cm_revision" type="bigint" jt="-5" >
				<defo>0</defo>
			</column>
			<column name="cm_timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="cm_owner" type="char" length="38" jt="1" />
			<column name="cm_modified_by" type="char" length="38" jt="1" />
			<column name="cm_deleted" type="boolean" jt="-7" >
				<defo>0</defo>
			</column>
			<index name="pk_ms_issue_uuid" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="Idx_sp_issue_solution" unique="NORMAL" >
				<column name="solution" />
			</index>
			<fk name="fk_sp_issue_rp_solution_space" to_schema="Default" to_table="rp_solution_space" delete_action="cascade" >
				<fk_column name="solution" pk="uuid" />
			</fk>
		</table>
		<table name="sp_issue_history" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="title" type="varchar" length="255" jt="12" >
				<comment><![CDATA[The issue's title.]]></comment>
			</column>
			<column name="description" type="text" jt="-1" />
			<column name="degree_of_completion" type="integer" jt="4" >
				<defo>0</defo>
				<comment><![CDATA[Degree of completion (from 0% to 100%)]]></comment>
			</column>
			<column name="start_date" type="date" jt="91" />
			<column name="due_date" type="date" jt="91" />
			<column name="date_of_completion" type="date" jt="91" />
			<column name="state" type="varchar" length="100" jt="12" />
			<column name="priority" type="varchar" length="100" jt="12" />
			<column name="responsible" type="char" length="38" jt="1" />
			<column name="tracker" type="varchar" length="100" jt="12" >
				<defo>&#039;reposyd&#039;</defo>
			</column>
			<column name="solution" type="char" length="38" jt="1" />
			<column name="repository" type="char" length="38" jt="1" />
			<column name="workflow" type="varchar" length="100" jt="12" >
				<defo>&#039;none&#039;</defo>
			</column>
			<column name="dd_uuid" type="char" length="38" jt="1" >
				<comment><![CDATA[The uuid of the associated design data (object, link,...)]]></comment>
			</column>
			<column name="dd_type" type="varchar" length="100" jt="12" />
			<column name="cm_revision" type="bigint" jt="-5" >
				<defo>0</defo>
			</column>
			<column name="cm_timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="cm_owner" type="char" length="38" jt="1" />
			<column name="cm_modified_by" type="char" length="38" jt="1" />
			<column name="cm_deleted" type="boolean" jt="-7" />
			<index name="pk_ms_issue_uuid_0" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="Idx_sp_issue_solution_0" unique="NORMAL" >
				<column name="solution" />
			</index>
		</table>
		<table name="sp_messagebox" >
			<comment><![CDATA[This tables stores messages either generated by RePoSyD's database engine or manually created by an user.]]></comment>
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" />
			<column name="member" type="char" length="38" jt="1" mandatory="y" />
			<column name="message" type="text" jt="-1" />
			<column name="read" type="datetime" jt="93" />
			<column name="timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="project" type="char" length="38" jt="1" mandatory="y" />
			<index name="Pk_rp_messagebox_uuid" unique="PRIMARY_KEY" >
				<column name="uuid" />
			</index>
			<index name="idx_rp_messagebox_project" unique="NORMAL" >
				<column name="project" />
			</index>
			<index name="idx_rp_messagebox_member" unique="NORMAL" >
				<column name="member" />
			</index>
			<fk name="fk_rp_messagebox_rp_project" to_schema="Default" to_table="rp_project" delete_action="cascade" >
				<fk_column name="project" pk="uuid" />
			</fk>
			<fk name="fk_rp_messagebox_rp_member" to_schema="Default" to_table="rp_member" delete_action="cascade" >
				<fk_column name="member" pk="uuid" />
			</fk>
		</table>
		<table name="sp_script" generator_rows="100" >
			<column name="uuid" type="char" length="38" jt="1" />
			<column name="type" type="varchar" length="100" jt="12" >
				<comment><![CDATA[reportblock]]></comment>
			</column>
			<column name="name" type="varchar" length="100" jt="12" />
			<column name="code" type="blob" jt="2004" />
			<column name="cm_revision" type="integer" jt="4" >
				<defo>0</defo>
			</column>
			<column name="cm_timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="cm_modified_by" type="char" length="38" jt="1" mandatory="y" />
			<column name="cm_deleted" type="boolean" jt="-7" >
				<defo>0</defo>
			</column>
			<index name="uix_se_script_uuid" unique="UNIQUE" >
				<column name="uuid" />
			</index>
			<index name="unq_sp_script" unique="UNIQUE" >
				<column name="type" />
				<column name="name" />
			</index>
		</table>
		<table name="sp_script_project" >
			<column name="script" type="char" length="38" jt="1" />
			<column name="project" type="char" length="38" jt="1" />
			<index name="idx_sp_script_project_script" unique="NORMAL" >
				<column name="script" />
			</index>
			<index name="idx_sp_script_project_project" unique="NORMAL" >
				<column name="project" />
			</index>
			<fk name="fk_sp_script_project_sp_script" to_schema="Default" to_table="sp_script" delete_action="cascade" update_action="cascade" >
				<fk_column name="script" pk="uuid" />
			</fk>
			<fk name="fk_sp_script_project" to_schema="Default" to_table="rp_project" delete_action="cascade" update_action="cascade" >
				<fk_column name="project" pk="uuid" />
			</fk>
		</table>
		<table name="sp_sys_log" >
			<column name="timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="level" type="varchar" length="100" jt="12" mandatory="y" >
				<enumeration>&#039;info&#039;,&#039;warn&#039;,&#039;error&#039;,&#039;fatal&#039;</enumeration>
			</column>
			<column name="message" type="text" jt="-1" />
		</table>
		<table name="sp_tags" >
			<column name="uuid" type="char" length="38" jt="1" />
			<column name="name" type="char" length="255" jt="1" mandatory="y" />
			<index name="Pk_sp_tags_name" unique="PRIMARY_KEY" >
				<column name="name" />
			</index>
			<index name="Idx_sp_tags_uuid" unique="UNIQUE" >
				<column name="uuid" />
			</index>
		</table>
		<table name="sp_tags_ddo" >
			<column name="ddo" type="char" length="38" jt="1" mandatory="y" />
			<column name="tag" type="char" length="38" jt="1" mandatory="y" />
			<index name="Pk_sp_tags_ddo" unique="PRIMARY_KEY" >
				<column name="ddo" />
				<column name="tag" />
			</index>
			<fk name="fk_sp_tags_ddo_dd_ddo_solution" to_schema="Default" to_table="dd_ddo_solution" delete_action="cascade" >
				<fk_column name="ddo" pk="ddo" />
			</fk>
			<fk name="fk_sp_tags_ddo_sp_tags" to_schema="Default" to_table="sp_tags" >
				<fk_column name="tag" pk="uuid" />
			</fk>
		</table>
		<table name="sp_translation" >
			<column name="uuid" type="char" length="38" jt="1" mandatory="y" >
				<comment><![CDATA[Contains the object's uuid.]]></comment>
			</column>
			<column name="code" type="char" length="5" jt="1" mandatory="y" >
				<comment><![CDATA[Contains the language code, e.g. en-us, de-de, de-at,...]]></comment>
			</column>
			<column name="key" type="varchar" length="100" jt="12" mandatory="y" />
			<column name="translation" type="text" jt="-1" />
			<column name="dirty" type="boolean" jt="-7" >
				<defo>0</defo>
			</column>
			<column name="revisionFrom" type="integer" jt="4" >
				<defo>-1</defo>
			</column>
			<column name="revisionTo" type="integer" jt="4" >
				<defo>-1</defo>
			</column>
			<column name="acceptedBy" type="char" length="38" jt="1" />
			<column name="acceptedTimestamp" type="datetime" jt="93" />
			<column name="timestamp" type="datetime" jt="93" mandatory="y" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<index name="pk_sp_translation" unique="PRIMARY_KEY" >
				<column name="uuid" />
				<column name="code" />
				<column name="key" />
			</index>
		</table>
		<table name="sp_user_log" >
			<column name="timestamp" type="datetime" jt="93" >
				<defo>CURRENT_TIMESTAMP</defo>
			</column>
			<column name="category" type="varchar" length="100" jt="12" />
			<column name="message" type="text" jt="-1" />
			<column name="user" type="char" length="38" jt="1" />
		</table>
		<table name="sp_watcher" >
			<column name="member" type="char" length="38" jt="1" />
			<column name="solution" type="char" length="38" jt="1" />
			<column name="type" type="char" length="100" jt="1" >
				<defo>&#039;ddo&#039;</defo>
			</column>
			<column name="uuid" type="integer" jt="4" />
		</table>
		<view name="ac_owner" >
			<view_script><![CDATA[SELECT ddo.solution AS ds_uuid,
       ddo.ddo AS do_uuid,
       ip.uuid AS ip_uuid,
       ip.name AS ip_name,
       ip.type AS ip_type,
       ip.description AS ip_description
  FROM dd_ddo_solution AS ddo
       LEFT JOIN
       po_ipt ip ON (ip.uuid = ddo.cm_owner) 
 WHERE ddo.revision_to == -1]]></view_script>
			<column name="ds_uuid" type="char " />
			<column name="do_uuid" type="char " />
			<column name="ip_uuid" type="char" />
			<column name="ip_name" type="varchar" />
			<column name="ip_type" type="varchar" />
			<column name="ip_description" type="text" />
		</view>
		<view name="ac_roles" >
			<view_script><![CDATA[SELECT ro.project AS po_uuid,
           ro.uuid AS ro_uuid,
           ro.name AS ro_name,
           ro.description AS ro_description,
           ro.state AS ro_state
      FROM po_role AS ro;]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="ro_uuid" type="char" />
			<column name="ro_name" type="varchar" />
			<column name="ro_description" type="text" />
			<column name="ro_state" type="varchar" />
		</view>
		<view name="ac_transactions" >
			<view_script><![CDATA[SELECT uuid AS tn_uuid,name AS tn_name, description AS tn_description FROM rp_transaction]]></view_script>
			<column name="tn_uuid" type="char" />
			<column name="tn_name" type="varchar" />
			<column name="tn_description" type="text" />
		</view>
		<view name="dac_container" >
			<view_script><![CDATA[SELECT dac.solution AS ds_uuid,
           dac.uuid AS dac_uuid,
           dac.name AS dac_name,
           dac.state AS dac_state,
           dac.description AS dac_description,
           dac.definition AS dad_uuid,
           dad.type AS dad_type,
           dad.name AS dad_name,
           dad.description AS dad_description,
           dad.properties AS dad_properties
      FROM da_analysis_container AS dac
           INNER JOIN
           da_analysis_definition dad ON (dac.definition = dad.uuid)]]></view_script>
			<column name="ds_uuid" type="char" />
			<column name="dac_uuid" type="char" />
			<column name="dac_name" type="varchar" />
			<column name="dac_state" type="varchar" />
			<column name="dac_description" type="text" />
			<column name="dad_uuid" type="char" />
			<column name="dad_type" type="varchar" />
			<column name="dad_name" type="varchar" />
			<column name="dad_description" type="text" />
			<column name="dad_properties" type="text" />
		</view>
		<view name="dac_definition" >
			<view_script><![CDATA[SELECT dad.uuid AS dad_uuid,
       dad.project AS po_uuid,
       dad.name AS dad_name,
       dad.description AS dad_description,
       dad.name AS do_name,
       dad.type AS dad_type,
       dad.properties AS dad_properties,
       dad.repository AS rp_uuid
  FROM da_analysis_definition AS dad]]></view_script>
			<column name="dad_uuid" type="char" />
			<column name="po_uuid" type="char" />
			<column name="dad_name" type="varchar" />
			<column name="dad_description" type="text" />
			<column name="do_name" type="varchar" />
			<column name="dad_type" type="varchar" />
			<column name="dad_properties" type="text" />
			<column name="rp_uuid" type="char" />
		</view>
		<view name="dac_result" >
			<view_script><![CDATA[SELECT dac.solution AS ds_uuid,
           dac.uuid AS dac_uuid,
           dar.uuid AS dar_uuid,
           dar.state AS dar_state,
           dar.revision AS dar_revision,
           dao.ddo AS dao_uuid,
           dao.matrix AS dao_matrix,
           rpm.uuid AS mb_uuid,
           rpm.account AS mb_account,
           rpm.name AS mb_name 
      FROM da_analysis_container AS dac
           INNER JOIN
           da_analysis_result dar ON (dar.container = dac.uuid) 
           INNER JOIN
           rp_member rpm ON (rpm.uuid = dar.modifiedby)
           INNER JOIN
           da_analysis_object dao ON (dao.result=dar.uuid)]]></view_script>
			<column name="ds_uuid" type="char" />
			<column name="dac_uuid" type="char" />
			<column name="dar_uuid" type="char" />
			<column name="dar_state" type="varchar" />
			<column name="dar_revision" type="integer" />
			<column name="dao_uuid" type="char " />
			<column name="dao_matrix" type="char " />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
		</view>
		<view name="dac_result_properties" >
			<view_script><![CDATA[SELECT dac.solution AS ds_uuid,
       dac.uuid AS dac_uuid,
       dar.uuid AS dar_uuid,
       dar.state AS dar_state,
       dar.revision AS dar_revision,
       dao.ddo AS dao_uuid,
       dao.matrix AS dao_matrix,
       dap.key AS dap_key,
       dap.value AS dap_value,
       rpm.uuid AS mb_uuid,
       rpm.account AS mb_account,
       rpm.name AS mb_name
  FROM da_analysis_container AS dac
       INNER JOIN
       da_analysis_result dar ON (dar.container = dac.uuid) 
       INNER JOIN
       rp_member rpm ON (rpm.uuid = dar.modifiedby) 
       INNER JOIN
       da_analysis_object dao ON (dao.result = dar.uuid)
       LEFT JOIN
       da_analysis_result_properties dap ON (dap.result=dar.uuid)]]></view_script>
			<column name="ds_uuid" type="char" />
			<column name="dac_uuid" type="char" />
			<column name="dar_uuid" type="char" />
			<column name="dar_state" type="varchar" />
			<column name="dar_revision" type="integer" />
			<column name="dao_uuid" type="char" />
			<column name="dao_matrix" type="char" />
			<column name="dap_key" type="varchar" />
			<column name="dap_value" type="blob" />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
		</view>
		<view name="dd_hierarchy" >
			<view_script><![CDATA[SELECT dh.project AS po_uuid,
           dh.uuid AS dh_uuid,
           dh.name AS dh_name,
           dh.up AS dl_up_uuid,
           dh.down AS dl_down_uuid,
           dh.repository AS rp_uuid
      FROM dd_def_hierarchy AS dh]]></view_script>
			<column name="po_uuid" type="char " />
			<column name="dh_uuid" type="char " />
			<column name="dh_name" type="varchar " />
			<column name="dl_up_uuid" type="char " />
			<column name="dl_down_uuid" type="char " />
			<column name="rp_uuid" type="char " />
		</view>
		<view name="ddo_locked" >
			<view_script><![CDATA[SELECT rpl.project AS po_uuid,
       rpl.uuid AS do_uuid,
       rpl.timestamp AS lk_timestamp,
       rpm.uuid AS mb_uuid,
       rpm.account AS mb_account,
       rpm.name AS mb_name
  FROM rp_lock AS rpl
       INNER JOIN
       rp_member rpm ON (rpm.uuid = rpl.member);
]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="do_uuid" type="char" />
			<column name="lk_timestamp" type="datetime" />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
		</view>
		<view name="dm_diagrams" >
			<view_script><![CDATA[SELECT dm.solution AS ds_uuid,
       dm.uuid AS dm_uuid,
       tr.code AS tr_code,
       tr.translation AS dm_name,
       dm.type AS dm_type,
       dm.properties AS dm_properties,
       dm.ddo AS do_uuid,
       dm.cm_revision AS cm_revision,
       dm.cm_modified_by AS cm_modified_by,
       dm.cm_timestamp AS cm_timestamp
  FROM dm_diagram AS dm
       LEFT JOIN
       sp_translation tr ON (tr.uuid = dm.uuid)
  WHERE dm.cm_deleted = 0]]></view_script>
			<column name="ds_uuid" type="char" />
			<column name="dm_uuid" type="char" />
			<column name="tr_code" type="char" />
			<column name="dm_name" type="text" />
			<column name="dm_type" type="char " />
			<column name="dm_properties" type="text" />
			<column name="do_uuid" type="char" />
			<column name="cm_revision" type="integer" />
			<column name="cm_modified_by" type="char " />
			<column name="cm_timestamp" type="datetime" />
		</view>
		<view name="dm_items" >
			<view_script><![CDATA[SELECT uuid AS di_uuid,
       diagram AS dm_uuid,
       type AS di_type,
       ddoddl AS di_ddoddl,
       ghost AS di_ghost,
       revision_from AS di_revision_from
  FROM dm_item]]></view_script>
			<column name="di_uuid" type="char" />
			<column name="dm_uuid" type="char" />
			<column name="di_type" type="varchar" />
			<column name="di_ddoddl" type="char" />
			<column name="di_ghost" type="boolean" />
			<column name="di_revision_from" type="integer" />
		</view>
		<view name="do_template" >
			<view_script><![CDATA[SELECT dd.project AS po_uuid,
       dd.uuid AS do_uuid,
       dt.uuid AS dt_uuid,
       dt.id AS dt_id,
       dt.category AS dt_category,
       dt.template AS dt_template,
	   rpm.account AS dt_mb_account,
       rpm.uuid AS dt_mb_uuid,
       rpm.name AS dt_mb_name,
       dt.cm_timestamp AS dt_timestamp,
       dt.repository AS dt_repository
  FROM dd_def_object AS dd
       INNER JOIN
       dd_template dt ON (dt.ddo = dd.uuid)
	   LEFT JOIN
       rp_member rpm ON (rpm.uuid = dt.cm_modified_by) ]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="do_uuid" type="char" />
			<column name="dt_uuid" type="char " />
			<column name="dt_id" type="varchar " />
			<column name="dt_category" type="varchar " />
			<column name="dt_template" type="blob" />
			<column name="dt_mb_account" type="varchar" />
			<column name="dt_mb_uuid" type="char" />
			<column name="dt_mb_name" type="varchar" />
			<column name="dt_timestamp" type="datetime" />
			<column name="dt_repository" type="char " />
		</view>
		<view name="ds_ddl_left" >
			<view_script><![CDATA[SELECT ddl.ds_uuid,
       ddl.dl_uuid,
       ddl.dl_definition,
       ddl.dl_cm_revision,
       ddl.dl_cm_timestamp,
       ddl.mb_uuid AS dl_mb_uuid,
       ddl.mb_name AS dl_mb_name,
       ddl.mb_account AS dl_mb_account,
       ddl.dl_left,
       ddl.dl_left_from AS dl_left_from,
	   ddl.dl_right,
       ddl.dl_right_from AS dl_right_from,
       ddl.dl_accepted_state AS dl_accepted_state,
       ddl.dl_accepted_by AS dl_accepted_by,
       ddl.dl_accepted_revision_left AS dl_accepted_revision_left,
       ddl.dl_accepted_revision_right AS dl_accepted_revision_right,
       ddl.dl_accepted_comment AS dl_accepted_comment,
       ddo.*
  FROM ds_ddl_na AS ddl
       INNER JOIN
       ds_ddo ddo ON (ddo.do_uuid = ddl.dl_left AND 
                      ddo.ds_uuid = ddl.ds_uuid) 
 WHERE ddl.dl_left_to = -1 AND 
       ddl.dl_right_to = -1]]></view_script>
			<column name="ds_uuid" type="char" />
			<column name="dl_uuid" type="char" />
			<column name="dl_definition" type="char " />
			<column name="dl_cm_revision" type="integer" />
			<column name="dl_cm_timestamp" type="datetime" />
			<column name="dl_mb_uuid" type="char" />
			<column name="dl_mb_name" type="varchar" />
			<column name="dl_mb_account" type="varchar" />
			<column name="dl_left" type="char " />
			<column name="dl_left_from" type="integer" />
			<column name="dl_right" type="char " />
			<column name="dl_right_from" type="integer" />
			<column name="dl_accepted_state" type="varchar" />
			<column name="dl_accepted_by" type="char" />
			<column name="dl_accepted_revision_left" type="integer" />
			<column name="dl_accepted_revision_right" type="integer" />
			<column name="dl_accepted_comment" type="varchar" />
			<column name="ds_uuid" type="char" />
			<column name="do_uuid" type="char" />
			<column name="do_definition" type="char" />
			<column name="do_local_id" type="integer" />
			<column name="do_cm_revision" type="integer" />
			<column name="do_cm_timestamp" type="datetime" />
			<column name="do_cm_modified_by" type="char" />
			<column name="do_repository" type="char" />
			<column name="do_mb_uuid" type="char" />
			<column name="do_mb_name" type="varchar" />
			<column name="do_mb_account" type="varchar" />
			<column name="do_ow_uuid" type="char" />
			<column name="do_ow_name" type="varchar" />
			<column name="do_rs_uuid" type="char" />
			<column name="do_rs_name" type="varchar" />
			<column name="da_id" type="varchar" />
			<column name="da_uuid" type="char" />
			<column name="da_value" type="blob" />
			<column name="ds_uuid:1" type="char" />
		</view>
		<view name="ds_ddl_left_na" >
			<view_script><![CDATA[SELECT ddl.ds_uuid,
       ddl.dl_uuid,
       ddl.dl_definition,
       ddl.dl_cm_revision,
       ddl.dl_cm_timestamp,
       ddl.dl_right,
       ddl.mb_uuid AS dl_mb_uuid,
       ddl.mb_name AS dl_mb_name,
       ddl.mb_account AS dl_mb_account,
       ddl.dl_left_from AS dl_left_from,
       ddl.dl_right_from AS dl_right_from,
       ddl.dl_accepted_state AS dl_accepted_state,
       ddl.dl_accepted_by AS dl_accepted_by,
       ddl.dl_accepted_revision_left AS dl_accepted_revision_left,
       ddl.dl_accepted_revision_right AS dl_accepted_revision_right, 
       ddl.dl_accepted_comment AS dl_accepted_comment,
       ddo.*
  FROM ds_ddl_na AS ddl
       INNER JOIN
       ds_ddo_na ddo ON (ddo.do_uuid = ddl.dl_left AND 
                         ddo.ds_uuid = ddl.ds_uuid) 
 WHERE ddl.dl_left_to = -1 AND 
       ddl.dl_right_to = -1]]></view_script>
			<column name="ds_uuid" type="char " />
			<column name="dl_uuid" type="char " />
			<column name="dl_definition" type="char" />
			<column name="dl_cm_revision" type="integer" />
			<column name="dl_cm_timestamp" type="datetime" />
			<column name="dl_right" type="char" />
			<column name="dl_mb_uuid" type="char" />
			<column name="dl_mb_name" type="varchar" />
			<column name="dl_mb_account" type="varchar" />
			<column name="dl_left_from" type="integer" />
			<column name="dl_right_from" type="integer" />
			<column name="dl_accepted_state" type="varchar " />
			<column name="dl_accepted_by" type="char " />
			<column name="dl_accepted_revision_left" type="integer" />
			<column name="dl_accepted_revision_right" type="integer" />
			<column name="dl_accepted_comment" type="varchar " />
			<column name="ds_uuid" type="char" />
			<column name="do_uuid" type="char" />
			<column name="do_definition" type="char" />
			<column name="do_local_id" type="integer" />
			<column name="do_cm_revision" type="integer" />
			<column name="do_cm_timestamp" type="datetime" />
			<column name="do_repository" type="char" />
			<column name="ow_uuid" type="char" />
			<column name="ow_name" type="varchar" />
			<column name="rs_uuid" type="char" />
			<column name="rs_name" type="varchar" />
			<column name="ds_uuid:1" type="char" />
		</view>
		<view name="ds_ddl_na" >
			<view_script><![CDATA[SELECT dds.solution AS ds_uuid,
       dds.ddl AS dl_uuid,
       ddl.definition AS dl_definition,
       do_left AS dl_left,
       ddo_l.cm_revision AS dl_leftRevision,
       dds.left_from AS dl_left_from,
       dds.left_to AS dl_left_to,
       do_right AS dl_right,
       ddo_r.cm_revision AS dl_right_revision,
       dds.right_from AS dl_right_from,
       dds.right_to AS dl_right_to,
       rpm.uuid AS mb_uuid,
       rpm.name AS mb_name,
       rpm.account AS mb_account,
       dds.cm_revision AS dl_cm_revision,
       dds.accepted_by AS dl_accepted_by,
       dds.accepted_revision_left AS dl_accepted_revision_left,
       dds.accepted_revision_right AS dl_accepted_revision_right,
       dds.accepted_state AS dl_accepted_state,
       dds.accepted_comment AS dl_accepted_comment,
       dds.cm_timestamp AS dl_cm_timestamp,
       ddl.repository AS dl_repository
  FROM dd_link ddl
       INNER JOIN
       dd_ddl_solution dds ON (dds.ddl = ddl.uuid) 
       INNER JOIN
       dd_object ddo_l ON (ddo_l.uuid = ddl.do_left) 
       INNER JOIN
       dd_object ddo_r ON (ddo_r.uuid = ddl.do_right) 
       LEFT JOIN
       rp_member rpm ON (rpm.uuid = dds.cm_modified_by) 
 WHERE dds.left_to = -1]]></view_script>
			<column name="ds_uuid" type="char " />
			<column name="dl_uuid" type="char " />
			<column name="dl_definition" type="char" />
			<column name="dl_left" type="char" />
			<column name="dl_leftRevision" type="integer" />
			<column name="dl_left_from" type="integer" />
			<column name="dl_left_to" type="integer" />
			<column name="dl_right" type="char" />
			<column name="dl_right_revision" type="integer" />
			<column name="dl_right_from" type="integer" />
			<column name="dl_right_to" type="integer" />
			<column name="mb_uuid" type="char" />
			<column name="mb_name" type="varchar" />
			<column name="mb_account" type="varchar" />
			<column name="dl_cm_revision" type="integer" />
			<column name="dl_accepted_by" type="char " />
			<column name="dl_accepted_revision_left" type="integer" />
			<column name="dl_accepted_revision_right" type="integer" />
			<column name="dl_accepted_state" type="varchar " />
			<column name="dl_accepted_comment" type="varchar " />
			<column name="dl_cm_timestamp" type="datetime" />
			<column name="dl_repository" type="char" />
		</view>
		<view name="ds_ddl_right" >
			<view_script><![CDATA[SELECT ddl.ds_uuid,
       ddl.dl_uuid,
       ddl.dl_definition,
       ddl.dl_cm_revision,
       ddl.dl_cm_timestamp,
       ddl.mb_uuid AS dl_mb_uuid,
       ddl.mb_name AS dl_mb_name,
       ddl.mb_account AS dl_mb_account,
       ddl.dl_left,
       ddl.dl_left_from AS dl_left_from,
       ddl.dl_right,
       ddl.dl_right_from AS dl_right_from,
       ddl.dl_accepted_state AS dl_accepted_state,
       ddl.dl_accepted_by AS dl_accepted_by,
       ddl.dl_accepted_revision_left AS dl_accepted_revision_left,
       ddl.dl_accepted_revision_right AS dl_accepted_revision_right,
       ddl.dl_accepted_comment AS dl_accepted_comment,
       ddo.*
  FROM ds_ddl_na AS ddl
       INNER JOIN
       ds_ddo ddo ON (ddo.do_uuid = ddl.dl_right AND 
                      ddo.ds_uuid = ddl.ds_uuid) 
 WHERE ddl.dl_left_to = -1 AND 
       ddl.dl_right_to = -1]]></view_script>
			<column name="ds_uuid" type="char" />
			<column name="dl_uuid" type="char" />
			<column name="dl_definition" type="char " />
			<column name="dl_cm_revision" type="integer" />
			<column name="dl_cm_timestamp" type="datetime" />
			<column name="dl_mb_uuid" type="char" />
			<column name="dl_mb_name" type="varchar" />
			<column name="dl_mb_account" type="varchar" />
			<column name="dl_left" type="char " />
			<column name="dl_left_from" type="integer" />
			<column name="dl_right" type="char " />
			<column name="dl_right_from" type="integer" />
			<column name="dl_accepted_state" type="varchar" />
			<column name="dl_accepted_by" type="char" />
			<column name="dl_accepted_revision_left" type="integer" />
			<column name="dl_accepted_revision_right" type="integer" />
			<column name="dl_accepted_comment" type="varchar" />
			<column name="ds_uuid" type="char" />
			<column name="do_uuid" type="char" />
			<column name="do_definition" type="char" />
			<column name="do_local_id" type="integer" />
			<column name="do_cm_revision" type="integer" />
			<column name="do_cm_timestamp" type="datetime" />
			<column name="do_cm_modified_by" type="char" />
			<column name="do_repository" type="char" />
			<column name="do_mb_uuid" type="char" />
			<column name="do_mb_name" type="varchar" />
			<column name="do_mb_account" type="varchar" />
			<column name="do_ow_uuid" type="char" />
			<column name="do_ow_name" type="varchar" />
			<column name="do_rs_uuid" type="char" />
			<column name="do_rs_name" type="varchar" />
			<column name="da_id" type="varchar" />
			<column name="da_uuid" type="char" />
			<column name="da_value" type="blob" />
			<column name="ds_uuid:1" type="char" />
		</view>
		<view name="ds_ddl_right_na" >
			<view_script><![CDATA[SELECT ddl.ds_uuid,
       ddl.dl_uuid,
       ddl.dl_definition,
       ddl.dl_cm_revision,
       ddl.dl_cm_timestamp,
       ddl.dl_left,
       ddl.mb_uuid AS dl_mb_uuid,
       ddl.mb_name AS dl_mb_name,
       ddl.mb_account AS dl_mb_account,
       ddl.dl_left_from AS dl_left_from,
       ddl.dl_right_from AS dl_right_from,
       ddl.dl_accepted_state AS dl_accepted_state,
       ddl.dl_accepted_by AS dl_accepted_by,
       ddl.dl_accepted_revision_left AS dl_accepted_revision_left,
       ddl.dl_accepted_revision_right AS dl_accepted_revision_right, 
       ddl.dl_accepted_comment AS dl_accepted_comment,
       ddo.*
  FROM ds_ddl_na AS ddl
       INNER JOIN
       ds_ddo_na ddo ON (ddo.do_uuid = ddl.dl_right AND 
                         ddo.ds_uuid = ddl.ds_uuid) 
 WHERE ddl.dl_left_to = -1 AND 
       ddl.dl_right_to = -1]]></view_script>
			<column name="ds_uuid" type="char " />
			<column name="dl_uuid" type="char " />
			<column name="dl_definition" type="char" />
			<column name="dl_cm_revision" type="integer" />
			<column name="dl_cm_timestamp" type="datetime" />
			<column name="dl_left" type="char" />
			<column name="dl_mb_uuid" type="char" />
			<column name="dl_mb_name" type="varchar" />
			<column name="dl_mb_account" type="varchar" />
			<column name="dl_left_from" type="integer" />
			<column name="dl_right_from" type="integer" />
			<column name="dl_accepted_state" type="varchar " />
			<column name="dl_accepted_by" type="char " />
			<column name="dl_accepted_revision_left" type="integer" />
			<column name="dl_accepted_revision_right" type="integer" />
			<column name="dl_accepted_comment" type="varchar " />
			<column name="ds_uuid" type="char" />
			<column name="do_uuid" type="char" />
			<column name="do_definition" type="char" />
			<column name="do_local_id" type="integer" />
			<column name="do_cm_revision" type="integer" />
			<column name="do_cm_timestamp" type="datetime" />
			<column name="do_repository" type="char" />
			<column name="ow_uuid" type="char" />
			<column name="ow_name" type="varchar" />
			<column name="rs_uuid" type="char" />
			<column name="rs_name" type="varchar" />
			<column name="ds_uuid:1" type="char" />
		</view>
		<view name="ds_ddo" >
			<view_script><![CDATA[SELECT ds.solution AS ds_uuid,
           da.ddo AS do_uuid,
           ddo.definition AS do_definition,
           ddo.localId AS do_local_id,
           ddo.cm_revision AS do_cm_revision,
           ddo.cm_timestamp AS do_cm_timestamp,
           ddo.cm_modified_by AS do_cm_modified_by,
           ddo.repository AS do_repository,
           rpm.uuid AS do_mb_uuid,
           rpm.name AS do_mb_name,
           rpm.account AS do_mb_account,
           ow.uuid AS do_ow_uuid,
           ow.name AS do_ow_name,
           rs.uuid AS do_rs_uuid,
           rs.name AS do_rs_name,
           dad.id AS da_id,
           da.dda AS da_uuid,
           da.value AS da_value
      FROM dd_attribute_value AS da
           INNER JOIN
           dd_def_attribute dad ON (dad.uuid=da.dda)
           LEFT JOIN
           cm_ddo cm ON (cm.ddo_uuid = da.ddo) 
           LEFT JOIN
           dd_object ddo ON (ddo.uuid = da.ddo) 
           LEFT JOIN
           dd_ddo_solution ds ON (ds.ddo = da.ddo) 
           LEFT JOIN
           po_ipt rs ON (rs.uuid = ds.responsible) 
           LEFT JOIN
           po_ipt ow ON (ow.uuid = ds.cm_owner) 
           LEFT JOIN
           rp_member rpm ON (rpm.uuid = ddo.cm_modified_by) 
     WHERE ds.revision_to == -1]]></view_script>
			<column name="ds_uuid" type="char " />
			<column name="do_uuid" type="char" />
			<column name="do_definition" type="char" />
			<column name="do_local_id" type="integer" />
			<column name="do_cm_revision" type="integer" />
			<column name="do_cm_timestamp" type="datetime" />
			<column name="do_cm_modified_by" type="char" />
			<column name="do_repository" type="char" />
			<column name="do_mb_uuid" type="char" />
			<column name="do_mb_name" type="varchar" />
			<column name="do_mb_account" type="varchar" />
			<column name="do_ow_uuid" type="char" />
			<column name="do_ow_name" type="varchar" />
			<column name="do_rs_uuid" type="char" />
			<column name="do_rs_name" type="varchar" />
			<column name="da_id" type="varchar" />
			<column name="da_uuid" type="char" />
			<column name="da_value" type="blob" />
		</view>
		<view name="ds_ddo_ddl_left" >
			<view_script><![CDATA[SELECT ddl.ds_uuid,
       ddl.dl_uuid,
       ddl.dl_definition,
       ddl.dl_cm_revision,
       ddl.dl_cm_timestamp,
       ddl.dl_right,
       ddl.mb_uuid AS dl_mb_uuid,
       ddl.mb_name AS dl_mb_name,
       ddl.mb_account AS dl_mb_account,
       ddl.dl_left_from AS dl_left_from,
       ddl.dl_right_from AS dl_right_from,
       ddl.dl_accepted_state AS dl_accepted_state,
       ddl.dl_accepted_by AS dl_accepted_by,
       ddl.dl_accepted_revision_left AS dl_accepted_revision_left,
       ddl.dl_accepted_revision_right AS dl_accepted_revision_right,
       ddl.dl_accepted_comment AS dl_accepted_comment,
       ddo.*
  FROM ds_ddo AS ddo
       LEFT JOIN
       ds_ddl_na ddl ON (ddo.do_uuid = ddl.dl_left AND 
                         ddo.ds_uuid = ddl.ds_uuid)]]></view_script>
			<column name="ds_uuid" type="char " />
			<column name="dl_uuid" type="char " />
			<column name="dl_definition" type="char" />
			<column name="dl_cm_revision" type="integer" />
			<column name="dl_cm_timestamp" type="datetime" />
			<column name="dl_right" type="char" />
			<column name="dl_mb_uuid" type="char" />
			<column name="dl_mb_name" type="varchar" />
			<column name="dl_mb_account" type="varchar" />
			<column name="dl_left_from" type="integer" />
			<column name="dl_right_from" type="integer" />
			<column name="dl_accepted_state" type="varchar " />
			<column name="dl_accepted_by" type="char " />
			<column name="dl_accepted_revision_left" type="integer" />
			<column name="dl_accepted_revision_right" type="integer" />
			<column name="dl_accepted_comment" type="varchar " />
			<column name="ds_uuid" type="char" />
			<column name="do_uuid" type="char" />
			<column name="do_definition" type="char" />
			<column name="do_local_id" type="integer" />
			<column name="do_cm_revision" type="integer" />
			<column name="do_cm_timestamp" type="datetime" />
			<column name="do_repository" type="char" />
			<column name="do_mb_uuid" type="char" />
			<column name="do_mb_name" type="varchar" />
			<column name="do_mb_account" type="varchar" />
			<column name="do_ow_uuid" type="char" />
			<column name="do_ow_name" type="varchar" />
			<column name="do_rs_uuid" type="char" />
			<column name="do_rs_name" type="varchar" />
			<column name="da_id" type="varchar" />
			<column name="da_uuid" type="char" />
			<column name="da_value" type="blob" />
			<column name="ds_uuid:1" type="char" />
		</view>
		<view name="ds_ddo_ddl_right" >
			<view_script><![CDATA[SELECT ddl.ds_uuid,
       ddl.dl_uuid,
       ddl.dl_definition,
       ddl.dl_cm_revision,
       ddl.dl_cm_timestamp,
       ddl.dl_left,
       ddl.mb_uuid AS dl_mb_uuid,
       ddl.mb_name AS dl_mb_name,
       ddl.mb_account AS dl_mb_account,
       ddl.dl_left_from AS dl_left_from,
       ddl.dl_right_from AS dl_right_from,
       ddl.dl_accepted_state AS dl_accepted_state,
       ddl.dl_accepted_by AS dl_accepted_by,
       ddl.dl_accepted_revision_left AS dl_accepted_revision_left,
       ddl.dl_accepted_revision_right AS dl_accepted_revision_right,
       ddl.dl_accepted_comment AS dl_accepted_comment,
       ddo.* 
  FROM ds_ddo AS ddo
       LEFT JOIN
       ds_ddl_na ddl ON (ddo.do_uuid = ddl.dl_right AND 
                         ddo.ds_uuid = ddl.ds_uuid)]]></view_script>
			<column name="ds_uuid" type="char " />
			<column name="dl_uuid" type="char " />
			<column name="dl_definition" type="char" />
			<column name="dl_cm_revision" type="integer" />
			<column name="dl_cm_timestamp" type="datetime" />
			<column name="dl_left" type="char" />
			<column name="dl_mb_uuid" type="char" />
			<column name="dl_mb_name" type="varchar" />
			<column name="dl_mb_account" type="varchar" />
			<column name="dl_left_from" type="integer" />
			<column name="dl_right_from" type="integer" />
			<column name="dl_accepted_state" type="varchar " />
			<column name="dl_accepted_by" type="char " />
			<column name="dl_accepted_revision_left" type="integer" />
			<column name="dl_accepted_revision_right" type="integer" />
			<column name="dl_accepted_comment" type="varchar " />
			<column name="ds_uuid" type="char" />
			<column name="do_uuid" type="char" />
			<column name="do_definition" type="char" />
			<column name="do_local_id" type="integer" />
			<column name="do_cm_revision" type="integer" />
			<column name="do_cm_timestamp" type="datetime" />
			<column name="do_repository" type="char" />
			<column name="do_mb_uuid" type="char" />
			<column name="do_mb_name" type="varchar" />
			<column name="do_mb_account" type="varchar" />
			<column name="do_ow_uuid" type="char" />
			<column name="do_ow_name" type="varchar" />
			<column name="do_rs_uuid" type="char" />
			<column name="do_rs_name" type="varchar" />
			<column name="da_id" type="varchar" />
			<column name="da_uuid" type="char" />
			<column name="da_value" type="blob" />
			<column name="ds_uuid:1" type="char" />
		</view>
		<view name="ds_ddo_history" >
			<view_script><![CDATA[SELECT ds.solution AS ds_uuid,
           da.ddo AS do_uuid,
           ddo.definition AS do_definition,
           ddo.localId AS do_local_id,
           ddo.cm_revision AS do_cm_revision,
           ddo.cm_timestamp AS do_cm_timestamp,
           ddo.cm_modified_by AS do_cm_modified_by,
           ddo.repository AS do_repository,
           rpm.uuid AS mb_uuid,
           rpm.name AS mb_name,
           rpm.account AS mb_account,
           ow.uuid AS ow_uuid,
           ow.name AS ow_name,
           rs.uuid AS rs_uuid,
           rs.name AS rs_name,
           dad.id AS da_id,
           da.dda AS da_uuid,
           da.value AS da_value 
      FROM dd_attribute_history AS da
           INNER JOIN
           dd_def_attribute dad ON (dad.uuid=da.dda)
           LEFT JOIN
           cm_ddo cm ON (cm.ddo_uuid = da.ddo) 
           LEFT JOIN
           dd_object_history ddo ON (ddo.uuid = da.ddo) 
           LEFT JOIN
           dd_ddo_solution ds ON (ds.ddo = da.ddo) 
           LEFT JOIN
           po_ipt rs ON (rs.uuid = ds.responsible) 
           LEFT JOIN
           po_ipt ow ON (ow.uuid = ds.cm_owner) 
           LEFT JOIN
           rp_member rpm ON (rpm.uuid = ddo.cm_modified_by) 
     WHERE ds.revision_to == -1]]></view_script>
			<column name="ds_uuid" type="char " />
			<column name="do_uuid" type="char" />
			<column name="do_definition" type="char " />
			<column name="do_local_id" type="integer" />
			<column name="do_cm_revision" type="integer" />
			<column name="do_cm_timestamp" type="datetime" />
			<column name="do_cm_modified_by" type="char " />
			<column name="do_repository" type="char " />
			<column name="mb_uuid" type="char" />
			<column name="mb_name" type="varchar" />
			<column name="mb_account" type="varchar" />
			<column name="ow_uuid" type="char" />
			<column name="ow_name" type="varchar" />
			<column name="rs_uuid" type="char" />
			<column name="rs_name" type="varchar" />
			<column name="da_id" type="varchar" />
			<column name="da_uuid" type="char" />
			<column name="da_value" type="blob" />
		</view>
		<view name="ds_ddo_na" >
			<comment><![CDATA[Lists all valid design data objects assigned to a solution space without their respective attributes]]></comment>
			<view_script><![CDATA[SELECT dds.solution AS ds_uuid,
       ddo.uuid AS do_uuid,
       ddo.definition AS do_definition,
       ddo.localId AS do_local_id,
       dd.id || '-' || ddo.localId AS do_puid,
       ddo.cm_revision AS do_cm_revision,
       ddo.cm_timestamp AS do_cm_timestamp,
       ddo.repository AS do_repository,
       ow.uuid AS ow_uuid,
       ow.name AS ow_name,
       rs.uuid AS rs_uuid,
       rs.name AS rs_name
  FROM dd_ddo_solution AS dds
       INNER JOIN
       dd_object ddo ON (ddo.uuid = dds.ddo) 
       LEFT JOIN
       po_ipt ow ON (ow.uuid = dds.cm_owner) 
       LEFT JOIN
       po_ipt rs ON (rs.uuid = dds.responsible)
       INNER JOIN
       dd_def_object dd ON (dd.uuid=ddo.definition)
 WHERE dds.revision_to = -1]]></view_script>
			<column name="ds_uuid" type="char" />
			<column name="do_uuid" type="char" />
			<column name="do_definition" type="char" />
			<column name="do_local_id" type="integer" />
			<column name="do_puid" type="char " />
			<column name="do_cm_revision" type="integer" />
			<column name="do_cm_timestamp" type="datetime" />
			<column name="do_repository" type="char" />
			<column name="ow_uuid" type="char" />
			<column name="ow_name" type="varchar" />
			<column name="rs_uuid" type="char" />
			<column name="rs_name" type="varchar" />
		</view>
		<view name="ds_ddo_na_history" >
			<view_script><![CDATA[SELECT dds.solution AS ds_uuid,
       ddo.uuid AS do_uuid,
       ddo.definition AS do_definition,
       ddo.localId AS do_local_id,
       dd.id || '-' || ddo.localId AS do_puid,
       ddo.cm_revision AS do_cm_revision,
       ddo.cm_timestamp AS do_cm_timestamp,
       ddo.repository AS do_repository,
       ow.uuid AS ow_uuid,
       ow.name AS ow_name,
       rs.uuid AS rs_uuid,
       rs.name AS rs_name
  FROM dd_ddo_solution AS dds
       INNER JOIN
       dd_object_history ddo ON (ddo.uuid = dds.ddo) 
       LEFT JOIN
       po_ipt ow ON (ow.uuid = dds.cm_owner) 
       LEFT JOIN
       po_ipt rs ON (rs.uuid = dds.responsible)
       INNER JOIN
       dd_def_object dd ON (dd.uuid=ddo.definition)
 WHERE dds.revision_to = -1]]></view_script>
			<column name="ds_uuid" type="char" />
			<column name="do_uuid" type="char" />
			<column name="do_definition" type="char" />
			<column name="do_local_id" type="integer" />
			<column name="do_puid" type="char " />
			<column name="do_cm_revision" type="integer" />
			<column name="do_cm_timestamp" type="datetime" />
			<column name="do_repository" type="char" />
			<column name="ow_uuid" type="char" />
			<column name="ow_name" type="varchar" />
			<column name="rs_uuid" type="char" />
			<column name="rs_name" type="varchar" />
		</view>
		<view name="ip_assigned_members" >
			<view_script><![CDATA[SELECT po.uuid AS po_uuid,
        ip.ipt AS ip_uuid,
       mb.account AS mb_account,
       mb.name AS mb_name,
       rpm.mode AS mb_mode,
       mb.radmin AS mb_radmin,
       mb.uuid AS mb_uuid,
       mb.repository AS mb_repository
  FROM rp_project po
       INNER JOIN
       rp_project_member rpm ON (po.uuid = rpm.project) 
       INNER JOIN
       rp_member mb ON (rpm.member = mb.uuid)
       INNER JOIN 
       po_ipt_member ip ON (ip.member=rpm.member)]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="ip_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
			<column name="mb_mode" type="varchar" />
			<column name="mb_radmin" type="bit" />
			<column name="mb_uuid" type="char" />
			<column name="mb_repository" type="char" />
		</view>
		<view name="mb_assigned_projects" >
			<view_script><![CDATA[SELECT pim.member AS mb_uuid,
           rpm.mode AS mb_mode,
           rp.uuid AS po_uuid,
           rp.name AS po_name,
           rp.state AS po_state
      FROM po_ipt_member pim
           INNER JOIN
           rp_project_member rpm ON (pim.member = rpm.member) 
           INNER JOIN
           po_ipt pi ON (pim.ipt = pi.uuid) 
           INNER JOIN
           rp_project rp ON (pi.project = rp.uuid)]]></view_script>
			<column name="mb_uuid" type="char" />
			<column name="mb_mode" type="varchar" />
			<column name="po_uuid" type="char" />
			<column name="po_name" type="varchar" />
			<column name="po_state" type="varchar" />
		</view>
		<view name="mb_assigned_roles" >
			<view_script><![CDATA[SELECT ro.project AS po_uuid,
       mb.uuid AS mb_uuid,
       mb.account AS mb_account,
       mb.name AS mb_name,
       rpm.mode AS mb_mode,
       ro.uuid AS ro_uuid,
       ro.name AS ro_name,
       ro.state AS ro_state,
       ro.description AS ro_description
  FROM po_role AS ro
       INNER JOIN
       po_role_member rm ON (rm.role = ro.uuid) 
       INNER JOIN
       rp_project_member rpm ON (rpm.member = rm.member AND 
                                 rpm.project = ro.project) 
       INNER JOIN
       rp_member mb ON (mb.uuid = rpm.member)]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
			<column name="mb_mode" type="varchar" />
			<column name="ro_uuid" type="char" />
			<column name="ro_name" type="varchar" />
			<column name="ro_state" type="varchar" />
			<column name="ro_description" type="text" />
		</view>
		<view name="mb_assigned_solutions" >
			<view_script><![CDATA[SELECT po.uuid AS po_uuid,
       po.name AS po_name,
       po.state AS po_state,
       po.properties AS po_properties,
       po.repository AS po_repository,
       so.uuid AS so_uuid,
       so.name AS so_name,
       so.description AS so_description,
       so.enabled AS so_enabled,
       so.readonly AS so_readonly,
       ap.mb_uuid,
       ap.mb_mode
  FROM mb_assigned_projects AS ap
       LEFT JOIN
       rp_solution_space AS so ON (so.project = ap.po_uuid) 
       INNER JOIN
       rp_project po ON (po.uuid = ap.po_uuid) 
 ORDER BY po_uuid]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="po_name" type="varchar" />
			<column name="po_state" type="varchar" />
			<column name="po_properties" type="text" />
			<column name="po_repository" type="char" />
			<column name="so_uuid" type="char" />
			<column name="so_name" type="varchar" />
			<column name="so_description" type="text" />
			<column name="so_enabled" type="boolean" />
			<column name="so_readonly" type="boolean" />
			<column name="mb_uuid" type="char" />
			<column name="mb_mode" type="varchar" />
		</view>
		<view name="mb_assigned_teams" >
			<view_script><![CDATA[SELECT rp.uuid AS po_uuid,
           pim.member AS mb_uuid,
           rpm.mode AS mb_mode,
           pi.uuid AS ip_uuid,           
           pi.name AS ip_name,
           pi.description AS ip_description,
           pi.type AS ip_type,
           pi.repository AS ip_repository
      FROM po_ipt_member pim
           INNER JOIN
           rp_project_member rpm ON (pim.member = rpm.member) 
           INNER JOIN
           po_ipt pi ON (pim.ipt = pi.uuid) 
           INNER JOIN
           rp_project rp ON (pi.project = rp.uuid)]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="mb_uuid" type="char" />
			<column name="mb_mode" type="varchar" />
			<column name="ip_uuid" type="char" />
			<column name="ip_name" type="varchar" />
			<column name="ip_description" type="text" />
			<column name="ip_type" type="varchar" />
			<column name="ip_repository" type="char" />
		</view>
		<view name="mb_assigned_transactions" >
			<view_script><![CDATA[SELECT po_role.project AS po_uuid,
       rp_transaction.uuid AS ta_uuid,
       rp_transaction.name AS ta_name,
       po_role.uuid AS ro_uuid,
       po_role.name AS ro_name,
       po_role.state AS ro_state,
       po_role.repository AS ro_repository,
       ro_assigned_teammembers.mb_uuid AS mb_uuid,
       ro_assigned_teammembers.mb_account AS mb_account,
       ro_assigned_teammembers.mb_mode AS mb_mode
  FROM po_role_transaction
       INNER JOIN
       po_role ON (po_role.uuid = po_role_transaction.role) 
       INNER JOIN
       rp_transaction ON (rp_transaction.uuid = po_role_transaction.transaction_uuid) 
       INNER JOIN
       ro_assigned_teammembers ON (ro_assigned_teammembers.ro_uuid = po_role.uuid)]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="ta_uuid" type="char" />
			<column name="ta_name" type="varchar" />
			<column name="ro_uuid" type="char" />
			<column name="ro_name" type="varchar" />
			<column name="ro_state" type="varchar" />
			<column name="ro_repository" type="char" />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_mode" type="varchar" />
		</view>
		<view name="mb_modifiedBy" >
			<comment><![CDATA[This is a utility listing all members with the column prefix 'mb_'. The view is used in combination with other tables or views to resolve the value stored in the column 'modifiedBy'.]]></comment>
			<view_script><![CDATA[SELECT uuid AS mb_uuid,
       account AS mb_account,
       name AS mb_name
  FROM rp_member]]></view_script>
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
		</view>
		<view name="mm_ddh" >
			<view_script><![CDATA[SELECT dh.project AS po_uuid,
       dh.uuid AS dh_uuid,
	   dh.id AS dh_id,
       dh.name AS dh_name,
       dh.up AS dl_up_uuid,
       dh.down AS dl_down_uuid,
       dh.repository AS rp_uuid
  FROM dd_def_hierarchy AS dh]]></view_script>
			<column name="po_uuid" type="char " />
			<column name="dh_uuid" type="char " />
			<column name="dh_id" type="char " />
			<column name="dh_name" type="varchar " />
			<column name="dl_up_uuid" type="char " />
			<column name="dl_down_uuid" type="char " />
			<column name="rp_uuid" type="char " />
		</view>
		<view name="mm_ddl" >
			<view_script><![CDATA[SELECT dl.project AS po_uuid,
           dl.[left] AS dl_left_uuid,
           dol.id AS dl_left_id,
           dl.id AS dl_id,
           dl.cardinality AS dl_cardinality,
           0 AS dl_hierarchy,
           dl.direction AS dl_direction,
           dl.reverse AS dl_reverse,
           dl.[right] AS dl_right_uuid,
           dor.id AS dl_right_id,
           dl.uuid AS dl_uuid,
           dl.repository AS dl_repository
      FROM dd_def_link dl
           LEFT JOIN
           dd_def_link_reverse dr ON (dr.foreward = dl.uuid) 
           INNER JOIN
           dd_def_object dol ON (dol.uuid = dl.[left]) 
           INNER JOIN
           dd_def_object dor ON (dor.uuid = dl.[right])]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="dl_left_uuid" type="char" />
			<column name="dl_left_id" type="char" />
			<column name="dl_name" type="varchar" />
			<column name="dl_cardinality" type="varchar" />
			<column name="dl_hierarchy" type="char(38)" />
			<column name="dl_direction" type="char" />
			<column name="dl_reverse" type="char" />
			<column name="dl_right_uuid" type="char" />
			<column name="dl_right_id" type="char" />
			<column name="dl_uuid" type="char" />
			<column name="dl_repository" type="char" />
		</view>
		<view name="mm_ddo" >
			<view_script><![CDATA[SELECT dd.project AS po_uuid,
       dd.id AS do_id,
       dd.shareable AS do_shareable,
       dd.uuid AS do_uuid,
       dd.icon AS do_icon,
       dd.properties AS do_properties,
       dd.rules AS do_rules,
       da.uuid AS da_uuid,
       da.id AS da_id,
       da.type AS da_type,
       da.properties AS da_properties,
       da.unit AS da_unit,
       da.precision AS da_precision,
       da.decimals AS da_decimals,
       da.enums AS da_enumeration,
       da.defaultValue AS da_defaultvalue,
       da.sortOrder AS da_sortOrder,
       da.repository AS da_repository
  FROM dd_def_object dd
       INNER JOIN
       dd_def_attribute da ON (da.ddo = dd.uuid) 
 ORDER BY po_uuid,
          do_uuid,
          da_sortOrder]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="do_id" type="char" />
			<column name="do_shareable" type="boolean" />
			<column name="do_uuid" type="char" />
			<column name="do_icon" type="blob" />
			<column name="do_properties" type="blob" />
			<column name="do_rules" type="blob" />
			<column name="da_uuid" type="char" />
			<column name="da_id" type="varchar" />
			<column name="da_type" type="varchar" />
			<column name="da_properties" type="text" />
			<column name="da_unit" type="varchar" />
			<column name="da_precision" type="integer" />
			<column name="da_decimals" type="integer" />
			<column name="da_enumeration" type="blob" />
			<column name="da_defaultvalue" type="blob" />
			<column name="da_sortOrder" type="integer" />
			<column name="da_repository" type="char" />
		</view>
		<view name="mm_enum" >
			<view_script><![CDATA[SELECT dde.dda AS da_uuid,
       tr.code AS tr_code,
       dde.uuid AS en_uuid,
       dde.ekey AS en_key,
       dde.properties AS en_properties,
       tr.translation AS en_value
  FROM dd_def_enum AS dde
       LEFT JOIN
       sp_translation tr ON (tr.uuid = dde.uuid)]]></view_script>
			<column name="da_uuid" type="char" />
			<column name="tr_code" type="char" />
			<column name="en_uuid" type="char" />
			<column name="en_key" type="varchar" />
			<column name="en_value" type="text" />
		</view>
		<view name="ow_ipt" >
			<comment><![CDATA[This is a utility listing all IPTs with the column prefix 'ow_'. The view is used in combination with other tables or views to resolve the value stored in the column 'owner'.]]></comment>
			<view_script><![CDATA[SELECT uuid AS ow_uuid,
       name AS ow_name,
       description AS ow_description,
       type AS ow_type,
       repository AS ow_repository
  FROM po_ipt]]></view_script>
			<column name="ow_uuid" type="char" />
			<column name="ow_name" type="varchar" />
			<column name="ow_description" type="text" />
			<column name="ow_type" type="varchar" />
			<column name="ow_repository" type="char" />
		</view>
		<view name="po_assigned_ddo" >
			<comment><![CDATA[Lists design data objects and the assigned solution spaces and projects]]></comment>
			<view_script><![CDATA[SELECT rps.project AS po_uuid,
       rps.uuid AS ds_uuid,
       ds.ddo AS do_uuid
  FROM dd_ddo_solution AS ds
       LEFT JOIN
       rp_solution_space rps ON (rps.uuid = ds.solution) 
       LEFT JOIN
       rp_project rpp ON (rpp.uuid = rps.project) 
 WHERE ds.revision_to == -1]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="ds_uuid" type="char" />
			<column name="do_uuid" type="char" />
		</view>
		<view name="po_ddo_templates" >
			<view_script><![CDATA[SELECT dd.project AS po_uuid,
       dd.uuid AS do_uuid,
       te.uuid AS te_uuid,
       te.id AS te_id,
       te.category AS te_category,
       te.template AS te_template,
       te.repository AS te_repository
  FROM dd_def_object AS dd
       INNER JOIN
       dd_template te ON (te.uuid = dd.uuid)]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="do_uuid" type="char" />
			<column name="te_uuid" type="char" />
			<column name="te_id" type="varchar" />
			<column name="te_category" type="varchar" />
			<column name="te_template" type="blob" />
			<column name="te_repository" type="char" />
		</view>
		<view name="po_ipts" >
			<view_script><![CDATA[SELECT ip.uuid AS ip_uuid,
           ip.name AS ip_name,
           ip.description AS ip_description,
           ip.type AS ip_type,
           ip.project AS po_uuid
      FROM po_ipt ip;]]></view_script>
			<column name="ip_uuid" type="char" />
			<column name="ip_name" type="varchar" />
			<column name="ip_description" type="text" />
			<column name="ip_type" type="varchar" />
			<column name="po_uuid" type="char" />
		</view>
		<view name="po_members" >
			<comment><![CDATA[This view lists all member and their project assignments.]]></comment>
			<view_script><![CDATA[SELECT po.uuid AS po_uuid,
       mb.account AS mb_account,
       mb.name AS mb_name,
       mb.email AS mb_email,
       mb.phone AS mb_phone,
       mb.locked AS mb_locked,
       rpm.mode = 'readonly' AS mb_readonly,
       rpm.mode AS mb_mode,
       mb.radmin AS mb_radmin,
       mb.uuid AS mb_uuid,
       mb.repository AS mb_repository
  FROM rp_project po
       INNER JOIN
       rp_project_member rpm ON (po.uuid = rpm.project) 
       INNER JOIN
       rp_member mb ON (rpm.member = mb.uuid)]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
			<column name="mb_email" type="char" />
			<column name="mb_phone" type="char" />
			<column name="mb_locked" type="boolean" />
			<column name="mb_readonly" type="char " />
			<column name="mb_mode" type="varchar" />
			<column name="mb_radmin" type="bit" />
			<column name="mb_uuid" type="char" />
			<column name="mb_repository" type="char" />
		</view>
		<view name="re_document_reportson" >
			<view_script><![CDATA[SELECT ro.document AS dt_uuid,
       ddo.*
  FROM re_reportson AS ro
       LEFT JOIN
       ds_ddo ddo ON (ro.object = ddo.do_uuid)]]></view_script>
			<column name="dt_uuid" type="char" />
			<column name="ds_uuid" type="char" />
			<column name="do_uuid" type="char" />
			<column name="do_definition" type="char" />
			<column name="do_local_id" type="integer" />
			<column name="do_cm_revision" type="integer" />
			<column name="do_cm_timestamp" type="datetime" />
			<column name="do_cm_modified_by" type="char" />
			<column name="do_repository" type="char" />
			<column name="do_mb_uuid" type="char" />
			<column name="do_mb_name" type="varchar" />
			<column name="do_mb_account" type="varchar" />
			<column name="do_ow_uuid" type="char" />
			<column name="do_ow_name" type="varchar" />
			<column name="do_rs_uuid" type="char" />
			<column name="do_rs_name" type="varchar" />
			<column name="da_id" type="varchar" />
			<column name="da_uuid" type="char" />
			<column name="da_value" type="blob" />
		</view>
		<view name="re_documents" >
			<view_script><![CDATA[SELECT dt.solution AS ds_uuid,
       dt.uuid AS dt_uuid,
       dt.category AS dt_category,
       dt.documentNumber AS dt_documentNumber,
       dt.title AS dt_title,
       dt.revisionNumber AS dt_revisionNumber,
       dt.publicationDate AS dt_publicationDate,
       dt.layout AS dt_layout,
       dt.dmsUrl AS dt_dmsUrl,
       dt.ismsClassification AS dt_ismsClassification,
       dt.govClassification AS dt_govClassification,
       dt.lang AS dt_lang,
       dt.template AS dt_template,
       dt.properties AS dt_properties,
       dt.cm_revision AS dt_cm_revision,
       mb.*,
       ow.*
  FROM re_document AS dt
       LEFT JOIN
       ow_ipt ow ON (ow.ow_uuid = dt.cm_owner) 
       LEFT JOIN
       mb_modifiedBy mb ON (mb.mb_uuid = dt.cm_modified_by) 
 WHERE dt.cm_deleted = 0;]]></view_script>
			<column name="ds_uuid" type="char " />
			<column name="dt_uuid" type="char " />
			<column name="dt_category" type="varchar " />
			<column name="dt_documentNumber" type="varchar " />
			<column name="dt_title" type="varchar " />
			<column name="dt_revisionNumber" type="varchar " />
			<column name="dt_publicationDate" type="date" />
			<column name="dt_layout" type="char " />
			<column name="dt_dmsUrl" type="text" />
			<column name="dt_ismsClassification" type="varchar " />
			<column name="dt_govClassification" type="varchar " />
			<column name="dt_lang" type="char" />
			<column name="dt_template" type="char " />
			<column name="dt_properties" type="text" />
			<column name="dt_cm_revision" type="integer" />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
			<column name="ow_uuid" type="char" />
			<column name="ow_name" type="varchar" />
			<column name="ow_description" type="text" />
			<column name="ow_type" type="varchar" />
			<column name="ow_repository" type="char" />
		</view>
		<view name="re_documents_history" >
			<view_script><![CDATA[SELECT dt.solution AS ds_uuid,
       dt.uuid AS dt_uuid,
       dt.category AS dt_category,
       dt.documentNumber AS dt_documentNumber,
       dt.title AS dt_title,
       dt.revisionNumber AS dt_revisionNumber,
       dt.publicationDate AS dt_publicationDate,
       dt.layout AS dt_layout,
       dt.dmsUrl AS dt_dmsUrl,
       dt.ismsClassification AS dt_ismsClassification,
       dt.govClassification AS dt_govClassification,
       dt.lang AS dt_lang,
       dt.template AS dt_template,
       dt.properties AS dt_properties,
       dt.cm_revision AS dt_cm_revision,
       mb.*,
       ow.*
  FROM re_document_history AS dt
      LEFT JOIN
      ow_ipt ow ON (ow.ow_uuid = dt.cm_owner)
      LEFT JOIN
      mb_modifiedBy mb ON (mb.mb_uuid = dt.cm_modifiedBy)]]></view_script>
			<column name="ds_uuid" type="char" />
			<column name="dt_uuid" type="char" />
			<column name="dt_category" type="varchar" />
			<column name="dt_documentNumber" type="varchar" />
			<column name="dt_title" type="varchar" />
			<column name="dt_revisionNumber" type="varchar" />
			<column name="dt_publicationDate" type="date" />
			<column name="dt_layout" type="char" />
			<column name="dt_dmsUrl" type="text" />
			<column name="dt_ismsClassification" type="varchar" />
			<column name="dt_govClassification" type="varchar" />
			<column name="dt_lang" type="char" />
			<column name="dt_template" type="char" />
			<column name="dt_properties" type="text" />
			<column name="dt_cm_revision" type="integer" />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
			<column name="ow_uuid" type="char" />
			<column name="ow_name" type="varchar" />
			<column name="ow_description" type="text" />
			<column name="ow_type" type="varchar" />
			<column name="ow_repository" type="char" />
		</view>
		<view name="re_layouts" >
			<view_script><![CDATA[SELECT *
  FROM (
           SELECT lt.solution AS ds_uuid,
                  lt.uuid AS lt_uuid,
                  lt.name AS lt_name,
                  lt.description AS lt_description,
                  lt.timestamp AS lt_timestamp,
                  GROUP_CONCAT(st.format) AS lt_stylesheets,
                  lt.repository AS lt_repository
             FROM re_layout AS lt 
                  INNER JOIN
                  re_stylesheet st ON (st.layout = lt.uuid) 
       )
 WHERE ds_uuid IS NOT NULL]]></view_script>
			<column name="ds_uuid" type="char" />
			<column name="lt_uuid" type="char" />
			<column name="lt_name" type="varchar" />
			<column name="lt_description" type="text" />
			<column name="lt_timestamp" type="datetime" />
			<column name="lt_stylesheets" type="char " />
			<column name="lt_repository" type="char" />
		</view>
		<view name="re_sections" >
			<view_script><![CDATA[SELECT sn.document AS dt_uuid,
       sn.uuid AS sn_uuid,
       sn.number AS sn_number,
       sn.caption AS sn_caption,
       sn.description AS sn_description,
       st.uuid AS st_uuid,
       st.name AS st_name,
       sn.options AS st_options,
       sn.cm_timestamp AS cm_timestamp,
       sn.cm_revision AS cm_revision,
       mb.*,
       ow.*
  FROM re_section AS sn
       LEFT JOIN
       ow_ipt ow ON (ow.ow_uuid = sn.cm_owner) 
       LEFT JOIN
       mb_modifiedBy mb ON (mb.mb_uuid = sn.cm_modified_by) 
       LEFT JOIN
       sp_script st ON (st.uuid = sn.script) 
 WHERE sn.cm_deleted = 0]]></view_script>
			<column name="dt_uuid" type="char" />
			<column name="sn_uuid" type="char" />
			<column name="sn_number" type="varchar" />
			<column name="sn_caption" type="varchar" />
			<column name="sn_description" type="text" />
			<column name="st_uuid" type="char " />
			<column name="st_name" type="varchar " />
			<column name="st_options" type="blob" />
			<column name="cm_timestamp" type="datetime" />
			<column name="cm_revision" type="integer" />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
			<column name="ow_uuid" type="char" />
			<column name="ow_name" type="varchar" />
			<column name="ow_description" type="text" />
			<column name="ow_type" type="varchar" />
			<column name="ow_repository" type="char" />
		</view>
		<view name="re_sections_history" >
			<view_script><![CDATA[SELECT sn.document AS dt_uuid,
       sn.uuid AS sn_uuid,
       sn.number AS sn_number,
       sn.caption AS sn_caption,
       sn.description AS sn_description,
       st.uuid AS st_uuid,
       st.name AS st_name,
       sn.options AS st_options,
       sn.cm_timestamp AS cm_timestamp,
       sn.cm_revision AS cm_revision,
       mb.*,
       ow.*
  FROM re_section_history AS sn
       LEFT JOIN
       ow_ipt ow ON (ow.ow_uuid = sn.cm_owner) 
       LEFT JOIN
       mb_modifiedBy mb ON (mb.mb_uuid = sn.cm_modified_by) 
       LEFT JOIN
       sp_script st ON (st.uuid = sn.script) 
 WHERE sn.cm_deleted = 0]]></view_script>
			<column name="dt_uuid" type="char" />
			<column name="sn_uuid" type="char" />
			<column name="sn_number" type="varchar" />
			<column name="sn_caption" type="varchar" />
			<column name="sn_description" type="text" />
			<column name="st_uuid" type="char" />
			<column name="st_name" type="varchar" />
			<column name="st_options" type="blob" />
			<column name="cm_timestamp" type="datetime" />
			<column name="cm_revision" type="integer" />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
			<column name="ow_uuid" type="char" />
			<column name="ow_name" type="varchar" />
			<column name="ow_description" type="text" />
			<column name="ow_type" type="varchar" />
			<column name="ow_repository" type="char" />
		</view>
		<view name="re_templates" >
			<view_script><![CDATA[SELECT tes.solution AS ds_uuid,
       te.uuid AS te_uuid,
       te.id AS te_id,
       te.definition AS te_definition,
       te.timestamp AS te_timestamp,
       te.repository AS te_repository
  FROM re_template_solution AS tes
       LEFT JOIN
       re_template te ON (te.uuid = tes.template)]]></view_script>
			<column name="ds_uuid" type="char" />
			<column name="te_uuid" type="char" />
			<column name="te_id" type="varchar" />
			<column name="te_definition" type="blob" />
			<column name="te_timestamp" type="datetime" />
			<column name="te_repository" type="char" />
		</view>
		<view name="ro_assigned_teammembers" >
			<view_script><![CDATA[SELECT rp_project_member.project AS po_uuid, po_role.uuid AS ro_uuid, po_role.name AS ro_name, po_role.description AS ro_description, po_role.state AS ro_state, po_role.repository AS ro_repository, rp_member.uuid AS mb_uuid, rp_member.account AS mb_account, rp_member.name AS mb_name, rp_project_member.mode AS mb_mode, rp_member.repository AS mb_repository FROM po_role_member INNER JOIN po_role ON (po_role.uuid = po_role_member.role) INNER JOIN rp_project_member ON (rp_project_member.member = po_role_member.member) INNER JOIN rp_member ON (rp_member.uuid = rp_project_member.member)]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="ro_uuid" type="char" />
			<column name="ro_name" type="varchar" />
			<column name="ro_description" type="text" />
			<column name="ro_state" type="varchar" />
			<column name="ro_repository" type="char" />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
			<column name="mb_mode" type="varchar" />
			<column name="mb_repository" type="char" />
		</view>
		<view name="rp_members" >
			<view_script><![CDATA[SELECT mb.account AS mb_account,
       mb.name AS mb_name,
       mb.radmin AS mb_radmin,
       mb.uuid AS mb_uuid,
	   mb.password AS mb_passwd,
       mb.repository AS mb_repository
  FROM rp_member mb]]></view_script>
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
			<column name="mb_radmin" type="bit" />
			<column name="mb_uuid" type="char" />
			<column name="mb_repository" type="char" />
		</view>
		<view name="rp_projects" >
			<view_script><![CDATA[SELECT uuid AS po_uuid,
       name AS po_name,
       state AS po_state,
       description AS po_description,
       properties AS po_properties,
       repository AS rp_uuid
  FROM rp_project;]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="po_name" type="varchar" />
			<column name="po_state" type="varchar" />
			<column name="po_description" type="text" />
			<column name="po_properties" type="text" />
			<column name="rp_uuid" type="char" />
		</view>
		<view name="rp_solutions" >
			<view_script><![CDATA[SELECT project AS po_uuid,
       uuid AS ds_uuid,
       name AS ds_name,
       description AS ds_description,
       enabled AS ds_enabled,
       readonly AS ds_readoly,
       repository AS rp_uuid
  FROM rp_solution_space;
]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="ds_uuid" type="char" />
			<column name="ds_name" type="varchar" />
			<column name="ds_description" type="text" />
			<column name="ds_enabled" type="boolean" />
			<column name="ds_readoly" type="boolean" />
			<column name="rp_uuid" type="char" />
		</view>
		<view name="sn_ddl" >
			<view_script><![CDATA[SELECT dds.solution AS ds_uuid,
       dds.ddl AS dl_uuid,
       ddl.definition AS dl_definition,
       do_left AS dl_left,
       ddo_l.cm_revision AS dl_left_cm_revision,
       dds.left_from AS dl_left_from,
       dds.left_to AS dl_left_to,
       do_right AS dl_right,
       ddo_r.cm_revision AS dl_right_crm_evision,
       dds.right_from AS dl_right_from,
       dds.right_to AS dl_right_to,
       dds.cm_modified_by AS dl_cm_modified_by,
       dds.cm_revision AS dl_cm_revision,
       dds.accepted_by AS dl_accepted_by,
       dds.accepted_revision_left AS dl_accepted_revision_left,
       dds.accepted_revision_right AS dl_accepted_revision_right,
       dds.accepted_state AS dl_accepted_state,
       dds.cm_timestamp AS dl_cm_timestamp,
       ddl.repository AS dl_repository
  FROM dd_link ddl
       INNER JOIN
       dd_ddl_solution dds ON (dds.ddl = ddl.uuid) 
       INNER JOIN
       dd_object ddo_l ON (ddo_l.uuid = ddl.do_left) 
       INNER JOIN
       dd_object ddo_r ON (ddo_r.uuid = ddl.do_right)]]></view_script>
			<column name="ds_uuid" type="char " />
			<column name="dl_uuid" type="char " />
			<column name="dl_definition" type="char" />
			<column name="dl_left" type="char" />
			<column name="dl_left_cm_revision" type="integer" />
			<column name="dl_left_from" type="integer" />
			<column name="dl_left_to" type="integer" />
			<column name="dl_right" type="char" />
			<column name="dl_right_crm_evision" type="integer" />
			<column name="dl_right_from" type="integer" />
			<column name="dl_right_to" type="integer" />
			<column name="dl_cm_modified_by" type="char " />
			<column name="dl_cm_revision" type="integer" />
			<column name="dl_accepted_by" type="char " />
			<column name="dl_accepted_revision_left" type="integer" />
			<column name="dl_accepted_revision_right" type="integer" />
			<column name="dl_accepted_state" type="varchar " />
			<column name="dl_cm_timestamp" type="datetime" />
			<column name="dl_repository" type="char" />
		</view>
		<view name="sp_issues" >
			<view_script><![CDATA[SELECT ie.solution AS ds_uuid,
       ie.uuid AS ie_uuid,
       ie.title AS ie_title,
       ie.description AS ie_description,
       ie.degree_of_completion AS ie_degree_of_completion,
       ie.start_date AS ie_start_date,
       ie.due_date AS ie_due_date,
       ie.date_of_completion AS ie_date_of_completion,
       ie.state AS ie_state,
       ie.priority AS ie_priority,
       ie.responsible AS ie_responsible,
       ie.tracker AS ie_tracker,
       ie.workflow AS ie_workflow,
       ie.dd_type AS ie_dd_type,
       ie.dd_uuid AS ie_dd_uuid,
       ddo.do_uuid AS do_uuid,
       ddo.do_puid AS do_puid,
       ow.uuid AS ie_ow_uuid,
       ow.account AS ie_ow_account,
       ow.name AS ie_ow_name,
       rs.uuid AS ie_rs_uuid, 
       rs.account AS ie_rs_account,
       rs.name AS ie_rs_name,
       ie.cm_revision AS ie_cm_revision,
       ie.cm_timestamp AS ie_cm_timestamp,
       ie.cm_modified_by AS ie_cm_modified_by
  FROM sp_issue AS ie
       LEFT JOIN
       rp_member ow ON (ow.uuid=ie.cm_owner) 
       LEFT JOIN
       rp_member rs ON (rs.uuid = ie.responsible) 
       LEFT JOIN
       ds_ddo_na ddo ON (ie.dd_type = 'ddo' AND 
                      ie.dd_uuid = ddo.do_uuid)
WHERE ie.cm_deleted=0]]></view_script>
			<column name="ds_uuid" type="char " />
			<column name="ie_uuid" type="char " />
			<column name="ie_title" type="varchar " />
			<column name="ie_description" type="text" />
			<column name="ie_degree_of_completion" type="integer" />
			<column name="ie_start_date" type="date" />
			<column name="ie_due_date" type="date" />
			<column name="ie_date_of_completion" type="date" />
			<column name="ie_state" type="varchar " />
			<column name="ie_priority" type="varchar " />
			<column name="ie_responsible" type="char " />
			<column name="ie_tracker" type="varchar " />
			<column name="ie_workflow" type="varchar " />
			<column name="ie_dd_type" type="varchar " />
			<column name="ie_dd_uuid" type="char " />
			<column name="do_uuid" type="char" />
			<column name="do_puid" type="char " />
			<column name="ie_ow_uuid" type="char" />
			<column name="ie_ow_account" type="varchar" />
			<column name="ie_ow_name" type="varchar" />
			<column name="ie_rs_uuid" type="char" />
			<column name="ie_rs_account" type="varchar" />
			<column name="ie_rs_name" type="varchar" />
			<column name="ie_cm_revision" type="bigint" />
			<column name="ie_cm_timestamp" type="datetime" />
			<column name="ie_cm_modified_by" type="char " />
		</view>
		<view name="sp_scripts" >
			<view_script><![CDATA[SELECT sp.project AS po_uuid,
       st.uuid AS st_uuid,
       st.type AS st_type,
       st.name AS st_name,
       st.code AS st_code,
       st.cm_revision AS st_cm_revision,
       st.cm_timestamp AS st_cm_timestamp,
       mb.*
  FROM sp_script AS st
       INNER JOIN
       sp_script_project sp ON (sp.script = st.uuid) 
       LEFT JOIN
       mb_modifiedBy mb ON (mb.mb_uuid = st.cm_modified_by) 
 WHERE st.cm_deleted = 0]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="st_uuid" type="char " />
			<column name="st_type" type="varchar " />
			<column name="st_name" type="varchar " />
			<column name="st_code" type="blob" />
			<column name="st_cm_revision" type="integer" />
			<column name="st_cm_timestamp" type="datetime" />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
		</view>
		<view name="ta_assignments" >
			<view_script><![CDATA[SELECT po_role.project AS po_uuid,
       rp_transaction.uuid AS ta_uuid,
       rp_transaction.name AS ta_name,
       po_role.uuid AS ro_uuid,
       po_role.name AS ro_name,
       po_role.state AS ro_state,
       po_role.repository AS ro_repository,
       ro_assigned_teammembers.mb_uuid AS mb_uuid,
       ro_assigned_teammembers.mb_account AS mb_account,
       ro_assigned_teammembers.mb_mode AS mb_mode
  FROM po_role_transaction
       INNER JOIN
       po_role ON (po_role.uuid = po_role_transaction.role) 
       INNER JOIN
       rp_transaction ON (rp_transaction.uuid = po_role_transaction.transaction_uuid) 
       INNER JOIN
       ro_assigned_teammembers ON (ro_assigned_teammembers.ro_uuid = po_role.uuid)]]></view_script>
			<column name="po_uuid" type="char" />
			<column name="ta_uuid" type="char" />
			<column name="ta_name" type="varchar" />
			<column name="ro_uuid" type="char" />
			<column name="ro_name" type="varchar" />
			<column name="ro_state" type="varchar" />
			<column name="ro_repository" type="char" />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_mode" type="varchar" />
		</view>
		<view name="tl_ddo" >
			<view_script><![CDATA[SELECT IFNULL(ddo.da_value != (
                                  SELECT da_value
                                    FROM ds_ddo_history AS ddh
                                   WHERE ddh.do_uuid = ddo.do_uuid AND 
                                         ddh.da_uuid = ddo.da_uuid AND 
                                         ddh.do_cm_revision = (ddo.do_cm_revision - 1) 
                              ), 0) AS da_modified,
       *
  FROM ds_ddo AS ddo
UNION ALL
SELECT IFNULL(ddo.da_value != (
                                  SELECT da_value
                                    FROM ds_ddo_history AS ddh
                                   WHERE ddh.do_uuid = ddo.do_uuid AND 
                                         ddh.da_uuid = ddo.da_uuid AND 
                                         ddh.do_cm_revision = (ddo.do_cm_revision - 1) 
                              ), 0) AS da_modified,
       *
  FROM ds_ddo_history AS ddo
 ORDER BY do_cm_revision DESC]]></view_script>
			<column name="da_modified" type="char " />
			<column name="ds_uuid" type="char" />
			<column name="do_uuid" type="char" />
			<column name="do_definition" type="char" />
			<column name="do_local_id" type="integer" />
			<column name="do_cm_revision" type="integer" />
			<column name="do_cm_timestamp" type="datetime" />
			<column name="do_repository" type="char" />
			<column name="do_mb_uuid" type="char" />
			<column name="do_mb_name" type="varchar" />
			<column name="do_mb_account" type="varchar" />
			<column name="do_ow_uuid" type="char" />
			<column name="do_ow_name" type="varchar" />
			<column name="do_rs_uuid" type="char" />
			<column name="do_rs_name" type="varchar" />
			<column name="da_id" type="varchar" />
			<column name="da_uuid" type="char" />
			<column name="da_value" type="blob" />
		</view>
		<view name="tl_ddo_na" >
			<view_script><![CDATA[SELECT *
  FROM ds_ddo_na_history
UNION
SELECT *
  FROM ds_ddo_na]]></view_script>
			<column name="ds_uuid" type="char " />
			<column name="do_uuid" type="char " />
			<column name="do_definition" type="char " />
			<column name="do_local_id" type="integer" />
			<column name="do_revision" type="integer" />
			<column name="do_timestamp" type="datetime" />
			<column name="do_repository" type="char " />
			<column name="ow_uuid" type="char" />
			<column name="ow_name" type="varchar" />
			<column name="rs_uuid" type="char" />
			<column name="rs_name" type="varchar" />
		</view>
		<view name="tl_documents" >
			<view_script><![CDATA[SELECT *
  FROM re_documents_history
UNION ALL
SELECT *
  FROM re_documents
ORDER BY dt_uuid, dt_cm_revision]]></view_script>
			<column name="ds_uuid" type="char" />
			<column name="dt_uuid" type="char" />
			<column name="dt_category" type="varchar" />
			<column name="dt_documentNumber" type="varchar" />
			<column name="dt_title" type="varchar" />
			<column name="dt_revisionNumber" type="varchar" />
			<column name="dt_publicationDate" type="date" />
			<column name="dt_layout" type="char" />
			<column name="dt_dmsUrl" type="text" />
			<column name="dt_ismsClassification" type="varchar" />
			<column name="dt_govClassification" type="varchar" />
			<column name="dt_template" type="char" />
			<column name="dt_cm_revision" type="integer" />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
			<column name="ow_uuid" type="char" />
			<column name="ow_name" type="varchar" />
			<column name="ow_description" type="text" />
			<column name="ow_type" type="varchar" />
			<column name="ow_repository" type="char" />
		</view>
		<view name="tl_section" >
			<view_script><![CDATA[SELECT *
  FROM re_sections_history
UNION ALL
SELECT *
  FROM re_sections
 ORDER BY sn_uuid,
          cm_revision]]></view_script>
			<column name="dt_uuid" type="char " />
			<column name="sn_uuid" type="char " />
			<column name="sn_number" type="char " />
			<column name="sn_caption" type="char " />
			<column name="sn_description" type="text" />
			<column name="sn_script" type="char " />
			<column name="sn_options" type="blob" />
			<column name="cm_timestamp" type="datetime" />
			<column name="cm_revision" type="integer" />
			<column name="mb_uuid" type="char" />
			<column name="mb_account" type="varchar" />
			<column name="mb_name" type="varchar" />
			<column name="ow_uuid" type="char" />
			<column name="ow_name" type="varchar" />
			<column name="ow_description" type="text" />
			<column name="ow_type" type="varchar" />
			<column name="ow_repository" type="char" />
		</view>
		<view name="tr_da_title" >
			<view_script><![CDATA[SELECT group_concat(key || ':' || translation,',') AS translation FROM sp_translation 
WHERE
code = 'de-DE'
AND uuid='{5f5bd949-c8c8-4e74-960b-e30bd7ff4d18}']]></view_script>
			<column name="translation" type="set" />
		</view>
		<trigger name="tg_dd_object_ai" table="dd_object" id="Trigger_ca63ef" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_dd_object_ai AFTER INSERT ON dd_object FOR EACH ROW BEGIN UPDATE dd_objectid SET nextId=nextId+1 WHERE ddo=NEW.definition; END]]></string>
		</trigger>
		<trigger name="tg_dd_object_bu" table="dd_object" id="Trigger_fc5c98" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_dd_object_bu BEFORE UPDATE ON dd_object FOR EACH ROW BEGIN INSERT OR REPLACE INTO dd_object_history SELECT * FROM dd_object WHERE uuid=OLD.uuid; END]]></string>
		</trigger>
		<trigger name="tg_re_document_au" id="Trigger_2043309" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_re_document_au
         AFTER UPDATE OF documentNumber,
                         title,
                         revisionNumber,
                         publicationDate,
                         category,
                         dmsUrl,
                         ismsClassification,
                         govClassification,
                         lang,
                         layout,
                         template,
                         properties,
                         cm_owner,
                         cm_deleted
            ON re_document
      FOR EACH ROW
BEGIN
    UPDATE re_document
       SET cm_revision = cm_revision + 1,
           cm_timestamp = CURRENT_TIMESTAMP
     WHERE uuid = OLD.uuid;
END;]]></string>
		</trigger>
		<trigger name="tg_re_document_bu" id="Trigger_42a8efa" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_re_document_bu
        BEFORE UPDATE OF documentNumber,
                         title,
                         revisionNumber,
                         publicationDate,
                         category,
                         dmsUrl,
                         ismsClassification,
                         govClassification,
                         lang,
                         layout,
                         template,
                         properties,
                         cm_deleted
            ON re_document
BEGIN
    INSERT OR REPLACE INTO re_document_history SELECT *
                                                 FROM re_document
                                                WHERE uuid = OLD.uuid;
END;]]></string>
		</trigger>
		<trigger name="tg_re_section_au" table="re_section" id="Trigger_4916539" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_re_section_au
         AFTER UPDATE OF number,
                         caption,
                         description,
                         script,
                         options,
                         cm_owner,
                         cm_deleted
            ON re_section
      FOR EACH ROW
BEGIN
    UPDATE re_section
       SET cm_revision = cm_revision + 1,
           cm_timestamp = CURRENT_TIMESTAMP
     WHERE uuid = OLD.uuid;
END;]]></string>
		</trigger>
		<trigger name="tg_re_section_bu" id="Trigger_119dfe" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_re_section_bu
        BEFORE UPDATE OF number,
                         caption,
                         description,
                         script,
                         options,
                         cm_owner,
                         cm_deleted
            ON re_section
BEGIN
    INSERT OR REPLACE INTO re_section_history SELECT *
                                                FROM re_section
                                               WHERE uuid = OLD.uuid;
END;]]></string>
		</trigger>
		<trigger name="tg_sp_issue_au" id="Trigger_22b0711" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_sp_issue_au
        BEFORE UPDATE OF title,
                         description,
                         degree_of_completion,
                         start_date,
                         due_date,
                         date_of_completion,
                         state,
                         priority,
                         responsible,
                         cm_owner,
                         cm_modified_by
            ON sp_issue
BEGIN
    INSERT OR REPLACE INTO sp_issue_history SELECT *
                                              FROM sp_issue
                                             WHERE uuid = OLD.uuid;
END;]]></string>
		</trigger>
		<trigger name="tg_sp_issue_bu" id="Trigger_bb5da" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_sp_issue_bu
        BEFORE UPDATE OF title,
                         description,
                         degree_of_completion,
                         start_date,
                         due_date,
                         date_of_completion,
                         state,
                         priority,
                         responsible,
                         cm_owner,
                         cm_modified_by,
                         cm_deleted
            ON sp_issue
BEGIN
    INSERT OR REPLACE INTO sp_issue_history SELECT *
                                              FROM sp_issue
                                             WHERE uuid = OLD.uuid;
END;
]]></string>
		</trigger>
		<trigger name="tg_sp_script_au" id="Trigger_1daf22f" isSystem="false" >
			<string><![CDATA[CREATE TRIGGER tg_sp_script_au
         AFTER UPDATE OF name,
                         code
            ON sp_script
BEGIN
    UPDATE sp_script
       SET cm_revision = cm_revision + 1,
           cm_timestamp = CURRENT_TIMESTAMP
     WHERE uuid = OLD.uuid;
END;
]]></string>
		</trigger>
	</schema>
	<connector name="reposyd" database="Sqlite" driver_class="org.sqlite.JDBC" driver_jar="sqlite-jdbc-3.27.2.1.jar" driver_desc="Standard" host="localhost" port="7210" instance="D:/Entwicklung/reposyd/server/database/reposyd.sqlite" />
	<connector name="reposyd (cli)" database="Sqlite" driver_class="org.sqlite.JDBC" driver_jar="sqlite-jdbc-3.27.2.1.jar" driver_desc="Standard" host="localhost" port="7210" instance="c:/reposyd/database/reposyd.sqlite" />
	<layout name="Default Layout" id="Layout_2425b73" confirmed="y" joined_routing="y" show_column_type="y" show_relation="columns" >
		<comment><![CDATA[Default Layout]]></comment>
		<entity schema="Default" name="po_role_ddl_transaction" color="EEF7EC" x="48" y="816" />
		<entity schema="Default" name="po_role_ddo_transaction" color="EEF7EC" x="48" y="960" />
		<entity schema="Default" name="po_ipt_member" color="EEF7EC" x="464" y="960" />
		<entity schema="Default" name="po_role_transaction" color="EEF7EC" x="48" y="1152" />
		<entity schema="Default" name="rp_transaction" color="F0ECF7" x="1088" y="608" />
		<entity schema="Default" name="po_role_member" color="EEF7EC" x="272" y="1152" />
		<entity schema="Default" name="cm_baseline" color="F7F3EC" x="288" y="448" />
		<entity schema="Default" name="po_ipt" color="EEF7EC" x="272" y="960" />
		<entity schema="Default" name="dd_objectid" color="C4E0F9" x="1312" y="704" />
		<entity schema="Default" name="cm_ddo" color="F7F3EC" x="480" y="448" />
		<entity schema="Default" name="rp_member" color="F0ECF7" x="1088" y="448" />
		<entity schema="Default" name="rp_project_member" color="F0ECF7" x="880" y="608" />
		<entity schema="Default" name="dd_def_link" color="ECECF7" x="688" y="816" />
		<entity schema="Default" name="cm_ddl" color="F7F3EC" x="480" y="624" />
		<entity schema="Default" name="dd_object_history" color="FFFFCC" x="2096" y="448" />
		<entity schema="Default" name="dm_item" color="CCCCFF" x="464" y="80" />
		<entity schema="Default" name="dm_diagram" color="CCCCFF" x="272" y="80" />
		<entity schema="Default" name="dm_item_property" color="CCCCFF" x="464" y="256" />
		<entity schema="Default" name="dm_diagram_property" color="CCCCFF" x="272" y="256" />
		<entity schema="Default" name="dd_object" color="C4E0F9" x="1680" y="448" />
		<entity schema="Default" name="dd_link_history" color="FFFFCC" x="1904" y="624" />
		<entity schema="Default" name="dd_attribute_history" color="FFFFCC" x="1904" y="448" />
		<entity schema="Default" name="dd_def_attribute" color="ECECF7" x="1088" y="1024" />
		<entity schema="Default" name="dd_def_link_reverse" color="ECECF7" x="704" y="1216" />
		<entity schema="Default" name="po_role" color="EEF7EC" x="464" y="1152" />
		<entity schema="Default" name="rp_project" color="F0ECF7" x="880" y="448" />
		<entity schema="Default" name="sp_script" color="BCD5F1" x="224" y="1360" />
		<entity schema="Default" name="dd_def_hierarchy" color="ECECF7" x="880" y="1216" />
		<entity schema="Default" name="re_stylesheet" color="FFEBEB" x="1088" y="1440" />
		<entity schema="Default" name="re_section" color="FFEBEB" x="864" y="1568" />
		<entity schema="Default" name="re_layout" color="FFEBEB" x="864" y="1440" />
		<entity schema="Default" name="dd_def_object" color="ECECF7" x="880" y="1024" />
		<entity schema="Default" name="re_document" color="FFEBEB" x="608" y="1488" />
		<entity schema="Default" name="dd_attribute_value" color="C4E0F9" x="1488" y="704" />
		<entity schema="Default" name="dd_link" color="C4E0F9" x="1488" y="448" />
		<group name="repository" color="F0ECF7" >
			<entity schema="Default" name="rp_project" />
			<entity schema="Default" name="rp_member" />
			<entity schema="Default" name="rp_transaction" />
			<entity schema="Default" name="rp_project_member" />
		</group>
		<group name="design data" color="C4E0F9" >
			<entity schema="Default" name="dd_link" />
			<entity schema="Default" name="dd_object" />
			<entity schema="Default" name="dd_attribute_value" />
			<entity schema="Default" name="dd_objectid" />
		</group>
		<group name="design data definition" color="ECECF7" >
			<entity schema="Default" name="dd_def_object" />
			<entity schema="Default" name="dd_def_attribute" />
			<entity schema="Default" name="dd_def_hierarchy" />
			<entity schema="Default" name="dd_def_link_reverse" />
			<entity schema="Default" name="dd_def_link" />
		</group>
		<group name="project organization" color="EEF7EC" >
			<entity schema="Default" name="po_ipt" />
			<entity schema="Default" name="po_ipt_member" />
			<entity schema="Default" name="po_role" />
			<entity schema="Default" name="po_role_member" />
			<entity schema="Default" name="po_role_transaction" />
			<entity schema="Default" name="po_role_ddo_transaction" />
			<entity schema="Default" name="po_role_ddl_transaction" />
		</group>
		<group name="configuration management" color="F7F3EC" >
			<entity schema="Default" name="cm_baseline" />
			<entity schema="Default" name="cm_ddo" />
			<entity schema="Default" name="cm_ddl" />
		</group>
		<group name="diagram" color="CCCCFF" >
			<entity schema="Default" name="dm_diagram" />
			<entity schema="Default" name="dm_item" />
			<entity schema="Default" name="dm_item_property" />
			<entity schema="Default" name="dm_diagram_property" />
		</group>
		<group name="design data history" color="FFFFCC" >
			<comment><![CDATA[Views related to the history of design data objects and links.]]></comment>
			<entity schema="Default" name="dd_attribute_history" />
			<entity schema="Default" name="dd_object_history" />
			<entity schema="Default" name="dd_link_history" />
		</group>
		<group name="report engine" color="FFEBEB" >
			<entity schema="Default" name="re_document" />
			<entity schema="Default" name="re_layout" />
			<entity schema="Default" name="re_stylesheet" />
			<entity schema="Default" name="re_section" />
		</group>
		<script name="Sql" id="Query_90b9b45" language="SQL" >
			<string><![CDATA[CREATE TABLE ddo ( 
	id                   integer NOT NULL  ,
	CONSTRAINT pk_ddo PRIMARY KEY ( id )
 );

CREATE TABLE po_ipt_member ( 
	id                   integer NOT NULL  ,
	member               integer   ,
	ipt                  integer   ,
	CONSTRAINT Pk_po_ipt_member PRIMARY KEY ( id )
 );

CREATE INDEX idx_po_ipt_member ON po_ipt_member ( member );

CREATE INDEX idx_po_ipt_member_0 ON po_ipt_member ( ipt );

CREATE TABLE po_project_member ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	member               integer   ,
	CONSTRAINT Pk_pro_project_member PRIMARY KEY ( id )
 );

CREATE INDEX idx_pro_project_member ON po_project_member ( project );

CREATE INDEX idx_pro_project_member_0 ON po_project_member ( member );

CREATE TABLE po_role ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	name                 varchar(100) NOT NULL  ,
	description          text   ,
	state                varchar(100)  DEFAULT 'enabled' ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_po_role PRIMARY KEY ( id )
 );

CREATE INDEX idx_po_role ON po_role ( project );

CREATE TABLE rp_member ( 
	id                   integer NOT NULL  ,
	account              varchar(100) NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_po_member PRIMARY KEY ( id )
 );

CREATE TABLE rp_project ( 
	id                   integer NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	state                varchar(100)  DEFAULT 'locked' ,
	uuid                 char(38) NOT NULL  ,
	master_uud           char(38)   ,
	CONSTRAINT Pk_po_project PRIMARY KEY ( id )
 );

CREATE TABLE dda_value ( 
	id                   integer NOT NULL  ,
	ddo                  integer   ,
	dda                  integer   ,
	value                blob   ,
	ddo_id               integer   ,
	revision             blob   ,
	CONSTRAINT pk_dda_value PRIMARY KEY ( id ),
	FOREIGN KEY ( ddo_id ) REFERENCES ddo( id ) ON DELETE CASCADE 
 );

CREATE TABLE ddo_definition ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	name                 varchar(100)   ,
	shortName            varchar(100)   ,
	description          text   ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_ddo_definition PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_ddo_definition ON ddo_definition ( project );

CREATE TABLE ddo_object ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	definition           integer   ,
	localId              integer NOT NULL  ,
	masterId             integer   ,
	deleted              boolean NOT NULL DEFAULT false ,
	revision             integer  DEFAULT 1 ,
	owner                integer NOT NULL  ,
	uuid                 char  NOT NULL  ,
	master_uuid          char  NOT NULL  ,
	CONSTRAINT Pk_dd PRIMARY KEY ( id ),
	FOREIGN KEY ( definition ) REFERENCES ddo_definition( id )  
 );

CREATE INDEX idx_dd ON ddo_object ( definition );

CREATE INDEX idx_ddo_object ON ddo_object ( project );

CREATE TABLE po_ipt ( 
	id                   integer NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	project              integer NOT NULL  ,
	description          text   ,
	"type"               varchar(100)   ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_po_ipt PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id )  
 );

CREATE INDEX idx_po_ipt ON po_ipt ( project );

CREATE TABLE dda_definition ( 
	id                   integer NOT NULL  ,
	ddo                  integer   ,
	"type"               varchar(100)   ,
	defaultValue         blob   ,
	sortOrder            integer  DEFAULT 100 ,
	CONSTRAINT Pk_dda_definition PRIMARY KEY ( id ),
	FOREIGN KEY ( ddo ) REFERENCES ddo_definition( id )  
 );

CREATE INDEX idx_dda_definition ON dda_definition ( ddo );

CREATE VIEW project_member AS CREATE VIEW project_member AS SELECT
po_project_member.id AS po_member_id
,rp_project.id AS po_id
,rp_project.name AS po_name
,rp_project.state AS po_state
,rp_project.uuid AS po_uuid
,rp_member.id AS mb_id
,rp_member.account as mb_account
,rp_member.name as mb_name
,rp_member.uuid as mb_uuid
,rp_member.master_uuid as mb_master
FROM
po_project_member
INNER JOIN rp_member ON rp_member.id=po_project_member.id
INNER JOIN rp_project ON rp_project.id=po_project_member.project;]]></string>
		</script>
		<script name="Sql_001" id="Query_dc2a81f" language="SQL" >
			<string><![CDATA[CREATE TABLE ddo ( 
	id                   integer NOT NULL  ,
	CONSTRAINT pk_ddo PRIMARY KEY ( id )
 );

CREATE TABLE po_ipt_member ( 
	id                   integer NOT NULL  ,
	member               integer   ,
	ipt                  integer   ,
	CONSTRAINT Pk_po_ipt_member PRIMARY KEY ( id )
 );

CREATE INDEX idx_po_ipt_member ON po_ipt_member ( member );

CREATE INDEX idx_po_ipt_member_0 ON po_ipt_member ( ipt );

CREATE TABLE po_role ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	name                 varchar(100) NOT NULL  ,
	description          text   ,
	state                varchar(100)  DEFAULT 'enabled' ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_po_role PRIMARY KEY ( id )
 );

CREATE INDEX idx_po_role ON po_role ( project );

CREATE TABLE rp_member ( 
	id                   integer NOT NULL  ,
	account              varchar(100) NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_po_member PRIMARY KEY ( id )
 );

CREATE TABLE rp_project ( 
	id                   integer NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	state                varchar(100)  DEFAULT 'locked' ,
	uuid                 char(38) NOT NULL  ,
	master_uud           char(38)   ,
	CONSTRAINT Pk_po_project PRIMARY KEY ( id )
 );

CREATE TABLE ddo_definition ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	name                 varchar(100)   ,
	shortName            varchar(100)   ,
	description          text   ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_ddo_definition PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_ddo_definition ON ddo_definition ( project );

CREATE TABLE ddo_object ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	definition           integer   ,
	localId              integer NOT NULL  ,
	masterId             integer   ,
	deleted              boolean NOT NULL DEFAULT false ,
	revision             integer  DEFAULT 1 ,
	owner                integer NOT NULL  ,
	uuid                 char  NOT NULL  ,
	master_uuid          char  NOT NULL  ,
	CONSTRAINT Pk_dd PRIMARY KEY ( id ),
	FOREIGN KEY ( definition ) REFERENCES ddo_definition( id )  
 );

CREATE INDEX idx_dd ON ddo_object ( definition );

CREATE INDEX idx_ddo_object ON ddo_object ( project );

CREATE TABLE po_ipt ( 
	id                   integer NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	project              integer NOT NULL  ,
	description          text   ,
	"type"               varchar(100)   ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_po_ipt PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id )  
 );

CREATE INDEX idx_po_ipt ON po_ipt ( project );

CREATE TABLE po_project_member ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	member               integer   ,
	CONSTRAINT Pk_pro_project_member PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id )  
 );

CREATE INDEX idx_pro_project_member ON po_project_member ( project );

CREATE INDEX idx_pro_project_member_0 ON po_project_member ( member );

CREATE TABLE dda_definition ( 
	id                   integer NOT NULL  ,
	ddo                  integer   ,
	"type"               varchar(100)   ,
	defaultValue         blob   ,
	sortOrder            integer  DEFAULT 100 ,
	CONSTRAINT Pk_dda_definition PRIMARY KEY ( id ),
	FOREIGN KEY ( ddo ) REFERENCES ddo_definition( id )  
 );

CREATE INDEX idx_dda_definition ON dda_definition ( ddo );

CREATE TABLE dda_value ( 
	id                   integer NOT NULL  ,
	ddo                  integer   ,
	dda                  integer   ,
	value                blob   ,
	ddo_id               integer   ,
	revision             blob   ,
	CONSTRAINT pk_dda_value PRIMARY KEY ( id ),
	FOREIGN KEY ( ddo_id ) REFERENCES ddo( id ) ON DELETE CASCADE ,
	FOREIGN KEY ( ddo ) REFERENCES ddo_object( id )  ,
	FOREIGN KEY ( dda ) REFERENCES dda_definition( id )  
 );

CREATE INDEX idx_dda_value ON dda_value ( ddo );

CREATE INDEX idx_dda_value_0 ON dda_value ( dda );

CREATE VIEW project_member AS CREATE VIEW project_member AS SELECT
po_project_member.id AS po_member_id
,rp_project.id AS po_id
,rp_project.name AS po_name
,rp_project.state AS po_state
,rp_project.uuid AS po_uuid
,rp_member.id AS mb_id
,rp_member.account as mb_account
,rp_member.name as mb_name
,rp_member.uuid as mb_uuid
,rp_member.master_uuid as mb_master
FROM
po_project_member
INNER JOIN rp_member ON rp_member.id=po_project_member.id
INNER JOIN rp_project ON rp_project.id=po_project_member.project;]]></string>
		</script>
		<script name="Sql_002" id="Query_25f8058f" language="SQL" >
			<string><![CDATA[CREATE TABLE dd_object ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	definition           integer   ,
	localId              integer NOT NULL  ,
	masterId             integer   ,
	deleted              boolean NOT NULL DEFAULT false ,
	archived             boolean  DEFAULT true ,
	revision             integer NOT NULL DEFAULT 1 ,
	owner                integer NOT NULL  ,
	uuid                 char  NOT NULL  ,
	master_uuid          char  NOT NULL  ,
	CONSTRAINT Pk_dd PRIMARY KEY ( id ),
	CONSTRAINT idx_dd_object_state UNIQUE ( id, deleted, archived, revision ) ,
	FOREIGN KEY ( definition ) REFERENCES dd_def_object( id )  ,
	FOREIGN KEY ( owner ) REFERENCES po_ipt( id )  
 );

CREATE INDEX idx_dd_definition ON dd_object ( definition );

CREATE INDEX idx_ddo_object ON dd_object ( project );

CREATE INDEX idx_dd_object ON dd_object ( owner );]]></string>
		</script>
		<script name="Sql_003" id="Query_257ce6d5" language="SQL" >
			<string><![CDATA[CREATE TABLE dd_object ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	definition           integer   ,
	localId              integer NOT NULL  ,
	masterId             integer   ,
	deleted              boolean NOT NULL DEFAULT false ,
	archived             boolean  DEFAULT true ,
	revision             integer NOT NULL DEFAULT 1 ,
	owner                integer NOT NULL  ,
	uuid                 char  NOT NULL  ,
	master_uuid          char  NOT NULL  ,
	CONSTRAINT Pk_dd PRIMARY KEY ( id ),
	CONSTRAINT idx_dd_object_state UNIQUE ( id, deleted, archived, revision ) ,
	FOREIGN KEY ( definition ) REFERENCES dd_def_object( id )  ,
	FOREIGN KEY ( owner ) REFERENCES po_ipt( id )  
 );

CREATE INDEX idx_dd_object_definition ON dd_object ( definition );

CREATE INDEX idx_dd_object_project ON dd_object ( project );

CREATE INDEX idx_dd_object_owner ON dd_object ( owner );

CREATE TRIGGER tg_dd_object_before_delete
         BEFORE DELETE
            ON dd_object
BEGIN
    SELECT RAISE (ABORT, 'delete not allowed on table dd_object');
END;

CREATE TRIGGER tg_dda_value_before_insert
         AFTER INSERT
            ON dda_value
      FOR EACH ROW
BEGIN
    UPDATE dda_value
       SET timestamp = (DATETIME('now') ) 
     WHERE id = OLD.id;
END;]]></string>
		</script>
		<script name="Sql_004" id="Query_198a0ba0" language="SQL" >
			<string><![CDATA[CREATE TABLE rp_member ( 
	id                   integer NOT NULL  ,
	account              varchar(100) NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_po_member PRIMARY KEY ( id )
 );

CREATE TABLE rp_project ( 
	id                   integer NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	state                varchar(100)  DEFAULT 'locked' ,
	uuid                 char(38) NOT NULL  ,
	master_uud           char(38)   ,
	CONSTRAINT Pk_po_project PRIMARY KEY ( id )
 );

CREATE TABLE rp_transaction ( 
	id                   integer NOT NULL  ,
	name                 varchar(100)   ,
	CONSTRAINT Pk_rp_transaction PRIMARY KEY ( id )
 );

CREATE TABLE cm_baseline ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	CONSTRAINT Pk_cm_baseline PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_cm_baseline ON cm_baseline ( project );

CREATE TABLE cm_ddl ( 
	baseline             integer   ,
	FOREIGN KEY ( baseline ) REFERENCES cm_baseline( id )  
 );

CREATE INDEX idx_cm_ddl ON cm_ddl ( baseline );

CREATE TABLE dd_def_object ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	name                 varchar(100)   ,
	shortName            char(2)   ,
	description          text   ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_ddo_definition PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_ddo_definition ON dd_def_object ( project );

CREATE TABLE dd_objectid ( 
	id                   integer NOT NULL  ,
	definition           integer   ,
	nextId               integer  DEFAULT 1 ,
	CONSTRAINT Pk_ddo_id PRIMARY KEY ( id ),
	FOREIGN KEY ( definition ) REFERENCES dd_def_object( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_ddo_id ON dd_objectid ( definition );

CREATE TABLE po_ipt ( 
	id                   integer NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	project              integer NOT NULL  ,
	description          text   ,
	"type"               varchar(100)   ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_po_ipt PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id )  
 );

CREATE INDEX idx_po_ipt ON po_ipt ( project );

CREATE TABLE po_project_member ( 
	project              integer NOT NULL  ,
	member               integer NOT NULL  ,
	mode                 varchar(100)  DEFAULT readwrite ,
	CONSTRAINT idx_po_project_member_member UNIQUE ( member ) ,
	CONSTRAINT pk_po_project_member PRIMARY KEY ( project, member ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id )  ,
	FOREIGN KEY ( member ) REFERENCES rp_member( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_po_project_member_project ON po_project_member ( project );

CREATE TABLE po_role ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	name                 varchar(100) NOT NULL  ,
	description          text   ,
	state                varchar(100)  DEFAULT 'enabled' ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_po_role PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_po_role ON po_role ( project );

CREATE TABLE po_role_member ( 
	role                 integer   ,
	member               integer   ,
	FOREIGN KEY ( role ) REFERENCES po_role( id )  ,
	FOREIGN KEY ( member ) REFERENCES po_project_member( member )  
 );

CREATE INDEX idx_po_role_member ON po_role_member ( role );

CREATE INDEX idx_po_role_member_0 ON po_role_member ( member );

CREATE TABLE po_role_transaction ( 
	role                 integer NOT NULL  ,
	transaction_id       integer NOT NULL  ,
	CONSTRAINT pk_po_role_transaction PRIMARY KEY ( role, transaction_id ),
	FOREIGN KEY ( transaction_id ) REFERENCES rp_transaction( id )  ,
	FOREIGN KEY ( role ) REFERENCES po_role( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_po_role_transaction ON po_role_transaction ( transaction_id );

CREATE INDEX idx_po_role_transaction_0 ON po_role_transaction ( role );

CREATE TABLE dd_def_attribute ( 
	id                   integer NOT NULL  ,
	ddo                  integer   ,
	"type"               varchar(100)   ,
	defaultValue         blob   ,
	sortOrder            integer  DEFAULT 100 ,
	CONSTRAINT Pk_dda_definition PRIMARY KEY ( id ),
	FOREIGN KEY ( ddo ) REFERENCES dd_def_object( id )  
 );

CREATE INDEX idx_dda_definition ON dd_def_attribute ( ddo );

CREATE TABLE dd_def_link ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	source               integer   ,
	target               integer   ,
	cardinality          integer   ,
	reverse              integer  DEFAULT 0 ,
	CONSTRAINT Pk_dd_def_link PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id )  ,
	FOREIGN KEY ( source ) REFERENCES dd_def_object( id ) ON DELETE CASCADE ,
	FOREIGN KEY ( target ) REFERENCES dd_def_object( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_dd_def_link ON dd_def_link ( project );

CREATE INDEX idx_dd_def_link_0 ON dd_def_link ( source );

CREATE INDEX idx_dd_def_link_1 ON dd_def_link ( target );

CREATE TABLE dd_object ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	definition           integer   ,
	localId              integer NOT NULL  ,
	masterId             integer   ,
	deleted              boolean NOT NULL DEFAULT false ,
	archived             boolean  DEFAULT true ,
	revision             integer NOT NULL DEFAULT 1 ,
	owner                integer NOT NULL  ,
	uuid                 char  NOT NULL  ,
	master_uuid          char  NOT NULL  ,
	CONSTRAINT Pk_dd PRIMARY KEY ( id ),
	CONSTRAINT idx_dd_object_state UNIQUE ( id, deleted, archived, revision ) ,
	FOREIGN KEY ( definition ) REFERENCES dd_def_object( id )  ,
	FOREIGN KEY ( owner ) REFERENCES po_ipt( id )  
 );

CREATE INDEX idx_dd_object_definition ON dd_object ( definition );

CREATE INDEX idx_dd_object_project ON dd_object ( project );

CREATE INDEX idx_dd_object_owner ON dd_object ( owner );

CREATE TABLE po_ipt_member ( 
	id                   integer NOT NULL  ,
	member               integer   ,
	ipt                  integer   ,
	CONSTRAINT Pk_po_ipt_member PRIMARY KEY ( id ),
	FOREIGN KEY ( member ) REFERENCES po_project_member( member )  ,
	FOREIGN KEY ( ipt ) REFERENCES po_ipt( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_po_ipt_member ON po_ipt_member ( member );

CREATE INDEX idx_po_ipt_member_0 ON po_ipt_member ( ipt );

CREATE TABLE rp_object_lock ( 
	member               integer NOT NULL  ,
	object               integer NOT NULL  ,
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	CONSTRAINT pl_ddo_lock PRIMARY KEY ( member, object ),
	FOREIGN KEY ( member ) REFERENCES po_project_member( member )  ,
	FOREIGN KEY ( object ) REFERENCES dd_object( id )  
 );

CREATE INDEX idx_ddo_lock_object ON rp_object_lock ( object );

CREATE INDEX idx_ddo_lock_member ON rp_object_lock ( member );

CREATE TABLE cm_ddo ( 
	baseline             integer   ,
	object               integer   ,
	FOREIGN KEY ( baseline ) REFERENCES cm_baseline( id ) ON DELETE CASCADE ,
	FOREIGN KEY ( object ) REFERENCES dd_object( id )  
 );

CREATE INDEX idx_cm_ddo ON cm_ddo ( baseline );

CREATE INDEX idx_cm_ddo_0 ON cm_ddo ( object );

CREATE TABLE dd_attribute_value ( 
	id                   integer NOT NULL  ,
	ddo                  integer   ,
	dda                  integer   ,
	value                blob   ,
	revision             blob   ,
	timestamp            datetime   ,
	CONSTRAINT pk_dda_value PRIMARY KEY ( id ),
	CONSTRAINT idx_dda_value_unique UNIQUE ( ddo, dda ) ,
	FOREIGN KEY ( ddo ) REFERENCES dd_object( id )  ,
	FOREIGN KEY ( dda ) REFERENCES dd_def_attribute( id )  
 );

CREATE INDEX idx_dda_value_ddo ON dd_attribute_value ( ddo );

CREATE INDEX idx_dda_value_dda ON dd_attribute_value ( dda );

CREATE TABLE dd_link ( 
	definition           integer   ,
	source_id            integer   ,
	target_id            integer   ,
	FOREIGN KEY ( definition ) REFERENCES dd_def_link( id )  ,
	FOREIGN KEY ( source_id ) REFERENCES dd_object( id )  ,
	FOREIGN KEY ( target_id ) REFERENCES dd_object( id )  
 );

CREATE INDEX idx_dd_link ON dd_link ( definition );

CREATE INDEX idx_dd_link_0 ON dd_link ( source_id );

CREATE INDEX idx_dd_link_1 ON dd_link ( target_id );

CREATE TABLE dd_attribute_history ( 
	ddo                  integer NOT NULL  ,
	dda                  integer NOT NULL  ,
	value                blob   ,
	revision             integer NOT NULL  ,
	CONSTRAINT pk_dda_history PRIMARY KEY ( ddo, dda, revision ),
	FOREIGN KEY ( ddo, dda ) REFERENCES dd_attribute_value( ddo, dda )  
 );

CREATE VIEW designdataobjects AS SELECT 
id
FROM dd_object;
UNION 
SELECT 
id 
FROM 
dd_object_history;

CREATE VIEW project_member AS SELECT
po_project_member.id AS po_member_id
,rp_project.id AS po_id
,rp_project.name AS po_name
,rp_project.state AS po_state
,rp_project.uuid AS po_uuid
,rp_member.id AS mb_id
,rp_member.account as mb_account
,rp_member.name as mb_name
,rp_member.uuid as mb_uuid
,rp_member.master_uuid as mb_master
FROM
po_project_member
INNER JOIN rp_member ON rp_member.id=po_project_member.id
INNER JOIN rp_project ON rp_project.id=po_project_member.project;

CREATE TRIGGER tg_dd_object_before_delete
         BEFORE DELETE
            ON dd_object
BEGIN
    SELECT RAISE (ABORT, 'delete not allowed on table dd_object');
END;

CREATE TRIGGER tg_dda_value_before_insert
         AFTER INSERT
            ON dda_value
      FOR EACH ROW
BEGIN
    UPDATE dda_value
       SET timestamp = (DATETIME('now') ) 
     WHERE id = OLD.id;
END;]]></string>
		</script>
		<script name="Sql_005" id="Query_19b567ed" language="SQL" >
			<string><![CDATA[CREATE TABLE rp_member ( 
	id                   integer NOT NULL  ,
	account              varchar(100) NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_po_member PRIMARY KEY ( id )
 );

CREATE TABLE rp_project ( 
	id                   integer NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	state                varchar(100)  DEFAULT 'locked' ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_po_project PRIMARY KEY ( id )
 );

CREATE TABLE rp_project_member ( 
	project              integer NOT NULL  ,
	member               integer NOT NULL  ,
	mode                 varchar(100)  DEFAULT readwrite ,
	CONSTRAINT idx_po_project_member_member UNIQUE ( member ) ,
	CONSTRAINT pk_po_project_member PRIMARY KEY ( project, member ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id )  ,
	FOREIGN KEY ( member ) REFERENCES rp_member( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_po_project_member_project ON rp_project_member ( project );

CREATE TABLE rp_transaction ( 
	id                   integer NOT NULL  ,
	name                 varchar(100)   ,
	CONSTRAINT Pk_rp_transaction PRIMARY KEY ( id )
 );

CREATE TABLE cm_baseline ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	name                 varchar(255) NOT NULL  ,
	description          text   ,
	CONSTRAINT Pk_cm_baseline PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_cm_baseline ON cm_baseline ( project );

CREATE TABLE dd_def_object ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	name                 varchar(100)   ,
	shortName            char(2)   ,
	description          text   ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_ddo_definition PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_ddo_definition ON dd_def_object ( project );

CREATE TABLE dd_objectid ( 
	id                   integer NOT NULL  ,
	definition           integer   ,
	nextId               integer  DEFAULT 1 ,
	CONSTRAINT Pk_ddo_id PRIMARY KEY ( id ),
	FOREIGN KEY ( definition ) REFERENCES dd_def_object( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_ddo_id ON dd_objectid ( definition );

CREATE TABLE po_ipt ( 
	id                   integer NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	project              integer NOT NULL  ,
	description          text   ,
	"type"               varchar(100)   ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_po_ipt PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id )  
 );

CREATE INDEX idx_po_ipt ON po_ipt ( project );

CREATE TABLE po_ipt_member ( 
	member               integer NOT NULL  ,
	ipt                  integer NOT NULL  ,
	CONSTRAINT pk_po_ipt_member PRIMARY KEY ( member, ipt ),
	FOREIGN KEY ( member ) REFERENCES rp_project_member( member )  ,
	FOREIGN KEY ( ipt ) REFERENCES po_ipt( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_po_ipt_member_member ON po_ipt_member ( member );

CREATE INDEX idx_po_ipt_member_ipt ON po_ipt_member ( ipt );

CREATE TABLE po_role ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	name                 varchar(100) NOT NULL  ,
	description          text   ,
	state                varchar(100)  DEFAULT 'enabled' ,
	uuid                 char(38) NOT NULL  ,
	master_uuid          char(38) NOT NULL  ,
	CONSTRAINT Pk_po_role PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_po_role ON po_role ( project );

CREATE TABLE po_role_member ( 
	role                 integer   ,
	member               integer   ,
	FOREIGN KEY ( role ) REFERENCES po_role( id )  ,
	FOREIGN KEY ( member ) REFERENCES rp_project_member( member )  
 );

CREATE INDEX idx_po_role_member ON po_role_member ( role );

CREATE INDEX idx_po_role_member_0 ON po_role_member ( member );

CREATE TABLE po_role_transaction ( 
	role                 integer NOT NULL  ,
	transaction_id       integer NOT NULL  ,
	CONSTRAINT pk_po_role_transaction PRIMARY KEY ( role, transaction_id ),
	FOREIGN KEY ( transaction_id ) REFERENCES rp_transaction( id )  ,
	FOREIGN KEY ( role ) REFERENCES po_role( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_po_role_transaction ON po_role_transaction ( transaction_id );

CREATE INDEX idx_po_role_transaction_0 ON po_role_transaction ( role );

CREATE TABLE dd_def_attribute ( 
	id                   integer NOT NULL  ,
	ddo                  integer   ,
	"type"               varchar(100)   ,
	defaultValue         blob   ,
	sortOrder            integer  DEFAULT 100 ,
	CONSTRAINT Pk_dda_definition PRIMARY KEY ( id ),
	FOREIGN KEY ( ddo ) REFERENCES dd_def_object( id )  
 );

CREATE INDEX idx_dda_definition ON dd_def_attribute ( ddo );

CREATE TABLE dd_def_enum ( 
	id                   integer NOT NULL  ,
	dda                  integer   ,
	key                  varchar(100) NOT NULL  ,
	value                varchar(100) NOT NULL  ,
	sortorder            integer  DEFAULT 100 ,
	CONSTRAINT Pk_dd_enum PRIMARY KEY ( id ),
	FOREIGN KEY ( dda ) REFERENCES dd_def_attribute( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_dd_enum ON dd_def_enum ( dda );

CREATE TABLE dd_def_link ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	source               integer   ,
	target               integer   ,
	cardinality          integer   ,
	reverse              integer  DEFAULT 0 ,
	CONSTRAINT Pk_dd_def_link PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( id )  ,
	FOREIGN KEY ( source ) REFERENCES dd_def_object( id ) ON DELETE CASCADE ,
	FOREIGN KEY ( target ) REFERENCES dd_def_object( id ) ON DELETE CASCADE 
 );

CREATE INDEX idx_dd_def_link ON dd_def_link ( project );

CREATE INDEX idx_dd_def_link_0 ON dd_def_link ( source );

CREATE INDEX idx_dd_def_link_1 ON dd_def_link ( target );

CREATE TABLE dd_object ( 
	id                   integer NOT NULL  ,
	project              integer   ,
	definition           integer   ,
	localId              integer NOT NULL  ,
	masterId             integer   ,
	deleted              boolean NOT NULL DEFAULT false ,
	archived             boolean  DEFAULT true ,
	revision             integer NOT NULL DEFAULT 1 ,
	owner                integer NOT NULL  ,
	uuid                 char  NOT NULL  ,
	master_uuid          char  NOT NULL  ,
	CONSTRAINT Pk_dd PRIMARY KEY ( id ),
	CONSTRAINT idx_dd_object_state UNIQUE ( id, deleted, archived, revision ) ,
	FOREIGN KEY ( definition ) REFERENCES dd_def_object( id )  ,
	FOREIGN KEY ( owner ) REFERENCES po_ipt( id )  
 );

CREATE INDEX idx_dd_object_definition ON dd_object ( definition );

CREATE INDEX idx_dd_object_project ON dd_object ( project );

CREATE INDEX idx_dd_object_owner ON dd_object ( owner );

CREATE TABLE rp_object_lock ( 
	member               integer NOT NULL  ,
	object               integer NOT NULL  ,
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	CONSTRAINT pk_rp_object_lock PRIMARY KEY ( member, object ),
	FOREIGN KEY ( member ) REFERENCES rp_project_member( member )  ,
	FOREIGN KEY ( object ) REFERENCES dd_object( id )  
 );

CREATE INDEX idx_ddo_lock_object ON rp_object_lock ( object );

CREATE INDEX idx_ddo_lock_member ON rp_object_lock ( member );

CREATE TABLE cm_ddo ( 
	baseline             integer   ,
	object               integer   ,
	FOREIGN KEY ( baseline ) REFERENCES cm_baseline( id ) ON DELETE CASCADE ,
	FOREIGN KEY ( object ) REFERENCES dd_object( id )  
 );

CREATE INDEX idx_cm_ddo ON cm_ddo ( baseline );

CREATE INDEX idx_cm_ddo_0 ON cm_ddo ( object );

CREATE TABLE dd_attribute_value ( 
	id                   integer NOT NULL  ,
	ddo                  integer   ,
	dda                  integer   ,
	value                blob   ,
	revision             blob   ,
	timestamp            datetime   ,
	precision            integer   ,
	decimals             integer   ,
	CONSTRAINT pk_dda_value PRIMARY KEY ( id ),
	CONSTRAINT idx_dda_value_unique UNIQUE ( ddo, dda ) ,
	FOREIGN KEY ( ddo ) REFERENCES dd_object( id )  ,
	FOREIGN KEY ( dda ) REFERENCES dd_def_attribute( id )  
 );

CREATE INDEX idx_dda_value_ddo ON dd_attribute_value ( ddo );

CREATE INDEX idx_dda_value_dda ON dd_attribute_value ( dda );

CREATE TABLE dd_link ( 
	id                   integer NOT NULL  ,
	definition           integer   ,
	source_id            integer   ,
	target_id            integer   ,
	CONSTRAINT pk_dd_link PRIMARY KEY ( id ),
	FOREIGN KEY ( definition ) REFERENCES dd_def_link( id )  ,
	FOREIGN KEY ( source_id ) REFERENCES dd_object( id )  ,
	FOREIGN KEY ( target_id ) REFERENCES dd_object( id )  
 );

CREATE INDEX idx_dd_link_definition ON dd_link ( definition );

CREATE INDEX idx_dd_link_source ON dd_link ( source_id );

CREATE INDEX idx_dd_link_target ON dd_link ( target_id );

CREATE TABLE cm_ddl ( 
	baseline             integer   ,
	link                 integer   ,
	FOREIGN KEY ( baseline ) REFERENCES cm_baseline( id )  ,
	FOREIGN KEY ( link ) REFERENCES dd_link( id )  
 );

CREATE INDEX idx_cm_ddl ON cm_ddl ( baseline );

CREATE INDEX idx_cm_ddl_0 ON cm_ddl ( link );

CREATE TABLE dd_attribute_history ( 
	ddo                  integer NOT NULL  ,
	dda                  integer NOT NULL  ,
	value                blob   ,
	revision             integer NOT NULL  ,
	CONSTRAINT pk_dda_history PRIMARY KEY ( ddo, dda, revision ),
	FOREIGN KEY ( ddo, dda ) REFERENCES dd_attribute_value( ddo, dda )  
 );

CREATE VIEW allowed_transactions AS SELECT
po_role.project AS po_id,
rp_transaction.id AS ta_id,
rp_transaction.name AS ta_name,
po_role.id AS ro_id,
po_role.name AS ro_name,
po_role.state AS ro_state,
po_role.uuid AS ro_uuid,
po_role.master_uuid AS ro_master,
assigned_roles.mb_id AS mb_id,
assigned_roles.mb_account AS mb_account,
assigned_roles.mb_mode AS mb_mode
FROM
po_role_transaction
INNER JOIN 
po_role ON (po_role.id=po_role_transaction.role) 
INNER JOIN
rp_transaction ON (rp_transaction.id=po_role_transaction.transaction_id)
INNER JOIN
assigned_roles ON (assigned_roles.ro_id=po_role.id)
WHERE
ro_state='enabled' AND mb_mode='readwrite';

CREATE VIEW assigned_roles AS CREATE VIEW assigned_roles AS SELECT
rp_project_member.project AS po_id,
po_role.id AS ro_id,
po_role.name AS ro_name,
pO_role.description AS ro_description,
po_role.uuid AS ro_uuid,
po_role.master_uuid AS ro_master,
rp_member.id AS mb_id,
rp_member.account AS mb_account,
rp_member.name AS mb_name,
rp_project_member.mode AS mb_mode,
rp_member.uuid AS mb_uuid,
rp_member.master_uuid AS mb_master
  FROM po_role_member
       INNER JOIN
       po_role ON (po_role.id = po_role_member.role)
       INNER JOIN
       rp_project_member ON (rp_project_member.member=po_role_member.member)
       INNER JOIN
       rp_member ON (rp_member.id=rp_project_member.member);

CREATE VIEW project_member_old AS SELECT
po_project_member.id AS po_member_id
,rp_project.id AS po_id
,rp_project.name AS po_name
,rp_project.state AS po_state
,rp_project.uuid AS po_uuid
,rp_member.id AS mb_id
,rp_member.account as mb_account
,rp_member.name as mb_name
,rp_member.uuid as mb_uuid
,rp_member.master_uuid as mb_master
FROM
po_project_member
INNER JOIN rp_member ON rp_member.id=po_project_member.id
INNER JOIN rp_project ON rp_project.id=po_project_member.project;

CREATE VIEW project_members AS SELECT
po.id AS po_id,
mb.id AS mb_id,
mb.account AS mb_account,
mb.name AS mb_name,
rpm.mode AS mb_mode,
mb.uuid AS mb_uuid,
mb.master_uuid AS mb_master
FROM rp_project po 
	INNER JOIN rp_project_member rpm ON ( po.id = rpm.project  )  
		INNER JOIN rp_member mb ON ( rpm.member = mb.id  );

CREATE TRIGGER tg_dd_object_before_delete
         BEFORE DELETE
            ON dd_object
BEGIN
    SELECT RAISE (ABORT, 'delete not allowed on table dd_object');
END;

CREATE TRIGGER tg_dd_attribute_value_before_insert
         AFTER INSERT
            ON dd_attribute_value
      FOR EACH ROW
BEGIN
    UPDATE dda_value
       SET timestamp = (DATETIME('now') ) 
     WHERE id = OLD.id;
END;]]></string>
		</script>
	</layout>
	<layout name="Tables only" id="Layout_3e7f25" joined_routing="y" show_column_type="y" show_relation="columns" >
		<comment><![CDATA[RePoSyD Database Model]]></comment>
		<entity schema="Default" name="po_role_ddo_transaction" color="EEF7EC" x="416" y="1856" />
		<entity schema="Default" name="po_role_ddl_transaction" color="EEF7EC" x="416" y="1744" />
		<entity schema="Default" name="cm_baseline" color="F7F3EC" x="64" y="1344" />
		<entity schema="Default" name="po_role" color="EEF7EC" x="208" y="2432" />
		<entity schema="Default" name="po_ipt" color="EEF7EC" x="416" y="2320" />
		<entity schema="Default" name="po_role_transaction" color="EEF7EC" x="416" y="1968" />
		<entity schema="Default" name="dd_ddl_solution_history" color="FFFFCC" x="1888" y="384" />
		<entity schema="Default" name="dd_attribute_value" color="C4E0F9" x="1648" y="768" />
		<entity schema="Default" name="da_analysis_result" color="CC6633" x="848" y="80" />
		<entity schema="Default" name="rp_transaction" color="F0ECF7" x="912" y="2704" />
		<entity schema="Default" name="da_analysis_container" color="CC6633" x="656" y="96" />
		<entity schema="Default" name="da_analysis_definition" color="CC6633" x="464" y="144" />
		<entity schema="Default" name="da_analysis_object" color="CC6633" x="1072" y="80" />
		<entity schema="Default" name="da_analysis_result_properties" color="CC6633" x="1040" y="256" />
		<entity schema="Default" name="cm_ddl" color="F7F3EC" x="336" y="1136" />
		<entity schema="Default" name="cm_ddo" color="F7F3EC" x="336" y="1280" />
		<entity schema="Default" name="cm_baseline_solution" color="F7F3EC" x="336" y="1392" />
		<entity schema="Default" name="dd_objectid" color="C4E0F9" x="1344" y="752" />
		<entity schema="Default" name="dd_def_link_reverse" color="ECECF7" x="528" y="496" />
		<entity schema="Default" name="re_stylesheet" color="FFEBEB" x="960" y="2096" />
		<entity schema="Default" name="dd_def_link" color="ECECF7" x="720" y="736" />
		<entity schema="Default" name="dd_def_attribute" color="ECECF7" x="1040" y="464" />
		<entity schema="Default" name="dd_def_enum" color="ECECF7" x="784" y="464" />
		<entity schema="Default" name="sp_user_log" color="FFCCFF" x="2080" y="1600" />
		<entity schema="Default" name="sp_sys_log" color="FFCCFF" x="2080" y="1728" />
		<entity schema="Default" name="dd_attribute_history" color="FFFFCC" x="1888" y="656" />
		<entity schema="Default" name="dd_def_hierarchy" color="ECECF7" x="528" y="928" />
		<entity schema="Default" name="re_template_solution" color="FFEBEB" x="1168" y="2432" />
		<entity schema="Default" name="dd_ddl_solution" color="C4E0F9" x="1312" y="400" />
		<entity schema="Default" name="ddh_ddo_dda_revision" color="FFFFCC" x="1888" y="816" />
		<entity schema="Default" name="sp_watcher" color="FFCCFF" x="2096" y="1920" />
		<entity schema="Default" name="sp_translation" color="FFCCFF" x="1856" y="2224" />
		<entity schema="Default" name="rp_project_member" color="F0ECF7" x="1408" y="2672" />
		<entity schema="Default" name="po_ipt_member" color="EEF7EC" x="416" y="2192" />
		<entity schema="Default" name="po_role_member" color="EEF7EC" x="416" y="2064" />
		<entity schema="Default" name="cm_request" color="F7F3EC" x="48" y="1552" />
		<entity schema="Default" name="cm_request_solution" color="F7F3EC" x="336" y="1536" />
		<entity schema="Default" name="rp_solution_space" color="F0ECF7" x="912" y="2816" />
		<entity schema="Default" name="rp_project" color="F0ECF7" x="912" y="3008" />
		<entity schema="Default" name="rp_project_config" color="F0ECF7" x="912" y="3168" />
		<entity schema="Default" name="rp_member_settings" color="F0ECF7" x="1152" y="2816" />
		<entity schema="Default" name="rp_config" color="F0ECF7" x="1152" y="2960" />
		<entity schema="Default" name="rp_member" color="F0ECF7" x="1408" y="2832" />
		<entity schema="Default" name="sp_comment" color="FFCCFF" x="1872" y="2496" />
		<entity schema="Default" name="sp_messagebox" color="FFCCFF" x="1872" y="2672" />
		<entity schema="Default" name="re_template" color="FFEBEB" x="1424" y="2432" />
		<entity schema="Default" name="dd_object" color="C4E0F9" x="1328" y="1088" />
		<entity schema="Default" name="dd_ddo_solution" color="C4E0F9" x="1328" y="1376" />
		<entity schema="Default" name="re_layout" color="FFEBEB" x="1152" y="2096" />
		<entity schema="Default" name="dd_def_object" color="ECECF7" x="1088" y="832" />
		<entity schema="Default" name="re_section" color="FFEBEB" x="1360" y="1792" />
		<entity schema="Default" name="sp_script_project" color="FFCCFF" x="1872" y="2112" />
		<entity schema="Default" name="sp_script" color="FFCCFF" x="1856" y="1920" />
		<entity schema="Default" name="sp_issue" color="FFCCFF" x="1856" y="1504" />
		<entity schema="Default" name="sp_tags" color="FFCCFF" x="2272" y="1440" />
		<entity schema="Default" name="sp_tags_ddo" color="FFCCFF" x="2080" y="1456" />
		<entity schema="Default" name="dd_link" color="C4E0F9" x="1648" y="512" />
		<entity schema="Default" name="dd_link_history" color="FFFFCC" x="2112" y="368" />
		<entity schema="Default" name="dd_template" color="C1D8EE" x="1376" y="880" />
		<entity schema="Default" name="re_reportson" color="FFEBEB" x="1136" y="1760" />
		<entity schema="Default" name="re_documenttree" color="FFEBEB" x="1152" y="1904" />
		<entity schema="Default" name="dd_object_history" color="FFFFCC" x="2112" y="608" />
		<entity schema="Default" name="dm_diagram" color="CCCCFF" x="1856" y="1152" />
		<entity schema="Default" name="sp_issue_history" color="3986C1" x="2592" y="944" />
		<entity schema="Default" name="dm_item_property" color="CCCCFF" x="2384" y="1088" />
		<entity schema="Default" name="re_document_history" color="FFFFCC" x="2352" y="368" />
		<entity schema="Default" name="re_section_history" color="FFFFCC" x="2352" y="720" />
		<entity schema="Default" name="re_document" color="FFEBEB" x="1360" y="2048" />
		<entity schema="Default" name="re_section_ddl" color="FFEBEB" x="944" y="2272" />
		<entity schema="Default" name="re_section_ddo" color="FFEBEB" x="944" y="2384" />
		<entity schema="Default" name="dm_item" color="CCCCFF" x="2080" y="1040" />
		<entity schema="Default" name="dm_diagram_property" color="CCCCFF" x="2080" y="1264" />
		<entity schema="Default" name="rp_lock" color="F0ECF7" x="1152" y="3056" />
		<group name="repository (rp)" color="F0ECF7" >
			<entity schema="Default" name="rp_project" />
			<entity schema="Default" name="rp_member" />
			<entity schema="Default" name="rp_transaction" />
			<entity schema="Default" name="rp_project_member" />
			<entity schema="Default" name="rp_solution_space" />
			<entity schema="Default" name="rp_lock" />
			<entity schema="Default" name="rp_config" />
			<entity schema="Default" name="rp_member_settings" />
			<entity schema="Default" name="rp_project_config" />
		</group>
		<group name="design data (dd)" color="C4E0F9" >
			<entity schema="Default" name="dd_link" />
			<entity schema="Default" name="dd_object" />
			<entity schema="Default" name="dd_attribute_value" />
			<entity schema="Default" name="dd_objectid" />
			<entity schema="Default" name="dd_ddl_solution" />
			<entity schema="Default" name="dd_ddo_solution" />
			<entity schema="Default" name="dd_template" />
		</group>
		<group name="meta model (mm)" color="ECECF7" >
			<entity schema="Default" name="dd_def_object" />
			<entity schema="Default" name="dd_def_attribute" />
			<entity schema="Default" name="dd_def_hierarchy" />
			<entity schema="Default" name="dd_def_link_reverse" />
			<entity schema="Default" name="dd_def_link" />
			<entity schema="Default" name="dd_def_enum" />
		</group>
		<group name="project organization (po)" color="EEF7EC" >
			<entity schema="Default" name="po_ipt" />
			<entity schema="Default" name="po_ipt_member" />
			<entity schema="Default" name="po_role" />
			<entity schema="Default" name="po_role_member" />
			<entity schema="Default" name="po_role_transaction" />
			<entity schema="Default" name="po_role_ddo_transaction" />
			<entity schema="Default" name="po_role_ddl_transaction" />
		</group>
		<group name="configuration management (cm)" color="F7F3EC" >
			<entity schema="Default" name="cm_baseline" />
			<entity schema="Default" name="cm_ddo" />
			<entity schema="Default" name="cm_ddl" />
			<entity schema="Default" name="cm_request" />
			<entity schema="Default" name="cm_request_solution" />
			<entity schema="Default" name="cm_baseline_solution" />
		</group>
		<group name="diagram (dm)" color="CCCCFF" >
			<entity schema="Default" name="dm_diagram" />
			<entity schema="Default" name="dm_item" />
			<entity schema="Default" name="dm_item_property" />
			<entity schema="Default" name="dm_diagram_property" />
		</group>
		<group name="report framework (rf)" color="FFEBEB" >
			<comment><![CDATA[This group contains all tables required to implement RePoSyD's report engine.]]></comment>
			<entity schema="Default" name="re_document" />
			<entity schema="Default" name="re_layout" />
			<entity schema="Default" name="re_stylesheet" />
			<entity schema="Default" name="re_section" />
			<entity schema="Default" name="re_documenttree" />
			<entity schema="Default" name="re_template" />
			<entity schema="Default" name="re_template_solution" />
			<entity schema="Default" name="re_reportson" />
			<entity schema="Default" name="re_section_ddl" />
			<entity schema="Default" name="re_section_ddo" />
		</group>
		<group name="support" color="FFCCFF" >
			<entity schema="Default" name="sp_comment" />
			<entity schema="Default" name="sp_issue" />
			<entity schema="Default" name="sp_sys_log" />
			<entity schema="Default" name="sp_user_log" />
			<entity schema="Default" name="sp_translation" />
			<entity schema="Default" name="sp_script" />
			<entity schema="Default" name="sp_messagebox" />
			<entity schema="Default" name="sp_script_project" />
			<entity schema="Default" name="sp_watcher" />
			<entity schema="Default" name="sp_tags" />
			<entity schema="Default" name="sp_tags_ddo" />
		</group>
		<group name="design data history" color="FFFFCC" >
			<entity schema="Default" name="dd_attribute_history" />
			<entity schema="Default" name="dd_ddl_solution_history" />
			<entity schema="Default" name="dd_link_history" />
			<entity schema="Default" name="dd_object_history" />
			<entity schema="Default" name="ddh_ddo_dda_revision" />
			<entity schema="Default" name="re_document_history" />
			<entity schema="Default" name="re_section_history" />
		</group>
		<group name="data analysis (da)" color="CC6633" >
			<entity schema="Default" name="da_analysis_definition" />
			<entity schema="Default" name="da_analysis_container" />
			<entity schema="Default" name="da_analysis_result" />
			<entity schema="Default" name="da_analysis_object" />
			<entity schema="Default" name="da_analysis_result_properties" />
		</group>
		<script name="Sql_Editor" id="Editor_452757d" language="SQL" >
			<string><![CDATA[CREATE TABLE cm_baseline ( 
	uuid                 char(38) NOT NULL  ,
	name                 varchar(255) NOT NULL  ,
	description          text   ,
	major                integer NOT NULL  ,
	minor                integer NOT NULL  ,
	"type"               varchar(100)   ,
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT pk_cm_baseline PRIMARY KEY ( uuid ),
	CONSTRAINT unq_cm_baseline_major_minor UNIQUE ( uuid, major, minor ) 
 );

CREATE TABLE cm_request ( 
	uuid                 char(38) NOT NULL  ,
	description          text   ,
	state                varchar(100) NOT NULL DEFAULT 'invalid' ,
	repository           char(38)   ,
	CONSTRAINT pk_cm_request PRIMARY KEY ( uuid )
 );

CREATE TABLE dd_attribute_history ( 
	ddo                  char(38) NOT NULL  ,
	dda                  char(38) NOT NULL  ,
	value                blob   ,
	revision             integer NOT NULL  ,
	revisionFrom         integer   ,
	revisionTo           integer   ,
	timestamp            datetime   ,
	ddo_revision         integer   ,
	CONSTRAINT Unq_dd_attribute_history_ddo UNIQUE ( ddo, revision ) 
 );

CREATE INDEX Idx_dd_attribute_history_ddo ON dd_attribute_history ( ddo, ddo_revision );

CREATE TABLE dd_ddl_solution_history ( 
	solution             char(38) NOT NULL  ,
	ddl                  char(38) NOT NULL  ,
	leftFrom             integer   ,
	leftTo               integer   ,
	rightFrom            integer   ,
	rightTo              integer   ,
	revision             integer   ,
	acceptedBy           char(38)   ,
	acceptedRevisionLeft integer  DEFAULT -1 ,
	acceptedRevisionRight integer  DEFAULT -1 ,
	acceptedState        varchar(100)   ,
	modifiedBy           char(38)   ,
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP 
 );

CREATE INDEX idx_dd_variant_ddl_solution_0 ON dd_ddl_solution_history ( solution );

CREATE INDEX idx_dd_variant_ddl_dd_link_0 ON dd_ddl_solution_history ( ddl );

CREATE TABLE dd_link_history ( 
	uuid                 char(38) NOT NULL  ,
	definition           char(38) NOT NULL  ,
	do_left              char(38) NOT NULL  ,
	do_right             char(38) NOT NULL  ,
	modifiedBy           char(38) NOT NULL  ,
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	repository           char(38) NOT NULL  
 );

CREATE INDEX idx_dd_link_definition_1 ON dd_link_history ( definition );

CREATE INDEX idx_dd_link_source_1 ON dd_link_history ( do_left );

CREATE INDEX idx_dd_link_target_1 ON dd_link_history ( do_right );

CREATE INDEX idx_dd_link_2 ON dd_link_history ( modifiedBy );

CREATE INDEX id_dd_link_history ON dd_link_history ( uuid );

CREATE TABLE dd_object_history ( 
	uuid                 char(38) NOT NULL  ,
	definition           char(38)   ,
	localId              integer   ,
	masterId             integer   ,
	revision             integer   ,
	modifiedBy           char(38)   ,
	owner                char(38)   ,
	timestamp            datetime   ,
	repository           char(38)   ,
	CONSTRAINT pk_dd_history UNIQUE ( uuid, revision ) ,
	CONSTRAINT Unq_dd_object_history_uuid UNIQUE ( uuid, revision ) 
 );

CREATE INDEX idx_dd_object_history_uuid ON dd_object_history ( uuid );

CREATE TABLE re_layout ( 
	uuid                 char(38) NOT NULL  ,
	name                 varchar(255)   ,
	repository           char(38)   ,
	CONSTRAINT Pk_re_stylesheet_uuid PRIMARY KEY ( uuid )
 );

CREATE TABLE re_section_history ( 
	uuid                 char(38)   ,
	document             char(38)   ,
	number               varchar(255)   ,
	caption              varchar(255)   ,
	description          text   ,
	script               char(38)   ,
	options              blob   
 );

CREATE INDEX Idx_re_section_document_0 ON re_section_history ( document );

CREATE INDEX Idx_re_section_script_0 ON re_section_history ( script );

CREATE TABLE re_stylesheet ( 
	layout               char(38)   ,
	format               varchar(100)   ,
	data                 blob   ,
	url                  varchar(255)   ,
	FOREIGN KEY ( layout ) REFERENCES re_layout( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_re_stylesheet_format ON re_stylesheet ( format );

CREATE INDEX idx_re_stylesheet_layout ON re_stylesheet ( layout );

CREATE TABLE rp_member ( 
	uuid                 char(38) NOT NULL  ,
	account              varchar(100) NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT pk_rp_member PRIMARY KEY ( uuid )
 );

CREATE TABLE rp_project ( 
	uuid                 char(38) NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	state                varchar(100)  DEFAULT 'locked' ,
	description          text   ,
	properties           text   ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT pk_rp_project PRIMARY KEY ( uuid )
 );

CREATE TABLE rp_project_member ( 
	project              char(38) NOT NULL  ,
	member               char(38) NOT NULL  ,
	mode                 varchar(100)  DEFAULT readwrite ,
	CONSTRAINT idx_po_project_member_member UNIQUE ( member ) ,
	CONSTRAINT pk_po_project_member PRIMARY KEY ( project, member ),
	FOREIGN KEY ( member ) REFERENCES rp_member( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( project ) REFERENCES rp_project( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_po_project_member_project ON rp_project_member ( project );

CREATE TABLE rp_solution_space ( 
	uuid                 char(38) NOT NULL  ,
	name                 varchar(100)   ,
	project              char(38)   ,
	description          text   ,
	enabled              boolean NOT NULL DEFAULT false ,
	readonly             boolean NOT NULL DEFAULT false ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT pk_dd_variant_uuid PRIMARY KEY ( uuid ),
	CONSTRAINT uix_dd_variant_name UNIQUE ( name ) ,
	FOREIGN KEY ( project ) REFERENCES rp_project( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_dd_variant_project ON rp_solution_space ( project );

CREATE TABLE rp_transaction ( 
	uuid                 char(38) NOT NULL  ,
	name                 varchar(100)   ,
	CONSTRAINT pk_rp_transaction PRIMARY KEY ( uuid )
 );

CREATE INDEX idx_rp_transaction_name ON rp_transaction ( name );

CREATE TABLE sp_messagebox ( 
	uuid                 char(38) NOT NULL  ,
	member               char(38) NOT NULL  ,
	message              text   ,
	read                 datetime   ,
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	project              char(38) NOT NULL  ,
	CONSTRAINT Pk_rp_messagebox_uuid PRIMARY KEY ( uuid ),
	FOREIGN KEY ( project ) REFERENCES rp_project( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( member ) REFERENCES rp_member( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_rp_messagebox_project ON sp_messagebox ( project );

CREATE INDEX idx_rp_messagebox_member ON sp_messagebox ( member );

CREATE TABLE sp_script ( 
	uuid                 char(38)   ,
	code                 blob   ,
	CONSTRAINT uix_se_script_uuid UNIQUE ( uuid ) 
 );

CREATE TABLE sp_sys_log ( 
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	level                varchar(100) NOT NULL  ,
	message              text   
 );

CREATE TABLE sp_translation ( 
	uuid                 char(38) NOT NULL  ,
	code                 char(5) NOT NULL  ,
	key                  varchar(100) NOT NULL  ,
	translation          text   ,
	dirty                boolean  DEFAULT 0 ,
	revisionFrom         integer  DEFAULT -1 ,
	revisionTo           integer  DEFAULT -1 ,
	acceptedBy           char(38)   ,
	acceptedTimestamp    datetime   ,
	timestamp            datetime NOT NULL DEFAULT CURRENT_TIMESTAMP ,
	CONSTRAINT pk_sp_translation PRIMARY KEY ( uuid, code, key )
 );

CREATE TABLE sp_user_log ( 
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	category             varchar(100)   ,
	message              text   ,
	user                 char(38)   
 );

CREATE TABLE cm_baseline_solution ( 
	solution             char(38) NOT NULL  ,
	baseline             char(38) NOT NULL  ,
	FOREIGN KEY ( baseline ) REFERENCES cm_baseline( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( solution ) REFERENCES rp_solution_space( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX pk_baseline_solution ON cm_baseline_solution ( solution, baseline );

CREATE INDEX Idx_cm_baseline_solution_baseline ON cm_baseline_solution ( baseline );

CREATE TABLE cm_request_solution ( 
	solution             char(38) NOT NULL  ,
	request              char(38) NOT NULL  ,
	CONSTRAINT pk_cm_variant_request PRIMARY KEY ( solution, request ),
	FOREIGN KEY ( request ) REFERENCES cm_request( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( solution ) REFERENCES rp_solution_space( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_cm_variant_request_request ON cm_request_solution ( request );

CREATE INDEX idx_cm_variant_request_solution ON cm_request_solution ( solution );

CREATE TABLE dd_def_object ( 
	uuid                 char(38) NOT NULL  ,
	project              char(38) NOT NULL  ,
	name                 varchar(100)   ,
	shortName            char(2)   ,
	description          text   ,
	repository           char(38) NOT NULL  ,
	id                   integer NOT NULL  ,
	icon                 blob   ,
	CONSTRAINT idx_dd_def_object_uuid UNIQUE ( uuid ) ,
	CONSTRAINT pk_ddo_definition PRIMARY KEY ( id ),
	FOREIGN KEY ( project ) REFERENCES rp_project( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_ddo_definition ON dd_def_object ( project );

CREATE TABLE dd_objectid ( 
	ddo                  char(38) NOT NULL  ,
	nextId               integer  DEFAULT 1 ,
	CONSTRAINT pk_dd_objectid PRIMARY KEY ( ddo ),
	FOREIGN KEY ( ddo ) REFERENCES dd_def_object( uuid ) ON DELETE CASCADE 
 );

CREATE TABLE po_ipt ( 
	uuid                 char(38) NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	project              char(38) NOT NULL  ,
	description          text   ,
	"type"               varchar(100)   ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT pk_po_ipt PRIMARY KEY ( uuid ),
	FOREIGN KEY ( project ) REFERENCES rp_project( uuid )  
 );

CREATE INDEX idx_po_ipt ON po_ipt ( project );

CREATE TABLE po_ipt_member ( 
	member               char(38) NOT NULL  ,
	ipt                  char(38) NOT NULL  ,
	CONSTRAINT pk_po_ipt_member PRIMARY KEY ( member, ipt ),
	FOREIGN KEY ( member ) REFERENCES rp_project_member( member )  ,
	FOREIGN KEY ( ipt ) REFERENCES po_ipt( uuid )  
 );

CREATE INDEX idx_po_ipt_member_member ON po_ipt_member ( member );

CREATE INDEX idx_po_ipt_member_ipt ON po_ipt_member ( ipt );

CREATE TABLE po_role ( 
	uuid                 char(38) NOT NULL  ,
	project              char(38) NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	description          text   ,
	state                varchar(100)  DEFAULT 'enabled' ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT pk_po_role PRIMARY KEY ( uuid ),
	FOREIGN KEY ( project ) REFERENCES rp_project( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_po_role ON po_role ( project );

CREATE TABLE po_role_ddo_transaction ( 
	role                 char(38) NOT NULL  ,
	ddo                  char(38) NOT NULL  ,
	transaction_uuid     char(38) NOT NULL  ,
	CONSTRAINT pk_po_ddo_transaction PRIMARY KEY ( ddo, transaction_uuid, role ),
	FOREIGN KEY ( transaction_uuid ) REFERENCES rp_transaction( uuid )  ,
	FOREIGN KEY ( ddo ) REFERENCES dd_def_object( uuid )  ,
	FOREIGN KEY ( role ) REFERENCES po_role( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_po_ddo_transaction_ddo ON po_role_ddo_transaction ( ddo );

CREATE INDEX idx_po_ddo_transaction_id ON po_role_ddo_transaction ( transaction_uuid );

CREATE INDEX idx_po_ddo_transaction_role ON po_role_ddo_transaction ( role );

CREATE TABLE po_role_member ( 
	role                 char(38) NOT NULL  ,
	member               char(38) NOT NULL  ,
	CONSTRAINT pk_po_role_member PRIMARY KEY ( role, member ),
	FOREIGN KEY ( member ) REFERENCES rp_project_member( member )  ,
	FOREIGN KEY ( role ) REFERENCES po_role( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_po_role_member ON po_role_member ( role );

CREATE INDEX idx_po_role_member_0 ON po_role_member ( member );

CREATE TABLE po_role_transaction ( 
	role                 char(38) NOT NULL  ,
	transaction_uuid     char(38) NOT NULL  ,
	CONSTRAINT pk_po_role_transaction PRIMARY KEY ( role, transaction_uuid ),
	FOREIGN KEY ( role ) REFERENCES po_role( uuid )  ,
	FOREIGN KEY ( transaction_uuid ) REFERENCES rp_transaction( uuid )  
 );

CREATE INDEX idx_po_role_transaction ON po_role_transaction ( transaction_uuid );

CREATE INDEX idx_po_role_transaction_0 ON po_role_transaction ( role );

CREATE TABLE re_document ( 
	uuid                 char(38) NOT NULL  ,
	owner                char(38)   ,
	controlNumber        varchar(255)   ,
	name                 varchar(255)   ,
	revisionNumber       varchar(255)   ,
	publicationDate      date   ,
	category             varchar(100)  DEFAULT 'report'' ,
	dms_url              text   ,
	ismsClassification   varchar(100)   ,
	govClassification    varchar(100)   ,
	layout               char(38)   ,
	cm_revision          integer  DEFAULT 0 ,
	cm_deleted           boolean  DEFAULT false ,
	cm_timestamp         datetime  DEFAULT CURRENT_TIMESTAMP ,
	CONSTRAINT Pk_re_report_uuid PRIMARY KEY ( uuid ),
	FOREIGN KEY ( layout ) REFERENCES re_layout( uuid )  ON UPDATE SET NULL
 );

CREATE INDEX Idx_re_report_stylesheet ON re_document ( layout );

CREATE TABLE re_document_solution ( 
	solution             char(38) NOT NULL  ,
	document             char(38) NOT NULL  ,
	CONSTRAINT pk_re_variant_dc PRIMARY KEY ( solution, document ),
	FOREIGN KEY ( solution ) REFERENCES rp_solution_space( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( document ) REFERENCES re_document( uuid )  
 );

CREATE INDEX idx_re_variant_dc_solution ON re_document_solution ( solution );

CREATE INDEX idx_re_variant_dc_document ON re_document_solution ( document );

CREATE TABLE re_documenttree ( 
	parent               char(38) NOT NULL  ,
	child                char(38) NOT NULL  ,
	CONSTRAINT pk_re_documenttree PRIMARY KEY ( parent, child ),
	FOREIGN KEY ( parent ) REFERENCES re_document( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( child ) REFERENCES re_document( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_re_documenttree_parent ON re_documenttree ( parent );

CREATE INDEX idx_re_documenttree_child ON re_documenttree ( child );

CREATE TABLE re_layout_solution ( 
	solution             char(38) NOT NULL  ,
	layout               char(38) NOT NULL  ,
	CONSTRAINT pk_re_layout_solution PRIMARY KEY ( solution, layout ),
	FOREIGN KEY ( solution ) REFERENCES rp_solution_space( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( layout ) REFERENCES re_layout( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX Idx_re_layout_solution_solution ON re_layout_solution ( solution );

CREATE INDEX Idx_re_layout_solution_layout ON re_layout_solution ( layout );

CREATE TABLE re_section ( 
	uuid                 char(38) NOT NULL  ,
	document             char(38)   ,
	number               varchar(255)   ,
	caption              varchar(255)   ,
	description          text   ,
	script               char(38)   ,
	options              blob   ,
	cm_revision          integer  DEFAULT 0 ,
	cm_deleted           boolean  DEFAULT false ,
	cm_timestamp         datetime  DEFAULT CURRENT_TIMESTAMP ,
	CONSTRAINT pk_re_section PRIMARY KEY ( uuid ),
	FOREIGN KEY ( document ) REFERENCES re_document( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( script ) REFERENCES sp_script( uuid )  ON UPDATE SET NULL
 );

CREATE INDEX idx_re_section_document ON re_section ( document );

CREATE INDEX idx_re_section_script ON re_section ( script );

CREATE TABLE rp_lock ( 
	project              char(38) NOT NULL  ,
	member               char(38) NOT NULL  ,
	uuid                 char(38) NOT NULL  ,
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	FOREIGN KEY ( project ) REFERENCES rp_project( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( member ) REFERENCES rp_member( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_rp_lock_uuid ON rp_lock ( uuid );

CREATE INDEX idx_rp_lock_member ON rp_lock ( member );

CREATE INDEX Idx_rp_lock_project ON rp_lock ( project );

CREATE TABLE dd_def_attribute ( 
	uuid                 char(38) NOT NULL  ,
	name                 varchar(255) NOT NULL  ,
	ddo                  char(38) NOT NULL  ,
	"type"               varchar(100)   ,
	defaultValue         blob   ,
	sortOrder            integer  DEFAULT 100 ,
	properties           text   ,
	precision            integer   ,
	decimals             integer   ,
	unit                 varchar(100)   ,
	enums                blob   ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT idx_dd_def_attribute_unique UNIQUE ( name, ddo ) ,
	CONSTRAINT pk_dd_def_attribute PRIMARY KEY ( uuid ),
	FOREIGN KEY ( ddo ) REFERENCES dd_def_object( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_dd_def_attribute_ddo ON dd_def_attribute ( ddo );

CREATE TABLE dd_def_enum ( 
	uuid                 char(38) NOT NULL  ,
	dda                  char(38) NOT NULL  ,
	ekey                 varchar(100)   ,
	evalue               varchar(100)   ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT pk_dd_def_enum_uuid PRIMARY KEY ( uuid ),
	CONSTRAINT unq_dd_def_enum UNIQUE ( dda, ekey ) ,
	FOREIGN KEY ( dda ) REFERENCES dd_def_attribute( uuid ) ON DELETE CASCADE 
 );

CREATE TABLE dd_def_link ( 
	uuid                 char(38) NOT NULL  ,
	project              char(38) NOT NULL  ,
	left                 char(38) NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	cardinality          varchar(100)   ,
	right                char(38) NOT NULL  ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT pk_dd_def_link PRIMARY KEY ( uuid ),
	FOREIGN KEY ( project ) REFERENCES rp_project( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( left ) REFERENCES dd_def_object( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( right ) REFERENCES dd_def_object( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_dd_def_link ON dd_def_link ( project );

CREATE INDEX idx_dd_def_link_left ON dd_def_link ( left );

CREATE INDEX idx_dd_def_link_right ON dd_def_link ( right );

CREATE TABLE dd_def_link_reverse ( 
	backward             char(38) NOT NULL  ,
	foreward             char(38) NOT NULL  ,
	CONSTRAINT pk_dd_def_link_reverse PRIMARY KEY ( foreward, backward ),
	FOREIGN KEY ( foreward ) REFERENCES dd_def_link( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( backward ) REFERENCES dd_def_link( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_dd_def_link_reverse_foreware ON dd_def_link_reverse ( foreward );

CREATE INDEX idx_dd_def_link_reverse_reverse ON dd_def_link_reverse ( backward );

CREATE TABLE dd_object ( 
	uuid                 char(38) NOT NULL  ,
	definition           char(38) NOT NULL  ,
	localId              integer NOT NULL DEFAULT 0 ,
	masterId             integer  DEFAULT 0 ,
	revision             integer NOT NULL DEFAULT 0 ,
	modifiedBy           char(38) NOT NULL  ,
	owner                char(38) NOT NULL  ,
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT pk_dd_object PRIMARY KEY ( uuid ),
	FOREIGN KEY ( modifiedBy ) REFERENCES rp_project_member( member )  ,
	FOREIGN KEY ( definition ) REFERENCES dd_def_object( uuid )  ,
	FOREIGN KEY ( owner ) REFERENCES po_ipt( uuid ) ON DELETE SET NULL 
 );

CREATE INDEX idx_dd_object_definition ON dd_object ( definition );

CREATE INDEX idx_dd_object_owner ON dd_object ( owner );

CREATE INDEX idx_dd_object_modifiedBy ON dd_object ( modifiedBy );

CREATE TABLE po_role_ddl_transaction ( 
	role                 char(38) NOT NULL  ,
	ddl                  char(38) NOT NULL  ,
	transaction_uuid     char(38) NOT NULL  ,
	CONSTRAINT pk_po_role_ddl_transaction PRIMARY KEY ( role, ddl, transaction_uuid ),
	FOREIGN KEY ( role ) REFERENCES po_role( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( ddl ) REFERENCES dd_def_link( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( transaction_uuid ) REFERENCES rp_transaction( uuid )  
 );

CREATE INDEX idx_po_role_ddl_transaction ON po_role_ddl_transaction ( role );

CREATE INDEX idx_po_role_ddl_transaction_0 ON po_role_ddl_transaction ( ddl );

CREATE INDEX idx_po_role_ddl_transaction_1 ON po_role_ddl_transaction ( transaction_uuid );

CREATE TABLE re_contents ( 
	section              char(38)   ,
	ddo                  char(38)   ,
	FOREIGN KEY ( section ) REFERENCES re_section( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( ddo ) REFERENCES dd_object( uuid )  ON UPDATE SET NULL
 );

CREATE INDEX Idx_re_contents_section ON re_contents ( section );

CREATE INDEX Idx_re_contents_ddo ON re_contents ( ddo );

CREATE TABLE sp_comment ( 
	uuid                 char(38) NOT NULL  ,
	member               char(38) NOT NULL  ,
	comment              text   ,
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	ddo                  char(38)   ,
	solution             char(38)   ,
	parent               char(38)   ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT pk_pr_comments_uuid PRIMARY KEY ( uuid ),
	FOREIGN KEY ( ddo ) REFERENCES dd_object( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( member ) REFERENCES rp_member( uuid )  ,
	FOREIGN KEY ( solution ) REFERENCES rp_solution_space( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_sp_comments_ddo ON sp_comment ( ddo );

CREATE INDEX idx_sp_comments_member ON sp_comment ( member );

CREATE INDEX Idx_sp_comment_solution ON sp_comment ( solution );

CREATE TABLE sp_issue ( 
	uuid                 char(38) NOT NULL  ,
	description          text   ,
	degreeOfCompletion   integer  DEFAULT 0 ,
	startDate            date   ,
	dateOfCompletion     date   ,
	priority             varchar(100)  DEFAULT normal ,
	ddo                  char(38)   ,
	solution             char(38)   ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT pk_ms_issue_uuid PRIMARY KEY ( uuid ),
	FOREIGN KEY ( ddo ) REFERENCES dd_object( uuid )  ,
	FOREIGN KEY ( solution ) REFERENCES rp_solution_space( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX Idx_ms_issue_ddo ON sp_issue ( ddo );

CREATE INDEX Idx_sp_issue_solution ON sp_issue ( solution );

CREATE TABLE cm_ddl ( 
	baseline             char(38) NOT NULL  ,
	link                 char(38)   ,
	FOREIGN KEY ( baseline ) REFERENCES cm_baseline( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( link ) REFERENCES dd_def_link( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_cm_ddl ON cm_ddl ( baseline );

CREATE INDEX idx_cm_ddl_0 ON cm_ddl ( link );

CREATE TABLE cm_ddo ( 
	baseline             char(38) NOT NULL  ,
	object               char(38)   ,
	revision             integer NOT NULL  ,
	FOREIGN KEY ( baseline ) REFERENCES cm_baseline( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( object ) REFERENCES dd_object( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_cm_ddo_0 ON cm_ddo ( object );

CREATE INDEX idx_cm_ddo ON cm_ddo ( baseline );

CREATE TABLE dd_attribute_value ( 
	ddo                  char(38) NOT NULL  ,
	dda                  char(38) NOT NULL  ,
	value                blob   ,
	revision             integer NOT NULL DEFAULT 0 ,
	revisionFrom         integer  DEFAULT -1 ,
	revisionTo           integer  DEFAULT -1 ,
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	ddo_revision         integer   ,
	CONSTRAINT pk_dd_attribute_value PRIMARY KEY ( ddo, dda ),
	FOREIGN KEY ( ddo ) REFERENCES dd_object( uuid )  ON UPDATE CASCADE,
	FOREIGN KEY ( dda ) REFERENCES dd_def_attribute( uuid )  ON UPDATE CASCADE
 );

CREATE INDEX idx_dda_value_ddo ON dd_attribute_value ( ddo );

CREATE INDEX idx_dda_value_dda ON dd_attribute_value ( dda );

CREATE TABLE dd_ddo_solution ( 
	solution             char(38) NOT NULL  ,
	ddo                  char(38) NOT NULL  ,
	revisionFrom         integer NOT NULL DEFAULT -1 ,
	revisionTo           integer NOT NULL DEFAULT -1 ,
	modifiedBy           char(38)   ,
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	CONSTRAINT pk_dd_visibility_ddo PRIMARY KEY ( solution, ddo, revisionFrom, revisionTo ),
	FOREIGN KEY ( solution ) REFERENCES rp_solution_space( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( ddo ) REFERENCES dd_object( uuid )  
 );

CREATE INDEX idx_dd_ddo_solution_soluition ON dd_ddo_solution ( solution );

CREATE INDEX idx_dd_ddo_solution_ddo ON dd_ddo_solution ( ddo );

CREATE INDEX idx_dd_ddo_solution_modifiedBy ON dd_ddo_solution ( modifiedBy );

CREATE TABLE dd_def_hierarchy ( 
	uuid                 char(38) NOT NULL  ,
	project              char(38) NOT NULL  ,
	name                 varchar(255) NOT NULL  ,
	up                   char(38)   ,
	down                 char(38)   ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT pk_dd_def_hierarchy PRIMARY KEY ( uuid ),
	FOREIGN KEY ( project ) REFERENCES rp_project( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( down, up ) REFERENCES dd_def_link( uuid, uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_dd_def_hierarchy_up ON dd_def_hierarchy ( up );

CREATE INDEX idx_dd_def_hierarchy_down ON dd_def_hierarchy ( down );

CREATE INDEX idx_dd_def_hierarchy ON dd_def_hierarchy ( project );

CREATE TABLE dd_link ( 
	uuid                 char(38) NOT NULL  ,
	definition           char(38) NOT NULL  ,
	do_left              char(38) NOT NULL  ,
	do_right             char(38) NOT NULL  ,
	modifiedBy           char(38) NOT NULL  ,
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT pk_dd_link PRIMARY KEY ( uuid ),
	FOREIGN KEY ( definition ) REFERENCES dd_def_link( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( modifiedBy ) REFERENCES rp_project_member( member )  ,
	FOREIGN KEY ( do_left ) REFERENCES dd_object( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( do_right ) REFERENCES dd_object( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_dd_link_definition ON dd_link ( definition );

CREATE INDEX idx_dd_link_source ON dd_link ( do_left );

CREATE INDEX idx_dd_link_target ON dd_link ( do_right );

CREATE INDEX idx_dd_link_0 ON dd_link ( modifiedBy );

CREATE TABLE dm_diagram ( 
	uuid                 char(38) NOT NULL  ,
	class                varchar(100)   ,
	ddl                  char(38)   ,
	ddo                  char(38)   ,
	repository           char(38) NOT NULL  ,
	CONSTRAINT Pk_diagram PRIMARY KEY ( uuid ),
	FOREIGN KEY ( ddo ) REFERENCES dd_object( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( ddl ) REFERENCES dd_link( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_dm_diagram ON dm_diagram ( ddo );

CREATE INDEX idx_dm_diagram_0 ON dm_diagram ( ddl );

CREATE TABLE dm_diagram_properties ( 
	diagram              char(38) NOT NULL  ,
	name                 varchar(100) NOT NULL  ,
	value                blob   ,
	CONSTRAINT pk_dm_diagram_properties PRIMARY KEY ( diagram, name ),
	FOREIGN KEY ( diagram ) REFERENCES dm_diagram( uuid )  
 );

CREATE INDEX idx_dm_diagram_properties ON dm_diagram_properties ( diagram );

CREATE TABLE dm_shape ( 
	uuid                 char(38) NOT NULL  ,
	diagram              char(38) NOT NULL  ,
	CONSTRAINT Pk_shape PRIMARY KEY ( uuid ),
	FOREIGN KEY ( diagram ) REFERENCES dm_diagram( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_dm_shape ON dm_shape ( diagram );

CREATE TABLE dm_shape_properties ( 
	shape                char(38)   ,
	name                 varchar(100)   ,
	value                blob   ,
	FOREIGN KEY ( shape ) REFERENCES dm_shape( uuid ) ON DELETE CASCADE 
 );

CREATE INDEX idx_dm_shape_properties ON dm_shape_properties ( shape );

CREATE TABLE dd_ddl_solution ( 
	solution             char(38) NOT NULL  ,
	ddl                  char(38) NOT NULL  ,
	leftFrom             integer NOT NULL DEFAULT -1 ,
	leftTo               integer NOT NULL DEFAULT -1 ,
	rightFrom            integer NOT NULL DEFAULT -1 ,
	rightTo              integer NOT NULL DEFAULT -1 ,
	revision             integer  DEFAULT 0 ,
	acceptedBy           char(38)   ,
	acceptedRevisionLeft integer  DEFAULT -1 ,
	acceptedRevisionRight integer  DEFAULT -1 ,
	acceptedState        varchar(100)  DEFAULT unkown ,
	modifiedBy           char(38) NOT NULL  ,
	timestamp            datetime  DEFAULT CURRENT_TIMESTAMP ,
	CONSTRAINT pk_dd_variant_ddl PRIMARY KEY ( solution, ddl ),
	FOREIGN KEY ( solution ) REFERENCES rp_solution_space( uuid ) ON DELETE CASCADE ,
	FOREIGN KEY ( ddl ) REFERENCES dd_link( uuid )  
 );

CREATE INDEX idx_dd_variant_ddl_solution ON dd_ddl_solution ( solution );

CREATE INDEX idx_dd_variant_ddl_dd_link ON dd_ddl_solution ( ddl );]]></string>
		</script>
		<script name="da_analysis" id="Editor_61697d" language="SQL" >
			<string><![CDATA[CREATE TABLE da_analysis ( 
	uuid                 char(38) NOT NULL  ,
	definition           char(38) NOT NULL  ,
	state                varchar(100)  DEFAULT 'closed' ,
	description          text   ,
	CONSTRAINT Pk_da_analysis_uuid PRIMARY KEY ( uuid ),
	FOREIGN KEY ( definition ) REFERENCES da_definition( uuid ) ON DELETE CASCADE ON UPDATE CASCADE
 );

CREATE INDEX Idx_da_analysis_definition ON da_analysis ( definition );]]></string>
		</script>
		<script name="rf_section" id="Editor_5033503" language="SQL" >
			<string><![CDATA[CREATE TABLE re_section_history ( 
	uuid                 char(38) NOT NULL  ,
	document             char(38)   ,
	number               varchar(255)   ,
	caption              varchar(255)   ,
	description          text   ,
	script               char(38)   ,
	options              blob   ,
	cm_modifiedBy        char(38)   ,
	cm_owner             char(38)   ,
	cm_revision          integer  DEFAULT 0 ,
	cm_deleted           boolean  DEFAULT false ,
	cm_timestamp         datetime  DEFAULT CURRENT_TIMESTAMP 
 );
]]></string>
		</script>
	</layout>
	<layout name="Views only" id="Layout_7ac8d1" joined_routing="y" show_column_type="y" show_relation="columns" >
		<entity schema="Default" name="po_ipts" color="3986C1" x="1104" y="1760" />
		<entity schema="Default" name="rp_members" color="3986C1" x="1072" y="2160" />
		<entity schema="Default" name="dac_result" color="3986C1" x="688" y="1712" />
		<entity schema="Default" name="dac_result_properties" color="3986C1" x="1120" y="1104" />
		<entity schema="Default" name="ta_assignments" color="3986C1" x="1296" y="2144" />
		<entity schema="Default" name="ip_assigned_members" color="3986C1" x="1280" y="1408" />
		<entity schema="Default" name="mm_ddh" color="CCB3FF" x="144" y="304" />
		<entity schema="Default" name="mm_enum" color="CCB3FF" x="64" y="528" />
		<entity schema="Default" name="mb_assigned_projects" color="3986C1" x="528" y="960" />
		<entity schema="Default" name="po_members" color="C8DAF5" x="656" y="2304" />
		<entity schema="Default" name="mb_assigned_roles" color="3986C1" x="704" y="1184" />
		<entity schema="Default" name="mb_assigned_teams" color="3986C1" x="528" y="784" />
		<entity schema="Default" name="dac_container" color="3986C1" x="896" y="1840" />
		<entity schema="Default" name="ro_assigned_teammembers" color="3986C1" x="1024" y="2368" />
		<entity schema="Default" name="mb_assigned_solutions" color="3986C1" x="528" y="1104" />
		<entity schema="Default" name="tl_ddo_na" color="3986C1" x="752" y="3264" />
		<entity schema="Default" name="ac_roles" color="3986C1" x="96" y="1088" />
		<entity schema="Default" name="ac_transactions" color="3986C1" x="112" y="960" />
		<entity schema="Default" name="mb_assigned_transactions" color="3986C1" x="688" y="960" />
		<entity schema="Default" name="dd_hierarchy" color="3986C1" x="896" y="960" />
		<entity schema="Default" name="ow_ipt" color="FFCC99" x="400" y="128" />
		<entity schema="Default" name="mb_modifiedBy" color="FFCC99" x="400" y="272" />
		<entity schema="Default" name="po_ddo_templates" color="3986C1" x="1584" y="608" />
		<entity schema="Default" name="do_template" color="3986C1" x="1584" y="288" />
		<entity schema="Default" name="tl_documents" color="3986C1" x="960" y="2912" />
		<entity schema="Default" name="sn_ddl" color="3986C1" x="768" y="2496" />
		<entity schema="Default" name="ds_ddo_ddl_left" color="C4E0F9" x="80" y="3632" />
		<entity schema="Default" name="ds_ddo_ddl_right" color="C4E0F9" x="320" y="3632" />
		<entity schema="Default" name="ds_ddl_left_na" color="C4E0F9" x="80" y="3136" />
		<entity schema="Default" name="ds_ddl_right_na" color="C4E0F9" x="320" y="3136" />
		<entity schema="Default" name="ddo_locked" color="3986C1" x="272" y="1072" />
		<entity schema="Default" name="ds_ddo_na" color="C4E0F9" x="48" y="1808" />
		<entity schema="Default" name="ds_ddo_na_history" color="C4E0F9" x="304" y="1808" />
		<entity schema="Default" name="ds_ddl_na" color="3986C1" x="48" y="2064" />
		<entity schema="Default" name="tl_ddo" color="3986C1" x="736" y="2928" />
		<entity schema="Default" name="ac_owner" color="3986C1" x="96" y="1232" />
		<entity schema="Default" name="ds_ddo" color="C4E0F9" x="48" y="1472" />
		<entity schema="Default" name="ds_ddo_history" color="C4E0F9" x="256" y="1472" />
		<entity schema="Default" name="re_templates" color="C4E0F9" x="976" y="480" />
		<entity schema="Default" name="re_layouts" color="3986C1" x="1184" y="432" />
		<entity schema="Default" name="mm_ddo" color="CCB3FF" x="192" y="464" />
		<entity schema="Default" name="sp_scripts" color="3986C1" x="1360" y="1024" />
		<entity schema="Default" name="rp_projects" color="3986C1" x="512" y="416" />
		<entity schema="Default" name="rp_solutions" color="3986C1" x="416" y="560" />
		<entity schema="Default" name="tl_section" color="3986C1" x="1184" y="2912" />
		<entity schema="Default" name="re_sections" color="C4E0F9" x="1168" y="80" />
		<entity schema="Default" name="re_sections_history" color="C4E0F9" x="1344" y="80" />
		<entity schema="Default" name="po_assigned_ddo" color="3986C1" x="1088" y="960" />
		<entity schema="Default" name="tr_da_title" color="3986C1" x="1216" y="960" />
		<entity schema="Default" name="re_document_reportson" color="C4E0F9" x="1344" y="464" />
		<entity schema="Default" name="sp_issues" color="3986C1" x="640" y="3616" />
		<entity schema="Default" name="dm_diagrams" color="3986C1" x="1136" y="3632" />
		<entity schema="Default" name="dm_items" color="3986C1" x="1344" y="3616" />
		<entity schema="Default" name="ds_ddl_left" color="C4E0F9" x="48" y="2528" />
		<entity schema="Default" name="ds_ddl_right" color="C4E0F9" x="304" y="2528" />
		<entity schema="Default" name="re_documents" color="C4E0F9" x="736" y="80" />
		<entity schema="Default" name="re_documents_history" color="C4E0F9" x="944" y="80" />
		<group name="report engine (re)" color="C4E0F9" >
			<entity schema="Default" name="re_sections" />
			<entity schema="Default" name="re_templates" />
			<entity schema="Default" name="re_sections_history" />
			<entity schema="Default" name="re_documents" />
			<entity schema="Default" name="re_documents_history" />
			<entity schema="Default" name="re_document_reportson" />
		</group>
		<group name="meta model (mm)" color="CCB3FF" >
			<comment><![CDATA[This group contains all views related to the meta model.]]></comment>
			<entity schema="Default" name="mm_ddh" />
			<entity schema="Default" name="mm_ddo" />
			<entity schema="Default" name="mm_enum" />
		</group>
		<group name="team member (mb)" color="C4E0F9" >
			<entity schema="Default" name="mb_assigned_projects" />
			<entity schema="Default" name="mb_assigned_roles" />
			<entity schema="Default" name="mb_assigned_solutions" />
			<entity schema="Default" name="mb_assigned_teams" />
			<entity schema="Default" name="mb_assigned_transactions" />
		</group>
		<group name="Solution Space (ds)" color="C4E0F9" >
			<entity schema="Default" name="ds_ddl_left" />
			<entity schema="Default" name="ds_ddl_right" />
			<entity schema="Default" name="ds_ddo" />
			<entity schema="Default" name="ds_ddo_history" />
			<entity schema="Default" name="ds_ddo_na" />
			<entity schema="Default" name="ds_ddo_na_history" />
			<entity schema="Default" name="ds_ddl_left_na" />
			<entity schema="Default" name="ds_ddl_right_na" />
			<entity schema="Default" name="ds_ddo_ddl_right" />
			<entity schema="Default" name="ds_ddo_ddl_left" />
		</group>
		<group name="Timline (tl)" color="C4E0F9" >
			<entity schema="Default" name="tl_ddo" />
			<entity schema="Default" name="tl_ddo_na" />
			<entity schema="Default" name="tl_section" />
			<entity schema="Default" name="tl_documents" />
		</group>
		<group name="Access Control (ac)" color="C4E0F9" >
			<entity schema="Default" name="ac_roles" />
			<entity schema="Default" name="ac_transactions" />
			<entity schema="Default" name="ddo_locked" />
			<entity schema="Default" name="ac_owner" />
		</group>
		<group name="Group_Utilities" color="FFCC99" >
			<entity schema="Default" name="ow_ipt" />
			<entity schema="Default" name="mb_modifiedBy" />
		</group>
		<group name="Script Engine (se)" color="C4E0F9" >
			<entity schema="Default" name="sp_scripts" />
		</group>
		<group name="Repository" color="C4E0F9" >
			<entity schema="Default" name="rp_projects" />
			<entity schema="Default" name="rp_solutions" />
		</group>
		<script name="Sql_Editor" id="Editor_5e4dcb7" language="SQL" >
			<string><![CDATA[SELECT * FROM ddo_definitions]]></string>
		</script>
		<script name="dd_objects_live" id="Editor_5a84dbb" language="SQL" >
			<string><![CDATA[SELECT * 
FROM
	dd_objects_live e,
	mb_assigned_projects s,
	ddo_locked d;]]></string>
		</script>
		<script name="ddo_locked" id="Editor_11857f1" language="SQL" >
			<string><![CDATA[SELECT * 
FROM
	ddo_locked d;]]></string>
		</script>
		<script name="ds_uuid" id="Editor_4017279" language="SQL" >
			<string><![CDATA[SELECT ds_uuid, ie_uuid, ie_name, ie_degree_of_completion, ie_start_date, ie_due_date, ie_date_of_completion, ie_state, ie_priority, 
	ie_responsible, ie_tracker, ie_workflow, ie_dd_type, ie_dd_uuid, ie_ow_uuid, ie_ow_account, ie_ow_name, ie_cm_timestamp
FROM
	sp_issues s;]]></string>
		</script>
		<script name="mb_assigned_projects" id="Editor_2e2b49" language="SQL" >
			<string><![CDATA[SELECT * 
FROM
	mb_assigned_projects s;]]></string>
		</script>
		<script name="ro_assignments" id="Editor_2d285fb" language="SQL" >
			<string><![CDATA[SELECT * 
FROM
	ro_assignments s;]]></string>
		</script>
		<script name="tg_dd_ddl_solution_bu" id="Editor_2eccb28" language="SQL" >
			<string><![CDATA[CREATE TRIGGER tg_dd_ddl_solution_bu BEFORE UPDATE ON dd_ddl_solution FOR EACH ROW BEGIN INSERT OR REPLACE INTO dd_ddl_solution_history SELECT * FROM dd_ddl_solution WHERE solution=OLD.solution AND ddl=OLD.ddl; END]]></string>
		</script>
	</layout>
</project>